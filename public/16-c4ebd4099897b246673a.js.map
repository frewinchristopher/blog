{"version":3,"sources":["webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/lodash/_nativeCreate.js","webpack:///./node_modules/lodash/_assocIndexOf.js","webpack:///./node_modules/lodash/_getMapData.js","webpack:///./node_modules/react-image-webp/dist/index.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getNative.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/element-resize-detector/src/collection-utils.js","webpack:///./node_modules/element-resize-detector/src/browser-detector.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/lodash/get.js","webpack:///./node_modules/lodash/_baseGet.js","webpack:///./node_modules/lodash/_castPath.js","webpack:///./node_modules/lodash/_isKey.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/lodash/_stringToPath.js","webpack:///./node_modules/lodash/_memoizeCapped.js","webpack:///./node_modules/lodash/memoize.js","webpack:///./node_modules/lodash/_MapCache.js","webpack:///./node_modules/lodash/_mapCacheClear.js","webpack:///./node_modules/lodash/_Hash.js","webpack:///./node_modules/lodash/_hashClear.js","webpack:///./node_modules/lodash/_baseIsNative.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/_isMasked.js","webpack:///./node_modules/lodash/_coreJsData.js","webpack:///./node_modules/lodash/_toSource.js","webpack:///./node_modules/lodash/_getValue.js","webpack:///./node_modules/lodash/_hashDelete.js","webpack:///./node_modules/lodash/_hashGet.js","webpack:///./node_modules/lodash/_hashHas.js","webpack:///./node_modules/lodash/_hashSet.js","webpack:///./node_modules/lodash/_ListCache.js","webpack:///./node_modules/lodash/_listCacheClear.js","webpack:///./node_modules/lodash/_listCacheDelete.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/_listCacheGet.js","webpack:///./node_modules/lodash/_listCacheHas.js","webpack:///./node_modules/lodash/_listCacheSet.js","webpack:///./node_modules/lodash/_Map.js","webpack:///./node_modules/lodash/_mapCacheDelete.js","webpack:///./node_modules/lodash/_isKeyable.js","webpack:///./node_modules/lodash/_mapCacheGet.js","webpack:///./node_modules/lodash/_mapCacheHas.js","webpack:///./node_modules/lodash/_mapCacheSet.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_baseToString.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_toKey.js","webpack:///./node_modules/xn-snowflakes/dist/index.js","webpack:///./node_modules/xn-snowflakes/dist/snowflakes.js","webpack:///./node_modules/xn-snowflakes/dist/snowflake.js","webpack:///./node_modules/element-resize-detector/src/element-resize-detector.js","webpack:///./node_modules/element-resize-detector/src/element-utils.js","webpack:///./node_modules/element-resize-detector/src/listener-handler.js","webpack:///./node_modules/element-resize-detector/src/id-generator.js","webpack:///./node_modules/element-resize-detector/src/id-handler.js","webpack:///./node_modules/element-resize-detector/src/reporter.js","webpack:///./node_modules/batch-processor/src/batch-processor.js","webpack:///./node_modules/batch-processor/src/utils.js","webpack:///./node_modules/element-resize-detector/src/state-handler.js","webpack:///./node_modules/element-resize-detector/src/detection-strategy/object.js","webpack:///./node_modules/element-resize-detector/src/detection-strategy/scroll.js","webpack:///./node_modules/pts/dist/es2015/Util.js","webpack:///./node_modules/pts/dist/es2015/LinearAlgebra.js","webpack:///./node_modules/pts/dist/es2015/Op.js","webpack:///./node_modules/pts/dist/es2015/Num.js","webpack:///./node_modules/pts/dist/es2015/Pt.js","webpack:///./node_modules/pts/dist/es2015/UI.js","webpack:///./node_modules/pts/dist/es2015/Space.js","webpack:///./node_modules/pts/dist/es2015/Form.js","webpack:///./node_modules/pts/dist/es2015/Typography.js","webpack:///./node_modules/pts/dist/es2015/Canvas.js","webpack:///./node_modules/pts/dist/es2015/Create.js","webpack:///./node_modules/pts/dist/es2015/Color.js","webpack:///./node_modules/pts/dist/es2015/Dom.js","webpack:///./node_modules/pts/dist/es2015/Svg.js","webpack:///./node_modules/pts/dist/es2015/Physics.js","webpack:///./node_modules/pts/dist/es2015/_module.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","withPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_react","_router","_gatsby","path","normalizePath","NavLinkPropTypes","activeClassName","string","activeStyle","object","GatsbyLink","_React$Component","props","_this","call","this","_ref","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","parsePath","pathname","componentDidMount","ref","el","cb","io","_this2","innerRef","entries","forEach","entry","target","isIntersecting","intersectionRatio","unobserve","disconnect","observe","render","_this3","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","createElement","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","Component","propTypes","func","isRequired","bool","_default","options","___navigate","console","warn","___push","___replace","module","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","hasOwnProperty","apply","nativeCreate","getNative","eq","array","isKeyable","map","data","__data__","defineProperty","value","a","_typeof","Symbol","iterator","constructor","_createClass","b","c","d","enumerable","configurable","writable","_react2","Image","TypeError","_classCallCheck","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","create","setPrototypeOf","_inherits","document","getContext","toDataURL","src","webp","alt","title","f","g","canUseWebP","isArray","Array","baseGetTag","isObjectLike","symbolTag","freeGlobal","freeSelf","self","root","Function","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","undefined","baseIsNative","getValue","type","collection","callback","result","detector","isIE","version","agent","navigator","userAgent","toLowerCase","v","div","all","getElementsByTagName","innerHTML","undef","isLegacyOpera","opera","$export","aFunction","toObject","fails","$sort","sort","test","P","F","comparefn","baseGet","defaultValue","castPath","toKey","index","isKey","stringToPath","toString","isSymbol","reIsDeepProp","reIsPlainProp","global","objectProto","nativeObjectToString","isOwn","tag","unmasked","memoizeCapped","rePropName","reEscapeChar","charCodeAt","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","cache","size","clear","MapCache","FUNC_ERROR_TEXT","resolver","memoized","args","has","get","set","Cache","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","Hash","ListCache","Map","hash","hashClear","hashDelete","hashGet","hashHas","hashSet","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","funcToString","reIsNative","RegExp","asyncTag","funcTag","genTag","proxyTag","uid","coreJsData","maskSrcKey","exec","IE_PROTO","HASH_UNDEFINED","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","assocIndexOf","splice","pop","other","getMapData","baseToString","arrayMap","INFINITY","symbolProto","symbolToString","iteratee","m","p","__export","__importDefault","mod","snowflake_1","element_resize_detector_1","Snowflakes","container","body","count","color","width","height","snowflakes","animationId","erd","active","start","canvas","init","requestAnimationFrame","update","pause","toggle","ctx","position","left","top","pointerEvents","zIndex","onResize","setupTheSnow","listenTo","ele","destroy","remove","removeAllListeners","snowflake","Snowflake","reset","appendChild","clientWidth","clientHeight","fillStyle","clearRect","offStageFlakesCount","y","vy","x","vx","globalAlpha","o","beginPath","arc","r","Math","PI","closePath","fill","sleep","random","elementUtilsMaker","listenerHandlerMaker","idGeneratorMaker","idHandlerMaker","reporterMaker","browserDetector","batchProcessorMaker","stateHandler","objectStrategyMaker","scrollStrategyMaker","isCollection","obj","toArray","isElement","nodeType","getOption","name","idHandler","element","idGenerator","defaultIdHandler","reporter","batchProcessor","globalOptions","callOnAdd","debug","detectionStrategy","eventListenerHandler","elementUtils","desiredStrategy","strategyOptions","Error","onReadyCallbacks","elements","listener","onResizeCallback","listeners","addListener","add","error","elementsReady","onReadyCallback","getState","initState","id","log","isDetectable","isBusy","markBusy","makeDetectable","markAsDetectable","startSize","offsetWidth","offsetHeight","removeListener","uninstall","cleanState","busy","eventListeners","getListeners","len","idCount","generate","quiet","noop","attachFunction","utils","Batch","batch","topLevel","bottomLevel","level","fn","process","fns","asyncProcess","autoProcess","asyncFrameHandler","isProcessing","processBatch","processingBatch","processBatchAsync","setTimeout","force","localAsyncProcess","clearTimeout","prop","getObject","OBJECT_STYLE","positionCheckPerformed","getComputedStyle","mutateDom","alterPositionStyles","removeRelativeStyles","property","getNumericalValue","cssText","tabIndex","onload","getDocument","contentDocument","objectDocument","injectObject","listenerProxy","proxy","attachEvent","defaultView","addEventListener","detachEvent","removeChild","hasState","scrollbarSizes","child","insertBefore","firstChild","widthSize","heightSize","getScrollbarSizes","detectionContainerClass","addEvent","removeEvent","removeEventListener","getExpandElement","childNodes","getShrinkElement","styleId","containerClass","getElementById","containerAnimationClass","containerAnimationActiveClass","method","head","styleElement","injectStyle","injectScrollStyle","slice","unshift","isUnrendered","getStyle","elementStyle","right","bottom","widthCSS","heightCSS","storeStyle","storeCurrentSize","lastWidth","lastHeight","getWidthOffset","getHeightOffset","getExpandWidth","getExpandHeight","positionScrollbars","expand","shrink","expandWidth","expandHeight","shrinkWidth","getShrinkWidth","shrinkHeight","getShrinkHeight","scrollLeft","scrollTop","injectContainerElement","addAnimationClass","onAnimationStart","onRendered","injectScrollElements","rootContainer","scrollbarWidth","scrollbarHeight","containerStyle","containerContainer","expandChild","shrinkChild","dir","onExpandScroll","onShrinkScroll","onExpand","onShrink","registerListenersAndPositionElements","updateChildSizes","getExpandChildElement","updateDetectorElements","done","areElementsInjected","w","h","notifyListenersIfNeeded","lastNotifiedWidth","lastNotifiedHeight","handleScroll","finalizeDomMutation","ready","install","ownerDocument","contains","isInDocument","isDetached","Const","xy","yz","xz","xyz","horizontal","vertical","identical","bottom_right","bottom_left","top_left","top_right","epsilon","max","Number","MAX_VALUE","min","MIN_VALUE","pi","two_pi","half_pi","quarter_pi","one_degree","rad_to_deg","deg_to_rad","gravity","newton","gaussian","Util_Util","[object Object]","lv","_warnLevel","pos","ArrayBuffer","isView","message","defaultReturn","warnLevel","range","floor","pts","stride","loopBack","st","chunks","concat","flattenAsGroup","arr","Pt_Group","op","k","lenB","arrays","z","step","temp","LinearAlgebra_Vec","Pt_Pt","sqrt","dot","magnitude","divide","abs","ceil","round","s","LinearAlgebra_Mat","isNum","$add","transposed","elementwise","ai","alen","$multiply","transpose","make","bi","blen","useLongest","ps","reduce","zipSlice","zip","pt","cosA","sinA","tanX","tanY","sx","sy","at","scale2DMatrix","rotate2DMatrix","shear2DMatrix","p1","p2","intercept","Op_Line","yi","ang2","atan","slope","cos","sin","_errorLength","param","_errorOutofBound","anchor","angle","toAngle","xi","line","p3","threshold","$subtract","$cross","equals","magnitudeSq","asProjection","proj","$project","perpendicularFromPt","la","lb","pa","pb","y1","px","py","intersectRay2D","Num_Geom","withinBound","ray","lineOrRay","poly","sourceIsRay","intersectLineWithRay2D","intersectLine2D","next","lines1","lines2","isRay","group","lenk","_ip","gridPt","t","subtract","intersectGridWithRay2D","gg","rect","box","boundingBox","fromPtArray","Op_Rectangle","hasIntersectRect2D","intersectLines2D","sides","num","interpolate","cropAsCircle","ls","unit","multiply","fromCenter","sideIdx","graphic","atTail","perpendicular","$min","$max","topLeft","widthOrSize","fromTopLeft","center","half","within","Op_Circle","fromRect","enclose","maxValue","minValue","p0","corners","rects","merged","flatten","_center","ratio","asRows","mid","Num_Num","lerp","rect1","rect2","resetBoundingBox","radius","disc","discSqrt","t1","t2","circle","dv","dr2","dr","ar","br","ar2","br2","clone","ang","inc","Op_Triangle","toTriangle","fromCircle","Op_Polygon","midpoints","opp","oppositeSide","altitude","bisector","incenter","area","perimeter","total","md","medial","circumcenter","centroid","idx","sp","split","lines","gs","adjacentSides","mag","segments","det","sorted","dq","bot","hull","originIndex","_near","_item","unitAxis","n","poly1","poly2","projectAxis","ln","lineAt","info","which","dist","normal","edge","vertex","minDist","MAX_SAFE_INTEGER","axis","_axisOverlap","plen","b1","b2","c1","c2","smallest","lp","ins","intersectPolygon2D","polys","boxes","val","sum","currA","currB","targetA","targetB","normalizeValue","boundValue","radian","minPt","maxPt","average","ptOrIndex","direction","boundPt1","boundPt2","bounds","da","db","$cross2D","scale","scs","lenP","rotateAt2DMatrix","$take","transform2D","shearAt2DMatrix","tanx","tan","tany","mat","reflectAt2DMatrix","Float64Array","table","rad","boundAngle","toDegree","UIShape","PtBaseArray","Float32Array","super","getArgs","dimensions","randomize","_id","anchorFromPt","change","params","_ops","cross2D","cross","atan2","boundRadian","rotate2D","shear2D","reflect2D","p4","q1","q2","q3","q4","list","from","chunkSize","pts_per_segment","clamp","chunk","tc","moveBy","dim","desc","ptFn","forEachPt","Bound","_size","_topLeft","_bottomRight","_inited","_updateSize","_updateCenter","_updatePosFromTop","_updatePosFromCenter","bottomRight","depth","inited","UIPointerActions","up","down","move","drag","drop","over","out","Space_Space","bound","_time","prev","diff","end","players","playerCount","_animID","_pause","_refresh","_pointer","_isReady","_playing","player","animate","pid","animateID","resize","time","play","playItems","err","cancelAnimationFrame","duration","stop","context","_renderFunc","customRendering","isPlaying","outerBound","innerBound","Space_MultiTouchSpace","_pressed","_dragged","_hasMouse","_hasTouch","pointer","evt","_canvas","_bind","bindCanvas","_mouseDown","_mouseUp","_mouseOver","_mouseOut","_mouseMove","unbindCanvas","_touchMove","ts","item","pageX","pageY","MouseEvent","action","changedTouches","touch","_mouseAction","Form_Form","_ready","required","VisualForm","_filled","_stroked","_font","Font","filled","stroked","currentFont","groups","shape","stroke","linejoin","linecap","point","_multiple","face","weight","lineHeight","Typography_Typography","samples","distribution","avg","str","tail","trim","substr","byHeight","nh","defaultSize","Canvas_CanvasSpace","elem","_pixelScale","_autoResize","_bgcolor","_offscreen","_initialResize","_selector","Element","querySelector","nodeName","_container","_createElement","parentElement","_ctx","setAttribute","_resizeHandler","dispatchEvent","Event","opt","bgcolor","autoResize","retina","r1","devicePixelRatio","r2","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","offscreen","_offCanvas","_offCtx","auto","translate","playOnce","getBoundingClientRect","fromBoundingRect","pageXOffset","pageYOffset","background","bg","pixelScale","hasOffscreen","offscreenCtx","offscreenCanvas","Canvas_CanvasForm","parent","lastColor","fillRect","save","restore","space","_style","strokeStyle","lineWidth","lineJoin","lineCap","_space","font","off","clearOffscreen","offset","drawImage","sizeOrFont","family","_estimateTextWidth","fontWidthEstimate","estimate","textWidthEstimator","measureText","truncate","getTextWidth","textAlign","_paint","startAngle","endAngle","cc","halfsize","x1","x2","y2","moveTo","lineTo","square","polygon","img","orig","original","image","txt","maxWidth","fillText","text","verticalAlign","overrideBaseline","textBaseline","_textTruncate","_textAlign","crop","lstep","nextLine","sub","buffer","newln","dt","lastIndexOf","lsize","lbox","lpad","alignment","baseline","Create_Create","subpoints","columns","rows","orientation","$divide","dx","dy","seed","np","Create_Noise","initNoise","Create_Delaunay","grad3","permTable","perm","_n","j","n00","n01","n10","n11","_fade","tx","_mesh","triangleOnly","indices","_superTriangle","opened","_circum","closed","tris","edges","circum","triangle","_dedupe","_cache","vs","neighborPts","cs","sortEdges","dmax","tri","_triangle","circumcircle","Color_Color","_mode","_isNorm","hex","alpha","substring","hexVal","parseInt","toMode","mode","ranges","rgb","rgba","convert","fname","toUpperCase","l","u","normalized","toNorm","mapToRange","normalize","format","_hex","normalizedInput","normalizedOutput","$normalize","hsl","q","sc","hsb","XYZtoLAB","RGBtoXYZ","lab","XYZtoRGB","LABtoXYZ","LABtoLCH","RGBtoLAB","lch","LABtoRGB","LCHtoLAB","XYZtoLUV","luv","LUVtoXYZ","pow","D65","cy","nnn","refU","refV","L","cubeY","toRadian","Dom_DOMSpace","_css","appendTo","refresh","styles","backgroundColor","HTMLSpace","Dom_HTMLForm","autoClass","querySelectorAll","scopeID","parentNode","removeAll","groupID","groupCount","currentID","currentClass","border-color","border-width","border-radius","border-style","fontSize","fontFamily","styleTo","group_id","nextID","updateScope","domID","setAttr","htmlElement","getID","class","rectStyle","_checkSize","textContent","Svg_SVGSpace","svgElement","Svg_SVGForm","viewBox","xmlns","createElementNS","stroke-width","stroke-linejoin","stroke-linecap","cx","largeArc","sweep","_poly","points","fromArray","pointer-events","Physics_World","friction","_lastTime","_gravity","_friction","_damping","_particles","_bodies","_names","_bound","fromGroup","damping","bodyCount","particleCount","ms","_updateParticles","_updateBodies","_drawParticles","_drawBodies","Physics_Body","stiff","precise","m1","mass","m2","mm","delta","distSq","changed","previous","prevDt","addForce","verlet","integrate","boundConstraint","collide","klen","bk","processBody","mlen","processParticle","processEdges","Physics_Particle","_mass","_radius","_force","_prev","_lock","_body","lock","_lockPt","lastDt","lt","damp","dp","np1","np2","f1","f2","dm1","dm2","_cs","_stiff","_locks","autoLink","autoMass","linkAll","index1","index2","link","nd","n2","edgeConstraint","hit","hasIntersectPolygon","cv","eg","lambda","m0","mr0","mr1","hasIntersectCircle","__webpack_exports__"],"mappings":"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","file":"16-c4ebd4099897b246673a.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\", \"replace\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n          navigate(to, {\n            state: state,\n            replace: replace\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool\n});\nvar _default = GatsbyLink;\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(withPrefix(to), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(withPrefix(to));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(withPrefix(to));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&\"function\"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?\"symbol\":typeof a},_createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,\"value\"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),_react=require(\"react\"),_react2=_interopRequireDefault(_react);function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError(\"Cannot call a class as a function\")}function _possibleConstructorReturn(a,b){if(!a)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return b&&(\"object\"==typeof b||\"function\"==typeof b)?b:a}function _inherits(a,b){if(\"function\"!=typeof b&&null!==b)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof b);a.prototype=Object.create(b&&b.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),b&&(Object.setPrototypeOf?Object.setPrototypeOf(a,b):a.__proto__=b)}var Image=function(a){function b(){return _classCallCheck(this,b),_possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).apply(this,arguments))}return _inherits(b,a),_createClass(b,[{key:\"canUseWebP\",value:function(){var a=\"object\"===(\"undefined\"==typeof document?\"undefined\":_typeof(document))?document.createElement(\"canvas\"):{};return!!(a.getContext&&a.getContext(\"2d\"))&&0===a.toDataURL(\"image/webp\").indexOf(\"data:image/webp\")}},{key:\"render\",value:function(){var a=this.props,b=a.src,c=a.webp,d=a.alt,e=a.title,f=a.style,g=a.className,h=this.canUseWebP(),i=b;return!0===h&&(i=c),_react2.default.createElement(\"img\",{src:i,alt:d,title:e,style:f,className:g})}}]),b}(_react.Component);exports.default=Image;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","\"use strict\";\n\nvar utils = module.exports = {};\n\n/**\n * Loops through the collection and calls the callback for each element. if the callback returns truthy, the loop is broken and returns the same value.\n * @public\n * @param {*} collection The collection to loop through. Needs to have a length property set and have indices set from 0 to length - 1.\n * @param {function} callback The callback to be called for each element. The element will be given as a parameter to the callback. If this callback returns truthy, the loop is broken and the same value is returned.\n * @returns {*} The value that a callback has returned (if truthy). Otherwise nothing.\n */\nutils.forEach = function(collection, callback) {\n    for(var i = 0; i < collection.length; i++) {\n        var result = callback(collection[i]);\n        if(result) {\n            return result;\n        }\n    }\n};\n","\"use strict\";\n\nvar detector = module.exports = {};\n\ndetector.isIE = function(version) {\n    function isAnyIeVersion() {\n        var agent = navigator.userAgent.toLowerCase();\n        return agent.indexOf(\"msie\") !== -1 || agent.indexOf(\"trident\") !== -1 || agent.indexOf(\" edge/\") !== -1;\n    }\n\n    if(!isAnyIeVersion()) {\n        return false;\n    }\n\n    if(!version) {\n        return true;\n    }\n\n    //Shamelessly stolen from https://gist.github.com/padolsey/527683\n    var ieVersion = (function(){\n        var undef,\n            v = 3,\n            div = document.createElement(\"div\"),\n            all = div.getElementsByTagName(\"i\");\n\n        do {\n            div.innerHTML = \"<!--[if gt IE \" + (++v) + \"]><i></i><![endif]-->\";\n        }\n        while (all[0]);\n\n        return v > 4 ? v : undef;\n    }());\n\n    return version === ieVersion;\n};\n\ndetector.isLegacyOpera = function() {\n    return !!window.opera;\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./snowflakes\"));\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar snowflake_1 = require(\"./snowflake\");\nvar element_resize_detector_1 = __importDefault(require(\"element-resize-detector\"));\nvar Snowflakes = /** @class */ (function () {\n    function Snowflakes(container) {\n        if (container === void 0) { container = document.body; }\n        this.count = 300;\n        this.color = '#ffffff';\n        this.width = 0;\n        this.height = 0;\n        this.snowflakes = [];\n        this.animationId = 0;\n        this.erd = element_resize_detector_1.default();\n        this.active = false;\n        this.container = container;\n    }\n    Snowflakes.prototype.start = function () {\n        var _this = this;\n        // initialize, when it's not\n        if (!this.canvas) {\n            this.init();\n        }\n        this.active = true;\n        // check if there is still animation going on, if there is, do not intialize a new loop\n        if (!this.animationId) {\n            this.animationId = requestAnimationFrame(function () { return _this.update(); });\n        }\n    };\n    Snowflakes.prototype.pause = function () {\n        this.active = false;\n    };\n    Snowflakes.prototype.toggle = function () {\n        if (this.active) {\n            this.pause();\n        }\n        else {\n            this.start();\n        }\n    };\n    Snowflakes.prototype.init = function () {\n        var _this = this;\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.canvas.style.position = 'absolute';\n        this.canvas.style.left = this.canvas.style.top = '0';\n        this.canvas.style.pointerEvents = 'none';\n        this.canvas.style.zIndex = '500';\n        this.onResize();\n        this.setupTheSnow();\n        this.erd.listenTo(this.container, function (ele) {\n            _this.onResize();\n        });\n    };\n    Snowflakes.prototype.destroy = function () {\n        if (!this.canvas) {\n            return;\n        }\n        this.canvas.remove();\n        this.canvas = null;\n        this.ctx = null;\n        this.animationId = 0;\n        this.snowflakes.length = 0;\n        this.erd.removeAllListeners(this.container);\n    };\n    Snowflakes.prototype.setupTheSnow = function () {\n        if (!this.canvas) {\n            return;\n        }\n        for (var i = 0; i < this.count; i++) {\n            var snowflake = new snowflake_1.Snowflake();\n            snowflake.reset(this.width, this.height);\n            this.snowflakes.push(snowflake);\n        }\n        this.container.appendChild(this.canvas);\n    };\n    Snowflakes.prototype.onResize = function () {\n        if (!this.canvas || !this.ctx) {\n            return;\n        }\n        this.width = this.container.clientWidth;\n        this.height = this.container.clientHeight > 10000 ? 10000 : this.container.clientHeight;\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.ctx.fillStyle = this.color;\n    };\n    Snowflakes.prototype.update = function () {\n        var _this = this;\n        if (!this.ctx) {\n            return;\n        }\n        this.ctx.clearRect(0, 0, this.width, this.height);\n        var offStageFlakesCount = 0;\n        for (var i = 0; i < this.count; i++) {\n            var snowflake = this.snowflakes[i];\n            if (!this.active && (snowflake.y < 0 || snowflake.y > this.height)) {\n                offStageFlakesCount++;\n                continue;\n            }\n            snowflake.y += snowflake.vy;\n            snowflake.x += snowflake.vx;\n            // draw the flake\n            this.ctx.globalAlpha = snowflake.o;\n            this.ctx.beginPath();\n            this.ctx.arc(snowflake.x, snowflake.y, snowflake.r, 0, Math.PI * 2, false);\n            this.ctx.closePath();\n            this.ctx.fill();\n            if (snowflake.y > this.height && this.active) {\n                snowflake.reset(this.width, this.height);\n            }\n        }\n        if (offStageFlakesCount === this.count) {\n            this.destroy();\n        }\n        else {\n            this.animationId = requestAnimationFrame(function () { return _this.update(); });\n        }\n    };\n    return Snowflakes;\n}());\nexports.Snowflakes = Snowflakes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Snowflake = /** @class */ (function () {\n    function Snowflake() {\n        this.x = 0;\n        this.y = 0;\n        this.vx = 0;\n        this.vy = 0;\n        this.r = 0;\n        this.o = 0;\n        this.sleep = false;\n    }\n    Snowflake.prototype.reset = function (width, height) {\n        this.x = Math.random() * width;\n        this.y = Math.random() * (height < 100 ? -800 : -height);\n        this.vy = 1 + Math.random() * 3;\n        this.vx = 0.5 - Math.random();\n        this.r = 1 + Math.random() * 2;\n        this.o = 0.5 + Math.random() * 0.5;\n        this.sleep = false;\n    };\n    return Snowflake;\n}());\nexports.Snowflake = Snowflake;\n","\"use strict\";\n\nvar forEach                 = require(\"./collection-utils\").forEach;\nvar elementUtilsMaker       = require(\"./element-utils\");\nvar listenerHandlerMaker    = require(\"./listener-handler\");\nvar idGeneratorMaker        = require(\"./id-generator\");\nvar idHandlerMaker          = require(\"./id-handler\");\nvar reporterMaker           = require(\"./reporter\");\nvar browserDetector         = require(\"./browser-detector\");\nvar batchProcessorMaker     = require(\"batch-processor\");\nvar stateHandler            = require(\"./state-handler\");\n\n//Detection strategies.\nvar objectStrategyMaker     = require(\"./detection-strategy/object.js\");\nvar scrollStrategyMaker     = require(\"./detection-strategy/scroll.js\");\n\nfunction isCollection(obj) {\n    return Array.isArray(obj) || obj.length !== undefined;\n}\n\nfunction toArray(collection) {\n    if (!Array.isArray(collection)) {\n        var array = [];\n        forEach(collection, function (obj) {\n            array.push(obj);\n        });\n        return array;\n    } else {\n        return collection;\n    }\n}\n\nfunction isElement(obj) {\n    return obj && obj.nodeType === 1;\n}\n\n/**\n * @typedef idHandler\n * @type {object}\n * @property {function} get Gets the resize detector id of the element.\n * @property {function} set Generate and sets the resize detector id of the element.\n */\n\n/**\n * @typedef Options\n * @type {object}\n * @property {boolean} callOnAdd    Determines if listeners should be called when they are getting added.\n                                    Default is true. If true, the listener is guaranteed to be called when it has been added.\n                                    If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).\n * @property {idHandler} idHandler  A custom id handler that is responsible for generating, setting and retrieving id's for elements.\n                                    If not provided, a default id handler will be used.\n * @property {reporter} reporter    A custom reporter that handles reporting logs, warnings and errors.\n                                    If not provided, a default id handler will be used.\n                                    If set to false, then nothing will be reported.\n * @property {boolean} debug        If set to true, the the system will report debug messages as default for the listenTo method.\n */\n\n/**\n * Creates an element resize detector instance.\n * @public\n * @param {Options?} options Optional global options object that will decide how this instance will work.\n */\nmodule.exports = function(options) {\n    options = options || {};\n\n    //idHandler is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var idHandler;\n\n    if (options.idHandler) {\n        // To maintain compatability with idHandler.get(element, readonly), make sure to wrap the given idHandler\n        // so that readonly flag always is true when it's used here. This may be removed next major version bump.\n        idHandler = {\n            get: function (element) { return options.idHandler.get(element, true); },\n            set: options.idHandler.set\n        };\n    } else {\n        var idGenerator = idGeneratorMaker();\n        var defaultIdHandler = idHandlerMaker({\n            idGenerator: idGenerator,\n            stateHandler: stateHandler\n        });\n        idHandler = defaultIdHandler;\n    }\n\n    //reporter is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var reporter = options.reporter;\n\n    if(!reporter) {\n        //If options.reporter is false, then the reporter should be quiet.\n        var quiet = reporter === false;\n        reporter = reporterMaker(quiet);\n    }\n\n    //batchProcessor is currently not an option to the listenTo function, so it should not be added to globalOptions.\n    var batchProcessor = getOption(options, \"batchProcessor\", batchProcessorMaker({ reporter: reporter }));\n\n    //Options to be used as default for the listenTo function.\n    var globalOptions = {};\n    globalOptions.callOnAdd     = !!getOption(options, \"callOnAdd\", true);\n    globalOptions.debug         = !!getOption(options, \"debug\", false);\n\n    var eventListenerHandler    = listenerHandlerMaker(idHandler);\n    var elementUtils            = elementUtilsMaker({\n        stateHandler: stateHandler\n    });\n\n    //The detection strategy to be used.\n    var detectionStrategy;\n    var desiredStrategy = getOption(options, \"strategy\", \"object\");\n    var strategyOptions = {\n        reporter: reporter,\n        batchProcessor: batchProcessor,\n        stateHandler: stateHandler,\n        idHandler: idHandler\n    };\n\n    if(desiredStrategy === \"scroll\") {\n        if (browserDetector.isLegacyOpera()) {\n            reporter.warn(\"Scroll strategy is not supported on legacy Opera. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        } else if (browserDetector.isIE(9)) {\n            reporter.warn(\"Scroll strategy is not supported on IE9. Changing to object strategy.\");\n            desiredStrategy = \"object\";\n        }\n    }\n\n    if(desiredStrategy === \"scroll\") {\n        detectionStrategy = scrollStrategyMaker(strategyOptions);\n    } else if(desiredStrategy === \"object\") {\n        detectionStrategy = objectStrategyMaker(strategyOptions);\n    } else {\n        throw new Error(\"Invalid strategy name: \" + desiredStrategy);\n    }\n\n    //Calls can be made to listenTo with elements that are still being installed.\n    //Also, same elements can occur in the elements list in the listenTo function.\n    //With this map, the ready callbacks can be synchronized between the calls\n    //so that the ready callback can always be called when an element is ready - even if\n    //it wasn't installed from the function itself.\n    var onReadyCallbacks = {};\n\n    /**\n     * Makes the given elements resize-detectable and starts listening to resize events on the elements. Calls the event callback for each event for each element.\n     * @public\n     * @param {Options?} options Optional options object. These options will override the global options. Some options may not be overriden, such as idHandler.\n     * @param {element[]|element} elements The given array of elements to detect resize events of. Single element is also valid.\n     * @param {function} listener The callback to be executed for each resize event for each element.\n     */\n    function listenTo(options, elements, listener) {\n        function onResizeCallback(element) {\n            var listeners = eventListenerHandler.get(element);\n            forEach(listeners, function callListenerProxy(listener) {\n                listener(element);\n            });\n        }\n\n        function addListener(callOnAdd, element, listener) {\n            eventListenerHandler.add(element, listener);\n\n            if(callOnAdd) {\n                listener(element);\n            }\n        }\n\n        //Options object may be omitted.\n        if(!listener) {\n            listener = elements;\n            elements = options;\n            options = {};\n        }\n\n        if(!elements) {\n            throw new Error(\"At least one element required.\");\n        }\n\n        if(!listener) {\n            throw new Error(\"Listener required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        var elementsReady = 0;\n\n        var callOnAdd = getOption(options, \"callOnAdd\", globalOptions.callOnAdd);\n        var onReadyCallback = getOption(options, \"onReady\", function noop() {});\n        var debug = getOption(options, \"debug\", globalOptions.debug);\n\n        forEach(elements, function attachListenerToElement(element) {\n            if (!stateHandler.getState(element)) {\n                stateHandler.initState(element);\n                idHandler.set(element);\n            }\n\n            var id = idHandler.get(element);\n\n            debug && reporter.log(\"Attaching listener to element\", id, element);\n\n            if(!elementUtils.isDetectable(element)) {\n                debug && reporter.log(id, \"Not detectable.\");\n                if(elementUtils.isBusy(element)) {\n                    debug && reporter.log(id, \"System busy making it detectable\");\n\n                    //The element is being prepared to be detectable. Do not make it detectable.\n                    //Just add the listener, because the element will soon be detectable.\n                    addListener(callOnAdd, element, listener);\n                    onReadyCallbacks[id] = onReadyCallbacks[id] || [];\n                    onReadyCallbacks[id].push(function onReady() {\n                        elementsReady++;\n\n                        if(elementsReady === elements.length) {\n                            onReadyCallback();\n                        }\n                    });\n                    return;\n                }\n\n                debug && reporter.log(id, \"Making detectable...\");\n                //The element is not prepared to be detectable, so do prepare it and add a listener to it.\n                elementUtils.markBusy(element, true);\n                return detectionStrategy.makeDetectable({ debug: debug }, element, function onElementDetectable(element) {\n                    debug && reporter.log(id, \"onElementDetectable\");\n\n                    if (stateHandler.getState(element)) {\n                        elementUtils.markAsDetectable(element);\n                        elementUtils.markBusy(element, false);\n                        detectionStrategy.addListener(element, onResizeCallback);\n                        addListener(callOnAdd, element, listener);\n\n                        // Since the element size might have changed since the call to \"listenTo\", we need to check for this change,\n                        // so that a resize event may be emitted.\n                        // Having the startSize object is optional (since it does not make sense in some cases such as unrendered elements), so check for its existance before.\n                        // Also, check the state existance before since the element may have been uninstalled in the installation process.\n                        var state = stateHandler.getState(element);\n                        if (state && state.startSize) {\n                            var width = element.offsetWidth;\n                            var height = element.offsetHeight;\n                            if (state.startSize.width !== width || state.startSize.height !== height) {\n                                onResizeCallback(element);\n                            }\n                        }\n\n                        if(onReadyCallbacks[id]) {\n                            forEach(onReadyCallbacks[id], function(callback) {\n                                callback();\n                            });\n                        }\n                    } else {\n                        // The element has been unisntalled before being detectable.\n                        debug && reporter.log(id, \"Element uninstalled before being detectable.\");\n                    }\n\n                    delete onReadyCallbacks[id];\n\n                    elementsReady++;\n                    if(elementsReady === elements.length) {\n                        onReadyCallback();\n                    }\n                });\n            }\n\n            debug && reporter.log(id, \"Already detecable, adding listener.\");\n\n            //The element has been prepared to be detectable and is ready to be listened to.\n            addListener(callOnAdd, element, listener);\n            elementsReady++;\n        });\n\n        if(elementsReady === elements.length) {\n            onReadyCallback();\n        }\n    }\n\n    function uninstall(elements) {\n        if(!elements) {\n            return reporter.error(\"At least one element is required.\");\n        }\n\n        if (isElement(elements)) {\n            // A single element has been passed in.\n            elements = [elements];\n        } else if (isCollection(elements)) {\n            // Convert collection to array for plugins.\n            // TODO: May want to check so that all the elements in the collection are valid elements.\n            elements = toArray(elements);\n        } else {\n            return reporter.error(\"Invalid arguments. Must be a DOM element or a collection of DOM elements.\");\n        }\n\n        forEach(elements, function (element) {\n            eventListenerHandler.removeAllListeners(element);\n            detectionStrategy.uninstall(element);\n            stateHandler.cleanState(element);\n        });\n    }\n\n    return {\n        listenTo: listenTo,\n        removeListener: eventListenerHandler.removeListener,\n        removeAllListeners: eventListenerHandler.removeAllListeners,\n        uninstall: uninstall\n    };\n};\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n","\"use strict\";\n\nmodule.exports = function(options) {\n    var getState = options.stateHandler.getState;\n\n    /**\n     * Tells if the element has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is detectable or not.\n     */\n    function isDetectable(element) {\n        var state = getState(element);\n        return state && !!state.isDetectable;\n    }\n\n    /**\n     * Marks the element that it has been made detectable and ready to be listened for resize events.\n     * @public\n     * @param {element} The element to mark.\n     */\n    function markAsDetectable(element) {\n        getState(element).isDetectable = true;\n    }\n\n    /**\n     * Tells if the element is busy or not.\n     * @public\n     * @param {element} The element to check.\n     * @returns {boolean} True or false depending on if the element is busy or not.\n     */\n    function isBusy(element) {\n        return !!getState(element).busy;\n    }\n\n    /**\n     * Marks the object is busy and should not be made detectable.\n     * @public\n     * @param {element} element The element to mark.\n     * @param {boolean} busy If the element is busy or not.\n     */\n    function markBusy(element, busy) {\n        getState(element).busy = !!busy;\n    }\n\n    return {\n        isDetectable: isDetectable,\n        markAsDetectable: markAsDetectable,\n        isBusy: isBusy,\n        markBusy: markBusy\n    };\n};\n","\"use strict\";\n\nmodule.exports = function(idHandler) {\n    var eventListeners = {};\n\n    /**\n     * Gets all listeners for the given element.\n     * @public\n     * @param {element} element The element to get all listeners for.\n     * @returns All listeners for the given element.\n     */\n    function getListeners(element) {\n        var id = idHandler.get(element);\n\n        if (id === undefined) {\n            return [];\n        }\n\n        return eventListeners[id] || [];\n    }\n\n    /**\n     * Stores the given listener for the given element. Will not actually add the listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The callback that the element has added.\n     */\n    function addListener(element, listener) {\n        var id = idHandler.get(element);\n\n        if(!eventListeners[id]) {\n            eventListeners[id] = [];\n        }\n\n        eventListeners[id].push(listener);\n    }\n\n    function removeListener(element, listener) {\n        var listeners = getListeners(element);\n        for (var i = 0, len = listeners.length; i < len; ++i) {\n            if (listeners[i] === listener) {\n              listeners.splice(i, 1);\n              break;\n            }\n        }\n    }\n\n    function removeAllListeners(element) {\n      var listeners = getListeners(element);\n      if (!listeners) { return; }\n      listeners.length = 0;\n    }\n\n    return {\n        get: getListeners,\n        add: addListener,\n        removeListener: removeListener,\n        removeAllListeners: removeAllListeners\n    };\n};\n","\"use strict\";\n\nmodule.exports = function() {\n    var idCount = 1;\n\n    /**\n     * Generates a new unique id in the context.\n     * @public\n     * @returns {number} A unique id in the context.\n     */\n    function generate() {\n        return idCount++;\n    }\n\n    return {\n        generate: generate\n    };\n};\n","\"use strict\";\n\nmodule.exports = function(options) {\n    var idGenerator     = options.idGenerator;\n    var getState        = options.stateHandler.getState;\n\n    /**\n     * Gets the resize detector id of the element.\n     * @public\n     * @param {element} element The target element to get the id of.\n     * @returns {string|number|null} The id of the element. Null if it has no id.\n     */\n    function getId(element) {\n        var state = getState(element);\n\n        if (state && state.id !== undefined) {\n            return state.id;\n        }\n\n        return null;\n    }\n\n    /**\n     * Sets the resize detector id of the element. Requires the element to have a resize detector state initialized.\n     * @public\n     * @param {element} element The target element to set the id of.\n     * @returns {string|number|null} The id of the element.\n     */\n    function setId(element) {\n        var state = getState(element);\n\n        if (!state) {\n            throw new Error(\"setId required the element to have a resize detection state.\");\n        }\n\n        var id = idGenerator.generate();\n\n        state.id = id;\n\n        return id;\n    }\n\n    return {\n        get: getId,\n        set: setId\n    };\n};\n","\"use strict\";\n\n/* global console: false */\n\n/**\n * Reporter that handles the reporting of logs, warnings and errors.\n * @public\n * @param {boolean} quiet Tells if the reporter should be quiet or not.\n */\nmodule.exports = function(quiet) {\n    function noop() {\n        //Does nothing.\n    }\n\n    var reporter = {\n        log: noop,\n        warn: noop,\n        error: noop\n    };\n\n    if(!quiet && window.console) {\n        var attachFunction = function(reporter, name) {\n            //The proxy is needed to be able to call the method with the console context,\n            //since we cannot use bind.\n            reporter[name] = function reporterProxy() {\n                var f = console[name];\n                if (f.apply) { //IE9 does not support console.log.apply :)\n                    f.apply(console, arguments);\n                } else {\n                    for (var i = 0; i < arguments.length; i++) {\n                        f(arguments[i]);\n                    }\n                }\n            };\n        };\n\n        attachFunction(reporter, \"log\");\n        attachFunction(reporter, \"warn\");\n        attachFunction(reporter, \"error\");\n    }\n\n    return reporter;\n};","\"use strict\";\n\nvar utils = require(\"./utils\");\n\nmodule.exports = function batchProcessorMaker(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var asyncProcess    = utils.getOption(options, \"async\", true);\n    var autoProcess     = utils.getOption(options, \"auto\", true);\n\n    if(autoProcess && !asyncProcess) {\n        reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n        asyncProcess = true;\n    }\n\n    var batch = Batch();\n    var asyncFrameHandler;\n    var isProcessing = false;\n\n    function addFunction(level, fn) {\n        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n            // This needs to be done before, since we're checking the size of the batch to be 0.\n            processBatchAsync();\n        }\n\n        batch.add(level, fn);\n    }\n\n    function processBatch() {\n        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n        isProcessing = true;\n        while (batch.size()) {\n            var processingBatch = batch;\n            batch = Batch();\n            processingBatch.process();\n        }\n        isProcessing = false;\n    }\n\n    function forceProcessBatch(localAsyncProcess) {\n        if (isProcessing) {\n            return;\n        }\n\n        if(localAsyncProcess === undefined) {\n            localAsyncProcess = asyncProcess;\n        }\n\n        if(asyncFrameHandler) {\n            cancelFrame(asyncFrameHandler);\n            asyncFrameHandler = null;\n        }\n\n        if(localAsyncProcess) {\n            processBatchAsync();\n        } else {\n            processBatch();\n        }\n    }\n\n    function processBatchAsync() {\n        asyncFrameHandler = requestFrame(processBatch);\n    }\n\n    function clearBatch() {\n        batch           = {};\n        batchSize       = 0;\n        topLevel        = 0;\n        bottomLevel     = 0;\n    }\n\n    function cancelFrame(listener) {\n        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n        var cancel = clearTimeout;\n        return cancel(listener);\n    }\n\n    function requestFrame(callback) {\n        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n        var raf = function(fn) { return setTimeout(fn, 0); };\n        return raf(callback);\n    }\n\n    return {\n        add: addFunction,\n        force: forceProcessBatch\n    };\n};\n\nfunction Batch() {\n    var batch       = {};\n    var size        = 0;\n    var topLevel    = 0;\n    var bottomLevel = 0;\n\n    function add(level, fn) {\n        if(!fn) {\n            fn = level;\n            level = 0;\n        }\n\n        if(level > topLevel) {\n            topLevel = level;\n        } else if(level < bottomLevel) {\n            bottomLevel = level;\n        }\n\n        if(!batch[level]) {\n            batch[level] = [];\n        }\n\n        batch[level].push(fn);\n        size++;\n    }\n\n    function process() {\n        for(var level = bottomLevel; level <= topLevel; level++) {\n            var fns = batch[level];\n\n            for(var i = 0; i < fns.length; i++) {\n                var fn = fns[i];\n                fn();\n            }\n        }\n    }\n\n    function getSize() {\n        return size;\n    }\n\n    return {\n        add: add,\n        process: process,\n        size: getSize\n    };\n}\n","\"use strict\";\n\nvar utils = module.exports = {};\n\nutils.getOption = getOption;\n\nfunction getOption(options, name, defaultValue) {\n    var value = options[name];\n\n    if((value === undefined || value === null) && defaultValue !== undefined) {\n        return defaultValue;\n    }\n\n    return value;\n}\n","\"use strict\";\n\nvar prop = \"_erd\";\n\nfunction initState(element) {\n    element[prop] = {};\n    return getState(element);\n}\n\nfunction getState(element) {\n    return element[prop];\n}\n\nfunction cleanState(element) {\n    delete element[prop];\n}\n\nmodule.exports = {\n    initState: initState,\n    getState: getState,\n    cleanState: cleanState\n};\n","/**\n * Resize detection strategy that injects objects to elements in order to detect resize events.\n * Heavily inspired by: http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\n */\n\n\"use strict\";\n\nvar browserDetector = require(\"../browser-detector\");\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n\n    if(!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        if(!getObject(element)) {\n            throw new Error(\"Element is not detectable by this strategy.\");\n        }\n\n        function listenerProxy() {\n            listener(element);\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support object, but supports the resize event directly on elements.\n            getState(element).object = {\n                proxy: listenerProxy\n            };\n            element.attachEvent(\"onresize\", listenerProxy);\n        } else {\n            var object = getObject(element);\n            object.contentDocument.defaultView.addEventListener(\"resize\", listenerProxy);\n        }\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n        var debug = options.debug;\n\n        function injectObject(element, callback) {\n            var OBJECT_STYLE = \"display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; border: none; padding: 0; margin: 0; opacity: 0; z-index: -1000; pointer-events: none;\";\n\n            //The target element needs to be positioned (everything except static) so the absolute positioned object will be positioned relative to the target element.\n\n            // Position altering may be performed directly or on object load, depending on if style resolution is possible directly or not.\n            var positionCheckPerformed = false;\n\n            // The element may not yet be attached to the DOM, and therefore the style object may be empty in some browsers.\n            // Since the style object is a reference, it will be updated as soon as the element is attached to the DOM.\n            var style = window.getComputedStyle(element);\n            var width = element.offsetWidth;\n            var height = element.offsetHeight;\n\n            getState(element).startSize = {\n                width: width,\n                height: height\n            };\n\n            function mutateDom() {\n                function alterPositionStyles() {\n                    if(style.position === \"static\") {\n                        element.style.position = \"relative\";\n\n                        var removeRelativeStyles = function(reporter, element, style, property) {\n                            function getNumericalValue(value) {\n                                return value.replace(/[^-\\d\\.]/g, \"\");\n                            }\n\n                            var value = style[property];\n\n                            if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                                reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                                element.style[property] = 0;\n                            }\n                        };\n\n                        //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                        //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                        removeRelativeStyles(reporter, element, style, \"top\");\n                        removeRelativeStyles(reporter, element, style, \"right\");\n                        removeRelativeStyles(reporter, element, style, \"bottom\");\n                        removeRelativeStyles(reporter, element, style, \"left\");\n                    }\n                }\n\n                function onObjectLoad() {\n                    // The object has been loaded, which means that the element now is guaranteed to be attached to the DOM.\n                    if (!positionCheckPerformed) {\n                        alterPositionStyles();\n                    }\n\n                    /*jshint validthis: true */\n\n                    function getDocument(element, callback) {\n                        //Opera 12 seem to call the object.onload before the actual document has been created.\n                        //So if it is not present, poll it with an timeout until it is present.\n                        //TODO: Could maybe be handled better with object.onreadystatechange or similar.\n                        if(!element.contentDocument) {\n                            setTimeout(function checkForObjectDocument() {\n                                getDocument(element, callback);\n                            }, 100);\n\n                            return;\n                        }\n\n                        callback(element.contentDocument);\n                    }\n\n                    //Mutating the object element here seems to fire another load event.\n                    //Mutating the inner document of the object element is fine though.\n                    var objectElement = this;\n\n                    //Create the style element to be added to the object.\n                    getDocument(objectElement, function onObjectDocumentReady(objectDocument) {\n                        //Notify that the element is ready to be listened to.\n                        callback(element);\n                    });\n                }\n\n                // The element may be detached from the DOM, and some browsers does not support style resolving of detached elements.\n                // The alterPositionStyles needs to be delayed until we know the element has been attached to the DOM (which we are sure of when the onObjectLoad has been fired), if style resolution is not possible.\n                if (style.position !== \"\") {\n                    alterPositionStyles(style);\n                    positionCheckPerformed = true;\n                }\n\n                //Add an object element as a child to the target element that will be listened to for resize events.\n                var object = document.createElement(\"object\");\n                object.style.cssText = OBJECT_STYLE;\n                object.tabIndex = -1;\n                object.type = \"text/html\";\n                object.onload = onObjectLoad;\n\n                //Safari: This must occur before adding the object to the DOM.\n                //IE: Does not like that this happens before, even if it is also added after.\n                if(!browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n\n                element.appendChild(object);\n                getState(element).object = object;\n\n                //IE: This must occur after adding the object to the DOM.\n                if(browserDetector.isIE()) {\n                    object.data = \"about:blank\";\n                }\n            }\n\n            if(batchProcessor) {\n                batchProcessor.add(mutateDom);\n            } else {\n                mutateDom();\n            }\n        }\n\n        if(browserDetector.isIE(8)) {\n            //IE 8 does not support objects properly. Luckily they do support the resize event.\n            //So do not inject the object and notify that the element is already ready to be listened to.\n            //The event handler for the resize event is attached in the utils.addListener instead.\n            callback(element);\n        } else {\n            injectObject(element, callback);\n        }\n    }\n\n    /**\n     * Returns the child object of the target element.\n     * @private\n     * @param {element} element The target element.\n     * @returns The object element of the target.\n     */\n    function getObject(element) {\n        return getState(element).object;\n    }\n\n    function uninstall(element) {\n        if(browserDetector.isIE(8)) {\n            element.detachEvent(\"onresize\", getState(element).object.proxy);\n        } else {\n            element.removeChild(getObject(element));\n        }\n        delete getState(element).object;\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n","/**\n * Resize detection strategy that injects divs to elements in order to detect resize events on scroll events.\n * Heavily inspired by: https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js\n */\n\n\"use strict\";\n\nvar forEach = require(\"../collection-utils\").forEach;\n\nmodule.exports = function(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var batchProcessor  = options.batchProcessor;\n    var getState        = options.stateHandler.getState;\n    var hasState        = options.stateHandler.hasState;\n    var idHandler       = options.idHandler;\n\n    if (!batchProcessor) {\n        throw new Error(\"Missing required dependency: batchProcessor\");\n    }\n\n    if (!reporter) {\n        throw new Error(\"Missing required dependency: reporter.\");\n    }\n\n    //TODO: Could this perhaps be done at installation time?\n    var scrollbarSizes = getScrollbarSizes();\n\n    // Inject the scrollbar styling that prevents them from appearing sometimes in Chrome.\n    // The injected container needs to have a class, so that it may be styled with CSS (pseudo elements).\n    var styleId = \"erd_scroll_detection_scrollbar_style\";\n    var detectionContainerClass = \"erd_scroll_detection_container\";\n    injectScrollStyle(styleId, detectionContainerClass);\n\n    function getScrollbarSizes() {\n        var width = 500;\n        var height = 500;\n\n        var child = document.createElement(\"div\");\n        child.style.cssText = \"position: absolute; width: \" + width*2 + \"px; height: \" + height*2 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        var container = document.createElement(\"div\");\n        container.style.cssText = \"position: absolute; width: \" + width + \"px; height: \" + height + \"px; overflow: scroll; visibility: none; top: \" + -width*3 + \"px; left: \" + -height*3 + \"px; visibility: hidden; margin: 0; padding: 0;\";\n\n        container.appendChild(child);\n\n        document.body.insertBefore(container, document.body.firstChild);\n\n        var widthSize = width - container.clientWidth;\n        var heightSize = height - container.clientHeight;\n\n        document.body.removeChild(container);\n\n        return {\n            width: widthSize,\n            height: heightSize\n        };\n    }\n\n    function injectScrollStyle(styleId, containerClass) {\n        function injectStyle(style, method) {\n            method = method || function (element) {\n                document.head.appendChild(element);\n            };\n\n            var styleElement = document.createElement(\"style\");\n            styleElement.innerHTML = style;\n            styleElement.id = styleId;\n            method(styleElement);\n            return styleElement;\n        }\n\n        if (!document.getElementById(styleId)) {\n            var containerAnimationClass = containerClass + \"_animation\";\n            var containerAnimationActiveClass = containerClass + \"_animation_active\";\n            var style = \"/* Created by the element-resize-detector library. */\\n\";\n            style += \".\" + containerClass + \" > div::-webkit-scrollbar { display: none; }\\n\\n\";\n            style += \".\" + containerAnimationActiveClass + \" { -webkit-animation-duration: 0.1s; animation-duration: 0.1s; -webkit-animation-name: \" + containerAnimationClass + \"; animation-name: \" + containerAnimationClass + \"; }\\n\";\n            style += \"@-webkit-keyframes \" + containerAnimationClass +  \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\\n\";\n            style += \"@keyframes \" + containerAnimationClass +          \" { 0% { opacity: 1; } 50% { opacity: 0; } 100% { opacity: 1; } }\";\n            injectStyle(style);\n        }\n    }\n\n    function addAnimationClass(element) {\n        element.className += \" \" + detectionContainerClass + \"_animation_active\";\n    }\n\n    function addEvent(el, name, cb) {\n        if (el.addEventListener) {\n            el.addEventListener(name, cb);\n        } else if(el.attachEvent) {\n            el.attachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to add event listeners.\");\n        }\n    }\n\n    function removeEvent(el, name, cb) {\n        if (el.removeEventListener) {\n            el.removeEventListener(name, cb);\n        } else if(el.detachEvent) {\n            el.detachEvent(\"on\" + name, cb);\n        } else {\n            return reporter.error(\"[scroll] Don't know how to remove event listeners.\");\n        }\n    }\n\n    function getExpandElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[0];\n    }\n\n    function getShrinkElement(element) {\n        return getState(element).container.childNodes[0].childNodes[0].childNodes[1];\n    }\n\n    /**\n     * Adds a resize event listener to the element.\n     * @public\n     * @param {element} element The element that should have the listener added.\n     * @param {function} listener The listener callback to be called for each resize event of the element. The element will be given as a parameter to the listener callback.\n     */\n    function addListener(element, listener) {\n        var listeners = getState(element).listeners;\n\n        if (!listeners.push) {\n            throw new Error(\"Cannot add listener to an element that is not detectable.\");\n        }\n\n        getState(element).listeners.push(listener);\n    }\n\n    /**\n     * Makes an element detectable and ready to be listened for resize events. Will call the callback when the element is ready to be listened for resize changes.\n     * @private\n     * @param {object} options Optional options object.\n     * @param {element} element The element to make detectable\n     * @param {function} callback The callback to be called when the element is ready to be listened for resize changes. Will be called with the element as first parameter.\n     */\n    function makeDetectable(options, element, callback) {\n        if (!callback) {\n            callback = element;\n            element = options;\n            options = null;\n        }\n\n        options = options || {};\n\n        function debug() {\n            if (options.debug) {\n                var args = Array.prototype.slice.call(arguments);\n                args.unshift(idHandler.get(element), \"Scroll: \");\n                if (reporter.log.apply) {\n                    reporter.log.apply(null, args);\n                } else {\n                    for (var i = 0; i < args.length; i++) {\n                        reporter.log(args[i]);\n                    }\n                }\n            }\n        }\n\n        function isDetached(element) {\n            function isInDocument(element) {\n                return element === element.ownerDocument.body || element.ownerDocument.body.contains(element);\n            }\n\n            if (!isInDocument(element)) {\n                return true;\n            }\n\n            // FireFox returns null style in hidden iframes. See https://github.com/wnr/element-resize-detector/issues/68 and https://bugzilla.mozilla.org/show_bug.cgi?id=795520\n            if (window.getComputedStyle(element) === null) {\n                return true;\n            }\n\n            return false;\n        }\n\n        function isUnrendered(element) {\n            // Check the absolute positioned container since the top level container is display: inline.\n            var container = getState(element).container.childNodes[0];\n            var style = window.getComputedStyle(container);\n            return !style.width || style.width.indexOf(\"px\") === -1; //Can only compute pixel value when rendered.\n        }\n\n        function getStyle() {\n            // Some browsers only force layouts when actually reading the style properties of the style object, so make sure that they are all read here,\n            // so that the user of the function can be sure that it will perform the layout here, instead of later (important for batching).\n            var elementStyle            = window.getComputedStyle(element);\n            var style                   = {};\n            style.position              = elementStyle.position;\n            style.width                 = element.offsetWidth;\n            style.height                = element.offsetHeight;\n            style.top                   = elementStyle.top;\n            style.right                 = elementStyle.right;\n            style.bottom                = elementStyle.bottom;\n            style.left                  = elementStyle.left;\n            style.widthCSS              = elementStyle.width;\n            style.heightCSS             = elementStyle.height;\n            return style;\n        }\n\n        function storeStartSize() {\n            var style = getStyle();\n            getState(element).startSize = {\n                width: style.width,\n                height: style.height\n            };\n            debug(\"Element start size\", getState(element).startSize);\n        }\n\n        function initListeners() {\n            getState(element).listeners = [];\n        }\n\n        function storeStyle() {\n            debug(\"storeStyle invoked.\");\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getStyle();\n            getState(element).style = style;\n        }\n\n        function storeCurrentSize(element, width, height) {\n            getState(element).lastWidth = width;\n            getState(element).lastHeight  = height;\n        }\n\n        function getExpandChildElement(element) {\n            return getExpandElement(element).childNodes[0];\n        }\n\n        function getWidthOffset() {\n            return 2 * scrollbarSizes.width + 1;\n        }\n\n        function getHeightOffset() {\n            return 2 * scrollbarSizes.height + 1;\n        }\n\n        function getExpandWidth(width) {\n            return width + 10 + getWidthOffset();\n        }\n\n        function getExpandHeight(height) {\n            return height + 10 + getHeightOffset();\n        }\n\n        function getShrinkWidth(width) {\n            return width * 2 + getWidthOffset();\n        }\n\n        function getShrinkHeight(height) {\n            return height * 2 + getHeightOffset();\n        }\n\n        function positionScrollbars(element, width, height) {\n            var expand          = getExpandElement(element);\n            var shrink          = getShrinkElement(element);\n            var expandWidth     = getExpandWidth(width);\n            var expandHeight    = getExpandHeight(height);\n            var shrinkWidth     = getShrinkWidth(width);\n            var shrinkHeight    = getShrinkHeight(height);\n            expand.scrollLeft   = expandWidth;\n            expand.scrollTop    = expandHeight;\n            shrink.scrollLeft   = shrinkWidth;\n            shrink.scrollTop    = shrinkHeight;\n        }\n\n        function injectContainerElement() {\n            var container = getState(element).container;\n\n            if (!container) {\n                container                   = document.createElement(\"div\");\n                container.className         = detectionContainerClass;\n                container.style.cssText     = \"visibility: hidden; display: inline; width: 0px; height: 0px; z-index: -1; overflow: hidden; margin: 0; padding: 0;\";\n                getState(element).container = container;\n                addAnimationClass(container);\n                element.appendChild(container);\n\n                var onAnimationStart = function () {\n                    getState(element).onRendered && getState(element).onRendered();\n                };\n\n                addEvent(container, \"animationstart\", onAnimationStart);\n\n                // Store the event handler here so that they may be removed when uninstall is called.\n                // See uninstall function for an explanation why it is needed.\n                getState(element).onAnimationStart = onAnimationStart;\n            }\n\n            return container;\n        }\n\n        function injectScrollElements() {\n            function alterPositionStyles() {\n                var style = getState(element).style;\n\n                if(style.position === \"static\") {\n                    element.style.position = \"relative\";\n\n                    var removeRelativeStyles = function(reporter, element, style, property) {\n                        function getNumericalValue(value) {\n                            return value.replace(/[^-\\d\\.]/g, \"\");\n                        }\n\n                        var value = style[property];\n\n                        if(value !== \"auto\" && getNumericalValue(value) !== \"0\") {\n                            reporter.warn(\"An element that is positioned static has style.\" + property + \"=\" + value + \" which is ignored due to the static positioning. The element will need to be positioned relative, so the style.\" + property + \" will be set to 0. Element: \", element);\n                            element.style[property] = 0;\n                        }\n                    };\n\n                    //Check so that there are no accidental styles that will make the element styled differently now that is is relative.\n                    //If there are any, set them to 0 (this should be okay with the user since the style properties did nothing before [since the element was positioned static] anyway).\n                    removeRelativeStyles(reporter, element, style, \"top\");\n                    removeRelativeStyles(reporter, element, style, \"right\");\n                    removeRelativeStyles(reporter, element, style, \"bottom\");\n                    removeRelativeStyles(reporter, element, style, \"left\");\n                }\n            }\n\n            function getLeftTopBottomRightCssText(left, top, bottom, right) {\n                left = (!left ? \"0\" : (left + \"px\"));\n                top = (!top ? \"0\" : (top + \"px\"));\n                bottom = (!bottom ? \"0\" : (bottom + \"px\"));\n                right = (!right ? \"0\" : (right + \"px\"));\n\n                return \"left: \" + left + \"; top: \" + top + \"; right: \" + right + \"; bottom: \" + bottom + \";\";\n            }\n\n            debug(\"Injecting elements\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            alterPositionStyles();\n\n            var rootContainer = getState(element).container;\n\n            if (!rootContainer) {\n                rootContainer = injectContainerElement();\n            }\n\n            // Due to this WebKit bug https://bugs.webkit.org/show_bug.cgi?id=80808 (currently fixed in Blink, but still present in WebKit browsers such as Safari),\n            // we need to inject two containers, one that is width/height 100% and another that is left/top -1px so that the final container always is 1x1 pixels bigger than\n            // the targeted element.\n            // When the bug is resolved, \"containerContainer\" may be removed.\n\n            // The outer container can occasionally be less wide than the targeted when inside inline elements element in WebKit (see https://bugs.webkit.org/show_bug.cgi?id=152980).\n            // This should be no problem since the inner container either way makes sure the injected scroll elements are at least 1x1 px.\n\n            var scrollbarWidth          = scrollbarSizes.width;\n            var scrollbarHeight         = scrollbarSizes.height;\n            var containerContainerStyle = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; width: 100%; height: 100%; left: 0px; top: 0px;\";\n            var containerStyle          = \"position: absolute; flex: none; overflow: hidden; z-index: -1; visibility: hidden; \" + getLeftTopBottomRightCssText(-(1 + scrollbarWidth), -(1 + scrollbarHeight), -scrollbarHeight, -scrollbarWidth);\n            var expandStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var shrinkStyle             = \"position: absolute; flex: none; overflow: scroll; z-index: -1; visibility: hidden; width: 100%; height: 100%;\";\n            var expandChildStyle        = \"position: absolute; left: 0; top: 0;\";\n            var shrinkChildStyle        = \"position: absolute; width: 200%; height: 200%;\";\n\n            var containerContainer      = document.createElement(\"div\");\n            var container               = document.createElement(\"div\");\n            var expand                  = document.createElement(\"div\");\n            var expandChild             = document.createElement(\"div\");\n            var shrink                  = document.createElement(\"div\");\n            var shrinkChild             = document.createElement(\"div\");\n\n            // Some browsers choke on the resize system being rtl, so force it to ltr. https://github.com/wnr/element-resize-detector/issues/56\n            // However, dir should not be set on the top level container as it alters the dimensions of the target element in some browsers.\n            containerContainer.dir              = \"ltr\";\n\n            containerContainer.style.cssText    = containerContainerStyle;\n            containerContainer.className        = detectionContainerClass;\n            container.className                 = detectionContainerClass;\n            container.style.cssText             = containerStyle;\n            expand.style.cssText                = expandStyle;\n            expandChild.style.cssText           = expandChildStyle;\n            shrink.style.cssText                = shrinkStyle;\n            shrinkChild.style.cssText           = shrinkChildStyle;\n\n            expand.appendChild(expandChild);\n            shrink.appendChild(shrinkChild);\n            container.appendChild(expand);\n            container.appendChild(shrink);\n            containerContainer.appendChild(container);\n            rootContainer.appendChild(containerContainer);\n\n            function onExpandScroll() {\n                getState(element).onExpand && getState(element).onExpand();\n            }\n\n            function onShrinkScroll() {\n                getState(element).onShrink && getState(element).onShrink();\n            }\n\n            addEvent(expand, \"scroll\", onExpandScroll);\n            addEvent(shrink, \"scroll\", onShrinkScroll);\n\n            // Store the event handlers here so that they may be removed when uninstall is called.\n            // See uninstall function for an explanation why it is needed.\n            getState(element).onExpandScroll = onExpandScroll;\n            getState(element).onShrinkScroll = onShrinkScroll;\n        }\n\n        function registerListenersAndPositionElements() {\n            function updateChildSizes(element, width, height) {\n                var expandChild             = getExpandChildElement(element);\n                var expandWidth             = getExpandWidth(width);\n                var expandHeight            = getExpandHeight(height);\n                expandChild.style.width     = expandWidth + \"px\";\n                expandChild.style.height    = expandHeight + \"px\";\n            }\n\n            function updateDetectorElements(done) {\n                var width           = element.offsetWidth;\n                var height          = element.offsetHeight;\n\n                debug(\"Storing current size\", width, height);\n\n                // Store the size of the element sync here, so that multiple scroll events may be ignored in the event listeners.\n                // Otherwise the if-check in handleScroll is useless.\n                storeCurrentSize(element, width, height);\n\n                // Since we delay the processing of the batch, there is a risk that uninstall has been called before the batch gets to execute.\n                // Since there is no way to cancel the fn executions, we need to add an uninstall guard to all fns of the batch.\n\n                batchProcessor.add(0, function performUpdateChildSizes() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    if (options.debug) {\n                        var w = element.offsetWidth;\n                        var h = element.offsetHeight;\n\n                        if (w !== width || h !== height) {\n                            reporter.warn(idHandler.get(element), \"Scroll: Size changed before updating detector elements.\");\n                        }\n                    }\n\n                    updateChildSizes(element, width, height);\n                });\n\n                batchProcessor.add(1, function updateScrollbars() {\n                    if (!getState(element)) {\n                        debug(\"Aborting because element has been uninstalled\");\n                        return;\n                    }\n\n                    if (!areElementsInjected()) {\n                        debug(\"Aborting because element container has not been initialized\");\n                        return;\n                    }\n\n                    positionScrollbars(element, width, height);\n                });\n\n                if (done) {\n                    batchProcessor.add(2, function () {\n                        if (!getState(element)) {\n                            debug(\"Aborting because element has been uninstalled\");\n                            return;\n                        }\n\n                        if (!areElementsInjected()) {\n                          debug(\"Aborting because element container has not been initialized\");\n                          return;\n                        }\n\n                        done();\n                    });\n                }\n            }\n\n            function areElementsInjected() {\n                return !!getState(element).container;\n            }\n\n            function notifyListenersIfNeeded() {\n                function isFirstNotify() {\n                    return getState(element).lastNotifiedWidth === undefined;\n                }\n\n                debug(\"notifyListenersIfNeeded invoked\");\n\n                var state = getState(element);\n\n                // Don't notify the if the current size is the start size, and this is the first notification.\n                if (isFirstNotify() && state.lastWidth === state.startSize.width && state.lastHeight === state.startSize.height) {\n                    return debug(\"Not notifying: Size is the same as the start size, and there has been no notification yet.\");\n                }\n\n                // Don't notify if the size already has been notified.\n                if (state.lastWidth === state.lastNotifiedWidth && state.lastHeight === state.lastNotifiedHeight) {\n                    return debug(\"Not notifying: Size already notified\");\n                }\n\n\n                debug(\"Current size not notified, notifying...\");\n                state.lastNotifiedWidth = state.lastWidth;\n                state.lastNotifiedHeight = state.lastHeight;\n                forEach(getState(element).listeners, function (listener) {\n                    listener(element);\n                });\n            }\n\n            function handleRender() {\n                debug(\"startanimation triggered.\");\n\n                if (isUnrendered(element)) {\n                    debug(\"Ignoring since element is still unrendered...\");\n                    return;\n                }\n\n                debug(\"Element rendered.\");\n                var expand = getExpandElement(element);\n                var shrink = getShrinkElement(element);\n                if (expand.scrollLeft === 0 || expand.scrollTop === 0 || shrink.scrollLeft === 0 || shrink.scrollTop === 0) {\n                    debug(\"Scrollbars out of sync. Updating detector elements...\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                }\n            }\n\n            function handleScroll() {\n                debug(\"Scroll detected.\");\n\n                if (isUnrendered(element)) {\n                    // Element is still unrendered. Skip this scroll event.\n                    debug(\"Scroll event fired while unrendered. Ignoring...\");\n                    return;\n                }\n\n                var width = element.offsetWidth;\n                var height = element.offsetHeight;\n\n                if (width !== getState(element).lastWidth || height !== getState(element).lastHeight) {\n                    debug(\"Element size changed.\");\n                    updateDetectorElements(notifyListenersIfNeeded);\n                } else {\n                    debug(\"Element size has not changed (\" + width + \"x\" + height + \").\");\n                }\n            }\n\n            debug(\"registerListenersAndPositionElements invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            getState(element).onRendered = handleRender;\n            getState(element).onExpand = handleScroll;\n            getState(element).onShrink = handleScroll;\n\n            var style = getState(element).style;\n            updateChildSizes(element, style.width, style.height);\n        }\n\n        function finalizeDomMutation() {\n            debug(\"finalizeDomMutation invoked.\");\n\n            if (!getState(element)) {\n                debug(\"Aborting because element has been uninstalled\");\n                return;\n            }\n\n            var style = getState(element).style;\n            storeCurrentSize(element, style.width, style.height);\n            positionScrollbars(element, style.width, style.height);\n        }\n\n        function ready() {\n            callback(element);\n        }\n\n        function install() {\n            debug(\"Installing...\");\n            initListeners();\n            storeStartSize();\n\n            batchProcessor.add(0, storeStyle);\n            batchProcessor.add(1, injectScrollElements);\n            batchProcessor.add(2, registerListenersAndPositionElements);\n            batchProcessor.add(3, finalizeDomMutation);\n            batchProcessor.add(4, ready);\n        }\n\n        debug(\"Making detectable...\");\n\n        if (isDetached(element)) {\n            debug(\"Element is detached\");\n\n            injectContainerElement();\n\n            debug(\"Waiting until element is attached...\");\n\n            getState(element).onRendered = function () {\n                debug(\"Element is now attached\");\n                install();\n            };\n        } else {\n            install();\n        }\n    }\n\n    function uninstall(element) {\n        var state = getState(element);\n\n        if (!state) {\n            // Uninstall has been called on a non-erd element.\n            return;\n        }\n\n        // Uninstall may have been called in the following scenarios:\n        // (1) Right between the sync code and async batch (here state.busy = true, but nothing have been registered or injected).\n        // (2) In the ready callback of the last level of the batch by another element (here, state.busy = true, but all the stuff has been injected).\n        // (3) After the installation process (here, state.busy = false and all the stuff has been injected).\n        // So to be on the safe side, let's check for each thing before removing.\n\n        // We need to remove the event listeners, because otherwise the event might fire on an uninstall element which results in an error when trying to get the state of the element.\n        state.onExpandScroll && removeEvent(getExpandElement(element), \"scroll\", state.onExpandScroll);\n        state.onShrinkScroll && removeEvent(getShrinkElement(element), \"scroll\", state.onShrinkScroll);\n        state.onAnimationStart && removeEvent(state.container, \"animationstart\", state.onAnimationStart);\n\n        state.container && element.removeChild(state.container);\n    }\n\n    return {\n        makeDetectable: makeDetectable,\n        addListener: addListener,\n        uninstall: uninstall\n    };\n};\n","import { Group } from \"./Pt\";\nexport const Const = {\n    xy: \"xy\",\n    yz: \"yz\",\n    xz: \"xz\",\n    xyz: \"xyz\",\n    horizontal: 0,\n    vertical: 1,\n    identical: 0,\n    right: 4,\n    bottom_right: 5,\n    bottom: 6,\n    bottom_left: 7,\n    left: 8,\n    top_left: 1,\n    top: 2,\n    top_right: 3,\n    epsilon: 0.0001,\n    max: Number.MAX_VALUE,\n    min: Number.MIN_VALUE,\n    pi: Math.PI,\n    two_pi: 6.283185307179586,\n    half_pi: 1.5707963267948966,\n    quarter_pi: 0.7853981633974483,\n    one_degree: 0.017453292519943295,\n    rad_to_deg: 57.29577951308232,\n    deg_to_rad: 0.017453292519943295,\n    gravity: 9.81,\n    newton: 0.10197,\n    gaussian: 0.3989422804014327\n};\nexport class Util {\n    static warnLevel(lv) {\n        if (lv) {\n            Util._warnLevel = lv;\n        }\n        return Util._warnLevel;\n    }\n    static getArgs(args) {\n        if (args.length < 1)\n            return [];\n        let pos = [];\n        let isArray = Array.isArray(args[0]) || ArrayBuffer.isView(args[0]);\n        if (typeof args[0] === 'number') {\n            pos = Array.prototype.slice.call(args);\n        }\n        else if (typeof args[0] === 'object' && !isArray) {\n            let a = [\"x\", \"y\", \"z\", \"w\"];\n            let p = args[0];\n            for (let i = 0; i < a.length; i++) {\n                if ((p.length && i >= p.length) || !(a[i] in p))\n                    break;\n                pos.push(p[a[i]]);\n            }\n        }\n        else if (isArray) {\n            pos = [].slice.call(args[0]);\n        }\n        return pos;\n    }\n    static warn(message = \"error\", defaultReturn = undefined) {\n        if (Util.warnLevel() == \"error\") {\n            throw new Error(message);\n        }\n        else if (Util.warnLevel() == \"warn\") {\n            console.warn(message);\n        }\n        return defaultReturn;\n    }\n    static randomInt(range, start = 0) {\n        return Math.floor(Math.random() * range) + start;\n    }\n    static split(pts, size, stride, loopBack = false) {\n        let st = stride || size;\n        let chunks = [];\n        for (let i = 0; i < pts.length; i++) {\n            if (i * st + size > pts.length) {\n                if (loopBack) {\n                    let g = pts.slice(i * st);\n                    g = g.concat(pts.slice(0, (i * st + size) % size));\n                    chunks.push(g);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                chunks.push(pts.slice(i * st, i * st + size));\n            }\n        }\n        return chunks;\n    }\n    static flatten(pts, flattenAsGroup = true) {\n        let arr = (flattenAsGroup) ? new Group() : new Array();\n        return arr.concat.apply(arr, pts);\n    }\n    static combine(a, b, op) {\n        let result = [];\n        for (let i = 0, len = a.length; i < len; i++) {\n            for (let k = 0, lenB = b.length; k < lenB; k++) {\n                result.push(op(a[i], b[k]));\n            }\n        }\n        return result;\n    }\n    static zip(arrays) {\n        let z = [];\n        for (let i = 0, len = arrays[0].length; i < len; i++) {\n            let p = [];\n            for (let k = 0; k < arrays.length; k++) {\n                p.push(arrays[k][i]);\n            }\n            z.push(p);\n        }\n        return z;\n    }\n    static stepper(max, min = 0, stride = 1, callback) {\n        let c = min;\n        return function () {\n            c += stride;\n            if (c >= max) {\n                c = min + (c - max);\n            }\n            if (callback)\n                callback(c);\n            return c;\n        };\n    }\n    static forRange(fn, range, start = 0, step = 1) {\n        let temp = [];\n        for (let i = start, len = range; i < len; i += step) {\n            temp[i] = fn(i);\n        }\n        return temp;\n    }\n}\nUtil._warnLevel = \"mute\";\n//# sourceMappingURL=Util.js.map","import { Pt, Group } from \"./Pt\";\nimport { Line } from \"./Op\";\nexport class Vec {\n    static add(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] += b[i] || 0;\n        }\n        return a;\n    }\n    static subtract(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b;\n        }\n        else {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] -= b[i] || 0;\n        }\n        return a;\n    }\n    static multiply(a, b) {\n        if (typeof b == \"number\") {\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise multiply since the array lengths don't match: ${a.toString()} multiply-with ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] *= b[i];\n        }\n        return a;\n    }\n    static divide(a, b) {\n        if (typeof b == \"number\") {\n            if (b === 0)\n                throw new Error(\"Cannot divide by zero\");\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b;\n        }\n        else {\n            if (a.length != b.length) {\n                throw new Error(`Cannot do element-wise divide since the array lengths don't match. ${a.toString()} divide-by ${b.toString()}`);\n            }\n            for (let i = 0, len = a.length; i < len; i++)\n                a[i] /= b[i];\n        }\n        return a;\n    }\n    static dot(a, b) {\n        if (a.length != b.length)\n            throw new Error(\"Array lengths don't match\");\n        let d = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            d += a[i] * b[i];\n        }\n        return d;\n    }\n    static cross2D(a, b) {\n        return a[0] * b[1] - a[1] * b[0];\n    }\n    static cross(a, b) {\n        return new Pt((a[1] * b[2] - a[2] * b[1]), (a[2] * b[0] - a[0] * b[2]), (a[0] * b[1] - a[1] * b[0]));\n    }\n    static magnitude(a) {\n        return Math.sqrt(Vec.dot(a, a));\n    }\n    static unit(a, magnitude = undefined) {\n        let m = (magnitude === undefined) ? Vec.magnitude(a) : magnitude;\n        if (m === 0)\n            throw new Error(\"Cannot calculate unit vector because magnitude is 0\");\n        return Vec.divide(a, m);\n    }\n    static abs(a) {\n        return Vec.map(a, Math.abs);\n    }\n    static floor(a) {\n        return Vec.map(a, Math.floor);\n    }\n    static ceil(a) {\n        return Vec.map(a, Math.ceil);\n    }\n    static round(a) {\n        return Vec.map(a, Math.round);\n    }\n    static max(a) {\n        let m = Number.MIN_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.max(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static min(a) {\n        let m = Number.MAX_VALUE;\n        let index = 0;\n        for (let i = 0, len = a.length; i < len; i++) {\n            m = Math.min(m, a[i]);\n            if (m === a[i])\n                index = i;\n        }\n        return { value: m, index: index };\n    }\n    static sum(a) {\n        let s = 0;\n        for (let i = 0, len = a.length; i < len; i++)\n            s += a[i];\n        return s;\n    }\n    static map(a, fn) {\n        for (let i = 0, len = a.length; i < len; i++) {\n            a[i] = fn(a[i], i, a);\n        }\n        return a;\n    }\n}\nexport class Mat {\n    static add(a, b) {\n        if (typeof b != \"number\") {\n            if (a[0].length != b[0].length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n            if (a.length != b.length)\n                throw new Error(\"Cannot add matrix if rows' and columns' size don't match.\");\n        }\n        let g = new Group();\n        let isNum = typeof b == \"number\";\n        for (let i = 0, len = a.length; i < len; i++) {\n            g.push(a[i].$add((isNum) ? b : b[i]));\n        }\n        return g;\n    }\n    static multiply(a, b, transposed = false, elementwise = false) {\n        let g = new Group();\n        if (typeof b != \"number\") {\n            if (elementwise) {\n                if (a.length != b.length)\n                    throw new Error(\"Cannot multiply matrix element-wise because the matrices' sizes don't match.\");\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    g.push(a[ai].$multiply(b[ai]));\n                }\n            }\n            else {\n                if (!transposed && a[0].length != b.length)\n                    throw new Error(\"Cannot multiply matrix if rows in matrix-a don't match columns in matrix-b.\");\n                if (transposed && a[0].length != b[0].length)\n                    throw new Error(\"Cannot multiply matrix if transposed and the columns in both matrices don't match.\");\n                if (!transposed)\n                    b = Mat.transpose(b);\n                for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                    let p = Pt.make(b.length, 0);\n                    for (let bi = 0, blen = b.length; bi < blen; bi++) {\n                        p[bi] = Vec.dot(a[ai], b[bi]);\n                    }\n                    g.push(p);\n                }\n            }\n        }\n        else {\n            for (let ai = 0, alen = a.length; ai < alen; ai++) {\n                g.push(a[ai].$multiply(b));\n            }\n        }\n        return g;\n    }\n    static zipSlice(g, index, defaultValue = false) {\n        let z = [];\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (g[i].length - 1 < index && defaultValue === false)\n                throw `Index ${index} is out of bounds`;\n            z.push(g[i][index] || defaultValue);\n        }\n        return new Pt(z);\n    }\n    static zip(g, defaultValue = false, useLongest = false) {\n        let ps = new Group();\n        let len = (useLongest) ? g.reduce((a, b) => Math.max(a, b.length), 0) : g[0].length;\n        for (let i = 0; i < len; i++) {\n            ps.push(Mat.zipSlice(g, i, defaultValue));\n        }\n        return ps;\n    }\n    static transpose(g, defaultValue = false, useLongest = false) {\n        return Mat.zip(g, defaultValue, useLongest);\n    }\n    static transform2D(pt, m) {\n        let x = pt[0] * m[0][0] + pt[1] * m[1][0] + m[2][0];\n        let y = pt[0] * m[0][1] + pt[1] * m[1][1] + m[2][1];\n        return new Pt(x, y);\n    }\n    static scale2DMatrix(x, y) {\n        return new Group(new Pt(x, 0, 0), new Pt(0, y, 0), new Pt(0, 0, 1));\n    }\n    static rotate2DMatrix(cosA, sinA) {\n        return new Group(new Pt(cosA, sinA, 0), new Pt(-sinA, cosA, 0), new Pt(0, 0, 1));\n    }\n    static shear2DMatrix(tanX, tanY) {\n        return new Group(new Pt(1, tanX, 0), new Pt(tanY, 1, 0), new Pt(0, 0, 1));\n    }\n    static translate2DMatrix(x, y) {\n        return new Group(new Pt(1, 0, 0), new Pt(0, 1, 0), new Pt(x, y, 1));\n    }\n    static scaleAt2DMatrix(sx, sy, at) {\n        let m = Mat.scale2DMatrix(sx, sy);\n        m[2][0] = -at[0] * sx + at[0];\n        m[2][1] = -at[1] * sy + at[1];\n        return m;\n    }\n    static rotateAt2DMatrix(cosA, sinA, at) {\n        let m = Mat.rotate2DMatrix(cosA, sinA);\n        m[2][0] = at[0] * (1 - cosA) + at[1] * sinA;\n        m[2][1] = at[1] * (1 - cosA) - at[0] * sinA;\n        return m;\n    }\n    static shearAt2DMatrix(tanX, tanY, at) {\n        let m = Mat.shear2DMatrix(tanX, tanY);\n        m[2][0] = -at[1] * tanY;\n        m[2][1] = -at[0] * tanX;\n        return m;\n    }\n    static reflectAt2DMatrix(p1, p2) {\n        let intercept = Line.intercept(p1, p2);\n        if (intercept == undefined) {\n            return [\n                new Pt([-1, 0, 0]),\n                new Pt([0, 1, 0]),\n                new Pt([p1[0] + p2[0], 0, 1])\n            ];\n        }\n        else {\n            let yi = intercept.yi;\n            let ang2 = Math.atan(intercept.slope) * 2;\n            let cosA = Math.cos(ang2);\n            let sinA = Math.sin(ang2);\n            return [\n                new Pt([cosA, sinA, 0]),\n                new Pt([sinA, -cosA, 0]),\n                new Pt([-yi * sinA, yi + yi * cosA, 1])\n            ];\n        }\n    }\n}\n//# sourceMappingURL=LinearAlgebra.js.map","import { Util } from \"./Util\";\nimport { Geom, Num } from \"./Num\";\nimport { Pt, Group } from \"./Pt\";\nimport { Mat } from \"./LinearAlgebra\";\nlet _errorLength = (obj, param = \"expected\") => Util.warn(\"Group's length is less than \" + param, obj);\nlet _errorOutofBound = (obj, param = \"\") => Util.warn(`Index ${param} is out of bound in Group`, obj);\nexport class Line {\n    static fromAngle(anchor, angle, magnitude) {\n        let g = new Group(new Pt(anchor), new Pt(anchor));\n        g[1].toAngle(angle, magnitude, true);\n        return g;\n    }\n    static slope(p1, p2) {\n        return (p2[0] - p1[0] === 0) ? undefined : (p2[1] - p1[1]) / (p2[0] - p1[0]);\n    }\n    static intercept(p1, p2) {\n        if (p2[0] - p1[0] === 0) {\n            return undefined;\n        }\n        else {\n            let m = (p2[1] - p1[1]) / (p2[0] - p1[0]);\n            let c = p1[1] - m * p1[0];\n            return { slope: m, yi: c, xi: (m === 0) ? undefined : -c / m };\n        }\n    }\n    static sideOfPt2D(line, pt) {\n        return (line[1][0] - line[0][0]) * (pt[1] - line[0][1]) - (pt[0] - line[0][0]) * (line[1][1] - line[0][1]);\n    }\n    static collinear(p1, p2, p3, threshold = 0.01) {\n        let a = new Pt(0, 0, 0).to(p1).$subtract(p2);\n        let b = new Pt(0, 0, 0).to(p1).$subtract(p3);\n        return a.$cross(b).divide(1000).equals(new Pt(0, 0, 0), threshold);\n    }\n    static magnitude(line) {\n        return (line.length >= 2) ? line[1].$subtract(line[0]).magnitude() : 0;\n    }\n    static magnitudeSq(line) {\n        return (line.length >= 2) ? line[1].$subtract(line[0]).magnitudeSq() : 0;\n    }\n    static perpendicularFromPt(line, pt, asProjection = false) {\n        if (line[0].equals(line[1]))\n            return undefined;\n        let a = line[0].$subtract(line[1]);\n        let b = line[1].$subtract(pt);\n        let proj = b.$subtract(a.$project(b));\n        return (asProjection) ? proj : proj.$add(pt);\n    }\n    static distanceFromPt(line, pt) {\n        return Line.perpendicularFromPt(line, pt, true).magnitude();\n    }\n    static intersectRay2D(la, lb) {\n        let a = Line.intercept(la[0], la[1]);\n        let b = Line.intercept(lb[0], lb[1]);\n        let pa = la[0];\n        let pb = lb[0];\n        if (a == undefined) {\n            if (b == undefined)\n                return undefined;\n            let y1 = -b.slope * (pb[0] - pa[0]) + pb[1];\n            return new Pt(pa[0], y1);\n        }\n        else {\n            if (b == undefined) {\n                let y1 = -a.slope * (pa[0] - pb[0]) + pa[1];\n                return new Pt(pb[0], y1);\n            }\n            else if (b.slope != a.slope) {\n                let px = (a.slope * pa[0] - b.slope * pb[0] + pb[1] - pa[1]) / (a.slope - b.slope);\n                let py = a.slope * (px - pa[0]) + pa[1];\n                return new Pt(px, py);\n            }\n            else {\n                if (a.yi == b.yi) {\n                    return new Pt(pa[0], pa[1]);\n                }\n                else {\n                    return undefined;\n                }\n            }\n        }\n    }\n    static intersectLine2D(la, lb) {\n        let pt = Line.intersectRay2D(la, lb);\n        return (pt && Geom.withinBound(pt, la[0], la[1]) && Geom.withinBound(pt, lb[0], lb[1])) ? pt : undefined;\n    }\n    static intersectLineWithRay2D(line, ray) {\n        let pt = Line.intersectRay2D(line, ray);\n        return (pt && Geom.withinBound(pt, line[0], line[1])) ? pt : undefined;\n    }\n    static intersectPolygon2D(lineOrRay, poly, sourceIsRay = false) {\n        let fn = sourceIsRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        let pts = new Group();\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let next = (i === len - 1) ? 0 : i + 1;\n            let d = fn([poly[i], poly[next]], lineOrRay);\n            if (d)\n                pts.push(d);\n        }\n        return (pts.length > 0) ? pts : undefined;\n    }\n    static intersectLines2D(lines1, lines2, isRay = false) {\n        let group = new Group();\n        let fn = isRay ? Line.intersectLineWithRay2D : Line.intersectLine2D;\n        for (let i = 0, len = lines1.length; i < len; i++) {\n            for (let k = 0, lenk = lines2.length; k < lenk; k++) {\n                let _ip = fn(lines1[i], lines2[k]);\n                if (_ip)\n                    group.push(_ip);\n            }\n        }\n        return group;\n    }\n    static intersectGridWithRay2D(ray, gridPt) {\n        let t = Line.intercept(new Pt(ray[0]).subtract(gridPt), new Pt(ray[1]).subtract(gridPt));\n        let g = new Group();\n        if (t && t.xi)\n            g.push(new Pt(gridPt[0] + t.xi, gridPt[1]));\n        if (t && t.yi)\n            g.push(new Pt(gridPt[0], gridPt[1] + t.yi));\n        return g;\n    }\n    static intersectGridWithLine2D(line, gridPt) {\n        let g = Line.intersectGridWithRay2D(line, gridPt);\n        let gg = new Group();\n        for (let i = 0, len = g.length; i < len; i++) {\n            if (Geom.withinBound(g[i], line[0], line[1]))\n                gg.push(g[i]);\n        }\n        return gg;\n    }\n    static intersectRect2D(line, rect) {\n        let box = Geom.boundingBox(Group.fromPtArray(line));\n        if (!Rectangle.hasIntersectRect2D(box, rect))\n            return new Group();\n        return Line.intersectLines2D([line], Rectangle.sides(rect));\n    }\n    static subpoints(line, num) {\n        let pts = new Group();\n        for (let i = 1; i <= num; i++) {\n            pts.push(Geom.interpolate(line[0], line[1], i / (num + 1)));\n        }\n        return pts;\n    }\n    static crop(line, size, index = 0, cropAsCircle = true) {\n        let tdx = (index === 0) ? 1 : 0;\n        let ls = line[tdx].$subtract(line[index]);\n        if (ls[0] === 0 || size[0] === 0)\n            return line[index];\n        if (cropAsCircle) {\n            let d = ls.unit().multiply(size[1]);\n            return line[index].$add(d);\n        }\n        else {\n            let rect = Rectangle.fromCenter(line[index], size);\n            let sides = Rectangle.sides(rect);\n            let sideIdx = 0;\n            if (Math.abs(ls[1] / ls[0]) > Math.abs(size[1] / size[0])) {\n                sideIdx = (ls[1] < 0) ? 0 : 2;\n            }\n            else {\n                sideIdx = (ls[0] < 0) ? 3 : 1;\n            }\n            return Line.intersectRay2D(sides[sideIdx], line);\n        }\n    }\n    static marker(line, size, graphic = (\"arrow\" || \"line\"), atTail = true) {\n        let h = atTail ? 0 : 1;\n        let t = atTail ? 1 : 0;\n        let unit = line[h].$subtract(line[t]);\n        if (unit.magnitudeSq() === 0)\n            return new Group();\n        unit.unit();\n        let ps = Geom.perpendicular(unit).multiply(size[0]).add(line[t]);\n        if (graphic == \"arrow\") {\n            ps.add(unit.$multiply(size[1]));\n            return new Group(line[t], ps[0], ps[1]);\n        }\n        else {\n            return new Group(ps[0], ps[1]);\n        }\n    }\n    static toRect(line) {\n        return new Group(line[0].$min(line[1]), line[0].$max(line[1]));\n    }\n}\nexport class Rectangle {\n    static from(topLeft, widthOrSize, height) {\n        return Rectangle.fromTopLeft(topLeft, widthOrSize, height);\n    }\n    static fromTopLeft(topLeft, widthOrSize, height) {\n        let size = (typeof widthOrSize == \"number\") ? [widthOrSize, (height || widthOrSize)] : widthOrSize;\n        return new Group(new Pt(topLeft), new Pt(topLeft).add(size));\n    }\n    static fromCenter(center, widthOrSize, height) {\n        let half = (typeof widthOrSize == \"number\") ? [widthOrSize / 2, (height || widthOrSize) / 2] : new Pt(widthOrSize).divide(2);\n        return new Group(new Pt(center).subtract(half), new Pt(center).add(half));\n    }\n    static toCircle(pts, within = true) {\n        return Circle.fromRect(pts, within);\n    }\n    static toSquare(pts, enclose = false) {\n        let s = Rectangle.size(pts);\n        let m = (enclose) ? s.maxValue().value : s.minValue().value;\n        return Rectangle.fromCenter(Rectangle.center(pts), m, m);\n    }\n    static size(pts) {\n        return pts[0].$max(pts[1]).subtract(pts[0].$min(pts[1]));\n    }\n    static center(pts) {\n        let min = pts[0].$min(pts[1]);\n        let max = pts[0].$max(pts[1]);\n        return min.add(max.$subtract(min).divide(2));\n    }\n    static corners(rect) {\n        let p0 = rect[0].$min(rect[1]);\n        let p2 = rect[0].$max(rect[1]);\n        return new Group(p0, new Pt(p2.x, p0.y), p2, new Pt(p0.x, p2.y));\n    }\n    static sides(rect) {\n        let [p0, p1, p2, p3] = Rectangle.corners(rect);\n        return [\n            new Group(p0, p1), new Group(p1, p2),\n            new Group(p2, p3), new Group(p3, p0)\n        ];\n    }\n    static boundingBox(rects) {\n        let merged = Util.flatten(rects, false);\n        let min = Pt.make(2, Number.MAX_VALUE);\n        let max = Pt.make(2, Number.MIN_VALUE);\n        for (let i = 0, len = merged.length; i < len; i++) {\n            for (let k = 0; k < 2; k++) {\n                min[k] = Math.min(min[k], merged[i][k]);\n                max[k] = Math.max(max[k], merged[i][k]);\n            }\n        }\n        return new Group(min, max);\n    }\n    static polygon(rect) {\n        return Rectangle.corners(rect);\n    }\n    static quadrants(rect, center) {\n        let corners = Rectangle.corners(rect);\n        let _center = (center != undefined) ? new Pt(center) : Rectangle.center(rect);\n        return corners.map((c) => new Group(c, _center).boundingBox());\n    }\n    static halves(rect, ratio = 0.5, asRows = false) {\n        let min = rect[0].$min(rect[1]);\n        let max = rect[0].$max(rect[1]);\n        let mid = (asRows) ? Num.lerp(min[1], max[1], ratio) : Num.lerp(min[0], max[0], ratio);\n        return (asRows)\n            ? [new Group(min, new Pt(max[0], mid)), new Group(new Pt(min[0], mid), max)]\n            : [new Group(min, new Pt(mid, max[1])), new Group(new Pt(mid, min[1]), max)];\n    }\n    static withinBound(rect, pt) {\n        return Geom.withinBound(pt, rect[0], rect[1]);\n    }\n    static hasIntersectRect2D(rect1, rect2, resetBoundingBox = false) {\n        if (resetBoundingBox) {\n            rect1 = Geom.boundingBox(rect1);\n            rect2 = Geom.boundingBox(rect2);\n        }\n        if (rect1[0][0] > rect2[1][0] || rect2[0][0] > rect1[1][0])\n            return false;\n        if (rect1[0][1] > rect2[1][1] || rect2[0][1] > rect1[1][1])\n            return false;\n        return true;\n    }\n    static intersectRect2D(rect1, rect2) {\n        if (!Rectangle.hasIntersectRect2D(rect1, rect2))\n            return new Group();\n        return Line.intersectLines2D(Rectangle.sides(rect1), Rectangle.sides(rect2));\n    }\n}\nexport class Circle {\n    static fromRect(pts, enclose = false) {\n        let r = 0;\n        let min = r = Rectangle.size(pts).minValue().value / 2;\n        if (enclose) {\n            let max = Rectangle.size(pts).maxValue().value / 2;\n            r = Math.sqrt(min * min + max * max);\n        }\n        else {\n            r = min;\n        }\n        return new Group(Rectangle.center(pts), new Pt(r, r));\n    }\n    static fromCenter(pt, radius) {\n        return new Group(new Pt(pt), new Pt(radius, radius));\n    }\n    static withinBound(pts, pt, threshold = 0) {\n        let d = pts[0].$subtract(pt);\n        return d.dot(d) + threshold < pts[1].x * pts[1].x;\n    }\n    static intersectRay2D(pts, ray) {\n        let d = ray[0].$subtract(ray[1]);\n        let f = pts[0].$subtract(ray[0]);\n        let a = d.dot(d);\n        let b = f.dot(d);\n        let c = f.dot(f) - pts[1].x * pts[1].x;\n        let p = b / a;\n        let q = c / a;\n        let disc = p * p - q;\n        if (disc < 0) {\n            return new Group();\n        }\n        else {\n            let discSqrt = Math.sqrt(disc);\n            let t1 = -p + discSqrt;\n            let p1 = ray[0].$subtract(d.$multiply(t1));\n            if (disc === 0)\n                return new Group(p1);\n            let t2 = -p - discSqrt;\n            let p2 = ray[0].$subtract(d.$multiply(t2));\n            return new Group(p1, p2);\n        }\n    }\n    static intersectLine2D(pts, line) {\n        let ps = Circle.intersectRay2D(pts, line);\n        let g = new Group();\n        if (ps.length > 0) {\n            for (let i = 0, len = ps.length; i < len; i++) {\n                if (Rectangle.withinBound(line, ps[i]))\n                    g.push(ps[i]);\n            }\n        }\n        return g;\n    }\n    static intersectCircle2D(pts, circle) {\n        let dv = circle[0].$subtract(pts[0]);\n        let dr2 = dv.magnitudeSq();\n        let dr = Math.sqrt(dr2);\n        let ar = pts[1].x;\n        let br = circle[1].x;\n        let ar2 = ar * ar;\n        let br2 = br * br;\n        if (dr > ar + br) {\n            return new Group();\n        }\n        else if (dr < Math.abs(ar - br)) {\n            return new Group(pts[0].clone());\n        }\n        else {\n            let a = (ar2 - br2 + dr2) / (2 * dr);\n            let h = Math.sqrt(ar2 - a * a);\n            let p = dv.$multiply(a / dr).add(pts[0]);\n            return new Group(new Pt(p.x + h * dv.y / dr, p.y - h * dv.x / dr), new Pt(p.x - h * dv.y / dr, p.y + h * dv.x / dr));\n        }\n    }\n    static intersectRect2D(pts, rect) {\n        let sides = Rectangle.sides(rect);\n        let g = [];\n        for (let i = 0, len = sides.length; i < len; i++) {\n            let ps = Circle.intersectLine2D(pts, sides[i]);\n            if (ps.length > 0)\n                g.push(ps);\n        }\n        return Util.flatten(g);\n    }\n    static toRect(pts, within = false) {\n        let r = pts[1][0];\n        if (within) {\n            let half = Math.sqrt(r * r) / 2;\n            return new Group(pts[0].$subtract(half), pts[0].$add(half));\n        }\n        else {\n            return new Group(pts[0].$subtract(r), pts[0].$add(r));\n        }\n    }\n    static toTriangle(pts, within = true) {\n        if (within) {\n            let ang = -Math.PI / 2;\n            let inc = Math.PI * 2 / 3;\n            let g = new Group();\n            for (let i = 0; i < 3; i++) {\n                g.push(pts[0].clone().toAngle(ang, pts[1][0], true));\n                ang += inc;\n            }\n            return g;\n        }\n        else {\n            return Triangle.fromCenter(pts[0], pts[1][0]);\n        }\n    }\n}\nexport class Triangle {\n    static fromRect(rect) {\n        let top = rect[0].$add(rect[1]).divide(2);\n        top.y = rect[0][1];\n        let left = rect[1].clone();\n        left.x = rect[0][0];\n        return new Group(top, rect[1].clone(), left);\n    }\n    static fromCircle(circle) {\n        return Circle.toTriangle(circle, true);\n    }\n    static fromCenter(pt, size) {\n        return Triangle.fromCircle(Circle.fromCenter(pt, size));\n    }\n    static medial(pts) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        return Polygon.midpoints(pts, true);\n    }\n    static oppositeSide(pts, index) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        if (index === 0) {\n            return Group.fromPtArray([pts[1], pts[2]]);\n        }\n        else if (index === 1) {\n            return Group.fromPtArray([pts[0], pts[2]]);\n        }\n        else {\n            return Group.fromPtArray([pts[0], pts[1]]);\n        }\n    }\n    static altitude(pts, index) {\n        let opp = Triangle.oppositeSide(pts, index);\n        if (opp.length > 1) {\n            return new Group(pts[index], Line.perpendicularFromPt(opp, pts[index]));\n        }\n        else {\n            return new Group();\n        }\n    }\n    static orthocenter(pts) {\n        if (pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Triangle.altitude(pts, 0);\n        let b = Triangle.altitude(pts, 1);\n        return Line.intersectRay2D(a, b);\n    }\n    static incenter(pts) {\n        if (pts.length < 3)\n            return _errorLength(undefined, 3);\n        let a = Polygon.bisector(pts, 0).add(pts[0]);\n        let b = Polygon.bisector(pts, 1).add(pts[1]);\n        return Line.intersectRay2D(new Group(pts[0], a), new Group(pts[1], b));\n    }\n    static incircle(pts, center) {\n        let c = (center) ? center : Triangle.incenter(pts);\n        let area = Polygon.area(pts);\n        let perim = Polygon.perimeter(pts, true);\n        let r = 2 * area / perim.total;\n        return Circle.fromCenter(c, r);\n    }\n    static circumcenter(pts) {\n        let md = Triangle.medial(pts);\n        let a = [md[0], Geom.perpendicular(pts[0].$subtract(md[0])).p1.$add(md[0])];\n        let b = [md[1], Geom.perpendicular(pts[1].$subtract(md[1])).p1.$add(md[1])];\n        return Line.intersectRay2D(a, b);\n    }\n    static circumcircle(pts, center) {\n        let c = (center) ? center : Triangle.circumcenter(pts);\n        let r = pts[0].$subtract(c).magnitude();\n        return Circle.fromCenter(c, r);\n    }\n}\nexport class Polygon {\n    static centroid(pts) {\n        return Geom.centroid(pts);\n    }\n    static rectangle(center, widthOrSize, height) {\n        return Rectangle.corners(Rectangle.fromCenter(center, widthOrSize, height));\n    }\n    static fromCenter(center, radius, sides) {\n        let g = new Group();\n        for (let i = 0; i < sides; i++) {\n            let ang = Math.PI * 2 * i / sides;\n            g.push(new Pt(Math.cos(ang) * radius, Math.sin(ang) * radius).add(center));\n        }\n        return g;\n    }\n    static lineAt(pts, idx) {\n        if (idx < 0 || idx >= pts.length)\n            throw new Error(\"index out of the Polygon's range\");\n        return new Group(pts[idx], (idx === pts.length - 1) ? pts[0] : pts[idx + 1]);\n    }\n    static lines(pts, closePath = true) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        let sp = Util.split(pts, 2, 1);\n        if (closePath)\n            sp.push(new Group(pts[pts.length - 1], pts[0]));\n        return sp.map((g) => g);\n    }\n    static midpoints(pts, closePath = false, t = 0.5) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        let sides = Polygon.lines(pts, closePath);\n        let mids = sides.map((s) => Geom.interpolate(s[0], s[1], t));\n        return mids;\n    }\n    static adjacentSides(pts, index, closePath = false) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        if (index < 0 || index >= pts.length)\n            return _errorOutofBound(new Group(), index);\n        let gs = [];\n        let left = index - 1;\n        if (closePath && left < 0)\n            left = pts.length - 1;\n        if (left >= 0)\n            gs.push(new Group(pts[index], pts[left]));\n        let right = index + 1;\n        if (closePath && right > pts.length - 1)\n            right = 0;\n        if (right <= pts.length - 1)\n            gs.push(new Group(pts[index], pts[right]));\n        return gs;\n    }\n    static bisector(pts, index) {\n        let sides = Polygon.adjacentSides(pts, index, true);\n        if (sides.length >= 2) {\n            let a = sides[0][1].$subtract(sides[0][0]).unit();\n            let b = sides[1][1].$subtract(sides[1][0]).unit();\n            return a.add(b).divide(2);\n        }\n        else {\n            return undefined;\n        }\n    }\n    static perimeter(pts, closePath = false) {\n        if (pts.length < 2)\n            return _errorLength(new Group(), 2);\n        let lines = Polygon.lines(pts, closePath);\n        let mag = 0;\n        let p = Pt.make(lines.length, 0);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            let m = Line.magnitude(lines[i]);\n            mag += m;\n            p[i] = m;\n        }\n        return {\n            total: mag,\n            segments: p\n        };\n    }\n    static area(pts) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        let det = (a, b) => a[0] * b[1] - a[1] * b[0];\n        let area = 0;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (i < pts.length - 1) {\n                area += det(pts[i], pts[i + 1]);\n            }\n            else {\n                area += det(pts[i], pts[0]);\n            }\n        }\n        return Math.abs(area / 2);\n    }\n    static convexHull(pts, sorted = false) {\n        if (pts.length < 3)\n            return _errorLength(new Group(), 3);\n        if (!sorted) {\n            pts = pts.slice();\n            pts.sort((a, b) => a[0] - b[0]);\n        }\n        let left = (a, b, c) => {\n            return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]) > 0;\n        };\n        let dq = [];\n        let bot = pts.length - 2;\n        let top = bot + 3;\n        dq[bot] = pts[2];\n        dq[top] = pts[2];\n        if (left(pts[0], pts[1], pts[2])) {\n            dq[bot + 1] = pts[0];\n            dq[bot + 2] = pts[1];\n        }\n        else {\n            dq[bot + 1] = pts[1];\n            dq[bot + 2] = pts[0];\n        }\n        for (let i = 3, len = pts.length; i < len; i++) {\n            let pt = pts[i];\n            if (left(dq[bot], dq[bot + 1], pt) && left(dq[top - 1], dq[top], pt)) {\n                continue;\n            }\n            while (!left(dq[bot], dq[bot + 1], pt)) {\n                bot += 1;\n            }\n            bot -= 1;\n            dq[bot] = pt;\n            while (!left(dq[top - 1], dq[top], pt)) {\n                top -= 1;\n            }\n            top += 1;\n            dq[top] = pt;\n        }\n        let hull = new Group();\n        for (let h = 0; h < (top - bot); h++) {\n            hull.push(dq[bot + h]);\n        }\n        return hull;\n    }\n    static network(pts, originIndex = 0) {\n        let g = [];\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (i != originIndex)\n                g.push(new Group(pts[originIndex], pts[i]));\n        }\n        return g;\n    }\n    static nearestPt(pts, pt) {\n        let _near = Number.MAX_VALUE;\n        let _item = -1;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let d = pts[i].$subtract(pt).magnitudeSq();\n            if (d < _near) {\n                _near = d;\n                _item = i;\n            }\n        }\n        return _item;\n    }\n    static projectAxis(poly, unitAxis) {\n        let dot = unitAxis.dot(poly[0]);\n        let d = new Pt(dot, dot);\n        for (let n = 1, len = poly.length; n < len; n++) {\n            dot = unitAxis.dot(poly[n]);\n            d = new Pt(Math.min(dot, d[0]), Math.max(dot, d[1]));\n        }\n        return d;\n    }\n    static _axisOverlap(poly1, poly2, unitAxis) {\n        let pa = Polygon.projectAxis(poly1, unitAxis);\n        let pb = Polygon.projectAxis(poly2, unitAxis);\n        return (pa[0] < pb[0]) ? pb[0] - pa[1] : pa[0] - pb[1];\n    }\n    static hasIntersectPoint(poly, pt) {\n        let c = false;\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let ln = Polygon.lineAt(poly, i);\n            if (((ln[0][1] > pt[1]) != (ln[1][1] > pt[1])) &&\n                (pt[0] < (ln[1][0] - ln[0][0]) * (pt[1] - ln[0][1]) / (ln[1][1] - ln[0][1]) + ln[0][0])) {\n                c = !c;\n            }\n        }\n        return c;\n    }\n    static hasIntersectCircle(poly, circle) {\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: null,\n            edge: null,\n            vertex: null,\n        };\n        let c = circle[0];\n        let r = circle[1][0];\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = poly.length; i < len; i++) {\n            let edge = Polygon.lineAt(poly, i);\n            let axis = new Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let poly2 = new Group(c.$add(axis.$multiply(r)), c.$subtract(axis.$multiply(r)));\n            let dist = Polygon._axisOverlap(poly, poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                let check = Rectangle.withinBound(edge, Line.perpendicularFromPt(edge, c)) || Circle.intersectLine2D(circle, edge).length > 0;\n                if (check) {\n                    info.edge = edge;\n                    info.normal = axis;\n                    minDist = Math.abs(dist);\n                    info.which = i;\n                }\n            }\n        }\n        if (!info.edge)\n            return null;\n        let dir = c.$subtract(Polygon.centroid(poly)).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        info.dist = minDist;\n        info.vertex = c;\n        return info;\n    }\n    static hasIntersectPolygon(poly1, poly2) {\n        let info = {\n            which: -1,\n            dist: 0,\n            normal: new Pt(),\n            edge: new Group(),\n            vertex: new Pt()\n        };\n        let minDist = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, plen = (poly1.length + poly2.length); i < plen; i++) {\n            let edge = (i < poly1.length) ? Polygon.lineAt(poly1, i) : Polygon.lineAt(poly2, i - poly1.length);\n            let axis = new Pt(edge[0].y - edge[1].y, edge[1].x - edge[0].x).unit();\n            let dist = Polygon._axisOverlap(poly1, poly2, axis);\n            if (dist > 0) {\n                return null;\n            }\n            else if (Math.abs(dist) < minDist) {\n                info.edge = edge;\n                info.normal = axis;\n                minDist = Math.abs(dist);\n                info.which = (i < poly1.length) ? 0 : 1;\n            }\n        }\n        info.dist = minDist;\n        let b1 = (info.which === 0) ? poly2 : poly1;\n        let b2 = (info.which === 0) ? poly1 : poly2;\n        let c1 = Polygon.centroid(b1);\n        let c2 = Polygon.centroid(b2);\n        let dir = c1.$subtract(c2).dot(info.normal);\n        if (dir < 0)\n            info.normal.multiply(-1);\n        let smallest = Number.MAX_SAFE_INTEGER;\n        for (let i = 0, len = b1.length; i < len; i++) {\n            let d = info.normal.dot(b1[i].$subtract(c2));\n            if (d < smallest) {\n                smallest = d;\n                info.vertex = b1[i];\n            }\n        }\n        return info;\n    }\n    static intersectPolygon2D(poly1, poly2) {\n        let lp = Polygon.lines(poly1);\n        let g = [];\n        for (let i = 0, len = lp.length; i < len; i++) {\n            let ins = Line.intersectPolygon2D(lp[i], poly2, false);\n            if (ins)\n                g.push(ins);\n        }\n        return Util.flatten(g, true);\n    }\n    static toRects(polys) {\n        let boxes = polys.map((g) => Geom.boundingBox(g));\n        let merged = Util.flatten(boxes, false);\n        boxes.unshift(Geom.boundingBox(merged));\n        return boxes;\n    }\n}\nexport class Curve {\n    static getSteps(steps) {\n        let ts = new Group();\n        for (let i = 0; i <= steps; i++) {\n            let t = i / steps;\n            ts.push(new Pt(t * t * t, t * t, t, 1));\n        }\n        return ts;\n    }\n    static controlPoints(pts, index = 0, copyStart = false) {\n        if (index > pts.length - 1)\n            return new Group();\n        let _index = (i) => (i < pts.length - 1) ? i : pts.length - 1;\n        let p0 = pts[index];\n        index = (copyStart) ? index : index + 1;\n        return new Group(p0, pts[_index(index++)], pts[_index(index++)], pts[_index(index++)]);\n    }\n    static _calcPt(ctrls, params) {\n        let x = ctrls.reduce((a, c, i) => a + c.x * params[i], 0);\n        let y = ctrls.reduce((a, c, i) => a + c.y * params[i], 0);\n        if (ctrls[0].length > 2) {\n            let z = ctrls.reduce((a, c, i) => a + c.z * params[i], 0);\n            return new Pt(x, y, z);\n        }\n        return new Pt(x, y);\n    }\n    static catmullRom(pts, steps = 10) {\n        if (pts.length < 2)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.catmullRomStep(ts[i], c));\n        }\n        let k = 0;\n        while (k < pts.length - 2) {\n            let cp = Curve.controlPoints(pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.catmullRomStep(ts[i], cp));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static catmullRomStep(step, ctrls) {\n        let m = new Group(new Pt(-0.5, 1, -0.5, 0), new Pt(1.5, -2.5, 0, 1), new Pt(-1.5, 2, 0.5, 0), new Pt(0.5, -0.5, 0, 0));\n        return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n    }\n    static cardinal(pts, steps = 10, tension = 0.5) {\n        if (pts.length < 2)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let c = Curve.controlPoints(pts, 0, true);\n        for (let i = 0; i <= steps; i++) {\n            ps.push(Curve.cardinalStep(ts[i], c, tension));\n        }\n        let k = 0;\n        while (k < pts.length - 2) {\n            let cp = Curve.controlPoints(pts, k);\n            if (cp.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.cardinalStep(ts[i], cp, tension));\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static cardinalStep(step, ctrls, tension = 0.5) {\n        let m = new Group(new Pt(-1, 2, -1, 0), new Pt(-1, 1, 0, 0), new Pt(1, -2, 1, 0), new Pt(1, -1, 0, 0));\n        let h = Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n    static bezier(pts, steps = 10) {\n        if (pts.length < 4)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < pts.length - 3) {\n            let c = Curve.controlPoints(pts, k);\n            if (c.length > 0) {\n                for (let i = 0; i <= steps; i++) {\n                    ps.push(Curve.bezierStep(ts[i], c));\n                }\n                k += 3;\n            }\n        }\n        return ps;\n    }\n    static bezierStep(step, ctrls) {\n        let m = new Group(new Pt(-1, 3, -3, 1), new Pt(3, -6, 3, 0), new Pt(-3, 3, 0, 0), new Pt(1, 0, 0, 0));\n        return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n    }\n    static bspline(pts, steps = 10, tension = 1) {\n        if (pts.length < 2)\n            return new Group();\n        let ps = new Group();\n        let ts = Curve.getSteps(steps);\n        let k = 0;\n        while (k < pts.length - 3) {\n            let c = Curve.controlPoints(pts, k);\n            if (c.length > 0) {\n                if (tension !== 1) {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineTensionStep(ts[i], c, tension));\n                    }\n                }\n                else {\n                    for (let i = 0; i <= steps; i++) {\n                        ps.push(Curve.bsplineStep(ts[i], c));\n                    }\n                }\n                k++;\n            }\n        }\n        return ps;\n    }\n    static bsplineStep(step, ctrls) {\n        let m = new Group(new Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt(0.5, -1, 0, 0.6666666666666666), new Pt(-0.5, 0.5, 0.5, 0.16666666666666666), new Pt(0.16666666666666666, 0, 0, 0));\n        return Curve._calcPt(ctrls, Mat.multiply([step], m, true)[0]);\n    }\n    static bsplineTensionStep(step, ctrls, tension = 1) {\n        let m = new Group(new Pt(-0.16666666666666666, 0.5, -0.5, 0.16666666666666666), new Pt(-1.5, 2, 0, -0.3333333333333333), new Pt(1.5, -2.5, 0.5, 0.16666666666666666), new Pt(0.16666666666666666, 0, 0, 0));\n        let h = Mat.multiply([step], m, true)[0].multiply(tension);\n        let h2 = (2 * step[0] - 3 * step[1] + 1);\n        let h3 = -2 * step[0] + 3 * step[1];\n        let pt = Curve._calcPt(ctrls, h);\n        pt.x += h2 * ctrls[1].x + h3 * ctrls[2].x;\n        pt.y += h2 * ctrls[1].y + h3 * ctrls[2].y;\n        if (pt.length > 2)\n            pt.z += h2 * ctrls[1].z + h3 * ctrls[2].z;\n        return pt;\n    }\n}\n//# sourceMappingURL=Op.js.map","import { Const } from \"./Util\";\nimport { Curve } from \"./Op\";\nimport { Pt, Group } from \"./Pt\";\nimport { Vec, Mat } from \"./LinearAlgebra\";\nexport class Num {\n    static equals(a, b, threshold = 0.00001) {\n        return Math.abs(a - b) < threshold;\n    }\n    static lerp(a, b, t) {\n        return (1 - t) * a + t * b;\n    }\n    static clamp(val, min, max) {\n        return Math.max(min, Math.min(max, val));\n    }\n    static boundValue(val, min, max) {\n        let len = Math.abs(max - min);\n        let a = val % len;\n        if (a > max)\n            a -= len;\n        else if (a < min)\n            a += len;\n        return a;\n    }\n    static within(p, a, b) {\n        return p >= Math.min(a, b) && p <= Math.max(a, b);\n    }\n    static randomRange(a, b = 0) {\n        let r = (a > b) ? (a - b) : (b - a);\n        return a + Math.random() * r;\n    }\n    static normalizeValue(n, a, b) {\n        let min = Math.min(a, b);\n        let max = Math.max(a, b);\n        return (n - min) / (max - min);\n    }\n    static sum(pts) {\n        let c = new Pt(pts[0]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            Vec.add(c, pts[i]);\n        }\n        return c;\n    }\n    static average(pts) {\n        return Num.sum(pts).divide(pts.length);\n    }\n    static cycle(t) {\n        return (Math.sin(Math.PI * 2 * t) + 1) / 2;\n    }\n    static mapToRange(n, currA, currB, targetA, targetB) {\n        if (currA == currB)\n            throw new Error(\"[currMin, currMax] must define a range that is not zero\");\n        let min = Math.min(targetA, targetB);\n        let max = Math.max(targetA, targetB);\n        return Num.normalizeValue(n, currA, currB) * (max - min) + min;\n    }\n}\nexport class Geom {\n    static boundAngle(angle) {\n        return Num.boundValue(angle, 0, 360);\n    }\n    static boundRadian(radian) {\n        return Num.boundValue(radian, 0, Const.two_pi);\n    }\n    static toRadian(angle) {\n        return angle * Const.deg_to_rad;\n    }\n    static toDegree(radian) {\n        return radian * Const.rad_to_deg;\n    }\n    static boundingBox(pts) {\n        let minPt = pts.reduce((a, p) => a.$min(p));\n        let maxPt = pts.reduce((a, p) => a.$max(p));\n        return new Group(minPt, maxPt);\n    }\n    static centroid(pts) {\n        return Num.average(pts);\n    }\n    static anchor(pts, ptOrIndex = 0, direction = \"to\") {\n        let method = (direction == \"to\") ? \"subtract\" : \"add\";\n        for (let i = 0, len = pts.length; i < len; i++) {\n            if (typeof ptOrIndex == \"number\") {\n                if (ptOrIndex !== i)\n                    pts[i][method](pts[ptOrIndex]);\n            }\n            else {\n                pts[i][method](ptOrIndex);\n            }\n        }\n    }\n    static interpolate(a, b, t = 0.5) {\n        let len = Math.min(a.length, b.length);\n        let d = Pt.make(len);\n        for (let i = 0; i < len; i++) {\n            d[i] = a[i] * (1 - t) + b[i] * t;\n        }\n        return d;\n    }\n    static perpendicular(pt, axis = Const.xy) {\n        let y = axis[1];\n        let x = axis[0];\n        let p = new Pt(pt);\n        let pa = new Pt(p);\n        pa[x] = -p[y];\n        pa[y] = p[x];\n        let pb = new Pt(p);\n        pb[x] = p[y];\n        pb[y] = -p[x];\n        return new Group(pa, pb);\n    }\n    static isPerpendicular(p1, p2) {\n        return new Pt(p1).dot(p2) === 0;\n    }\n    static withinBound(pt, boundPt1, boundPt2) {\n        for (let i = 0, len = Math.min(pt.length, boundPt1.length, boundPt2.length); i < len; i++) {\n            if (!Num.within(pt[i], boundPt1[i], boundPt2[i]))\n                return false;\n        }\n        return true;\n    }\n    static sortEdges(pts) {\n        let bounds = Geom.boundingBox(pts);\n        let center = bounds[1].add(bounds[0]).divide(2);\n        let fn = (a, b) => {\n            if (a.length < 2 || b.length < 2)\n                throw new Error(\"Pt dimension cannot be less than 2\");\n            let da = a.$subtract(center);\n            let db = b.$subtract(center);\n            if (da[0] >= 0 && db[0] < 0)\n                return 1;\n            if (da[0] < 0 && db[0] >= 0)\n                return -1;\n            if (da[0] == 0 && db[0] == 0) {\n                if (da[1] >= 0 || db[1] >= 0)\n                    return (da[1] > db[1]) ? 1 : -1;\n                return (db[1] > da[1]) ? 1 : -1;\n            }\n            let det = da.$cross2D(db);\n            if (det < 0)\n                return 1;\n            if (det > 0)\n                return -1;\n            return (da[0] * da[0] + da[1] * da[1] > db[0] * db[0] + db[1] * db[1]) ? 1 : -1;\n        };\n        return pts.sort(fn);\n    }\n    static scale(ps, scale, anchor) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let scs = (typeof scale == \"number\") ? Pt.make(pts[0].length, scale) : scale;\n        if (!anchor)\n            anchor = Pt.make(pts[0].length, 0);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = pts[i];\n            for (let k = 0, lenP = p.length; k < lenP; k++) {\n                p[k] = (anchor && anchor[k]) ? anchor[k] + (p[k] - anchor[k]) * scs[k] : p[k] * scs[k];\n            }\n        }\n        return Geom;\n    }\n    static rotate2D(ps, angle, anchor, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let fn = (anchor) ? Mat.rotateAt2DMatrix : Mat.rotate2DMatrix;\n        if (!anchor)\n            anchor = Pt.make(pts[0].length, 0);\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(Mat.transform2D(p, fn(cos, sin, anchor)));\n        }\n        return Geom;\n    }\n    static shear2D(ps, scale, anchor, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let s = (typeof scale == \"number\") ? [scale, scale] : scale;\n        if (!anchor)\n            anchor = Pt.make(pts[0].length, 0);\n        let fn = (anchor) ? Mat.shearAt2DMatrix : Mat.shear2DMatrix;\n        let tanx = Math.tan(s[0]);\n        let tany = Math.tan(s[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(Mat.transform2D(p, fn(tanx, tany, anchor)));\n        }\n        return Geom;\n    }\n    static reflect2D(ps, line, axis) {\n        let pts = (!Array.isArray(ps)) ? [ps] : ps;\n        let mat = Mat.reflectAt2DMatrix(line[0], line[1]);\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let p = (axis) ? pts[i].$take(axis) : pts[i];\n            p.to(Mat.transform2D(p, mat));\n        }\n        return Geom;\n    }\n    static cosTable() {\n        let cos = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            cos[i] = Math.cos(i * Math.PI / 180);\n        let find = (rad) => cos[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: cos, cos: find };\n    }\n    static sinTable() {\n        let sin = new Float64Array(360);\n        for (let i = 0; i < 360; i++)\n            sin[i] = Math.sin(i * Math.PI / 180);\n        let find = (rad) => sin[Math.floor(Geom.boundAngle(Geom.toDegree(rad)))];\n        return { table: sin, sin: find };\n    }\n}\nexport class Shaping {\n    static linear(t, c = 1) {\n        return c * t;\n    }\n    static quadraticIn(t, c = 1) {\n        return c * t * t;\n    }\n    static quadraticOut(t, c = 1) {\n        return -c * t * (t - 2);\n    }\n    static quadraticInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * t * t * 4 : -c / 2 * ((dt - 1) * (dt - 3) - 1);\n    }\n    static cubicIn(t, c = 1) {\n        return c * t * t * t;\n    }\n    static cubicOut(t, c = 1) {\n        let dt = t - 1;\n        return c * (dt * dt * dt + 1);\n    }\n    static cubicInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? c / 2 * dt * dt * dt : c / 2 * ((dt - 2) * (dt - 2) * (dt - 2) + 2);\n    }\n    static exponentialIn(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, 1 / p);\n    }\n    static exponentialOut(t, c = 1, p = 0.25) {\n        return c * Math.pow(t, p);\n    }\n    static sineIn(t, c = 1) {\n        return -c * Math.cos(t * Const.half_pi) + c;\n    }\n    static sineOut(t, c = 1) {\n        return c * Math.sin(t * Const.half_pi);\n    }\n    static sineInOut(t, c = 1) {\n        return -c / 2 * (Math.cos(Math.PI * t) - 1);\n    }\n    static cosineApprox(t, c = 1) {\n        let t2 = t * t;\n        let t4 = t2 * t2;\n        let t6 = t4 * t2;\n        return c * (4 * t6 / 9 - 17 * t4 / 9 + 22 * t2 / 9);\n    }\n    static circularIn(t, c = 1) {\n        return -c * (Math.sqrt(1 - t * t) - 1);\n    }\n    static circularOut(t, c = 1) {\n        let dt = t - 1;\n        return c * Math.sqrt(1 - dt * dt);\n    }\n    static circularInOut(t, c = 1) {\n        let dt = t * 2;\n        return (t < 0.5) ? -c / 2 * (Math.sqrt(1 - dt * dt) - 1) : c / 2 * (Math.sqrt(1 - (dt - 2) * (dt - 2)) + 1);\n    }\n    static elasticIn(t, c = 1, p = 0.7) {\n        let dt = t - 1;\n        let s = (p / Const.two_pi) * 1.5707963267948966;\n        return c * (-Math.pow(2, 10 * dt) * Math.sin((dt - s) * Const.two_pi / p));\n    }\n    static elasticOut(t, c = 1, p = 0.7) {\n        let s = (p / Const.two_pi) * 1.5707963267948966;\n        return c * (Math.pow(2, -10 * t) * Math.sin((t - s) * Const.two_pi / p)) + c;\n    }\n    static elasticInOut(t, c = 1, p = 0.6) {\n        let dt = t * 2;\n        let s = (p / Const.two_pi) * 1.5707963267948966;\n        if (t < 0.5) {\n            dt -= 1;\n            return c * (-0.5 * (Math.pow(2, 10 * dt) * Math.sin((dt - s) * Const.two_pi / p)));\n        }\n        else {\n            dt -= 1;\n            return c * (0.5 * (Math.pow(2, -10 * dt) * Math.sin((dt - s) * Const.two_pi / p))) + c;\n        }\n    }\n    static bounceIn(t, c = 1) {\n        return c - Shaping.bounceOut((1 - t), c);\n    }\n    static bounceOut(t, c = 1) {\n        if (t < (1 / 2.75)) {\n            return c * (7.5625 * t * t);\n        }\n        else if (t < (2 / 2.75)) {\n            t -= 1.5 / 2.75;\n            return c * (7.5625 * t * t + 0.75);\n        }\n        else if (t < (2.5 / 2.75)) {\n            t -= 2.25 / 2.75;\n            return c * (7.5625 * t * t + 0.9375);\n        }\n        else {\n            t -= 2.625 / 2.75;\n            return c * (7.5625 * t * t + 0.984375);\n        }\n    }\n    static bounceInOut(t, c = 1) {\n        return (t < 0.5) ? Shaping.bounceIn(t * 2, c) / 2 : Shaping.bounceOut(t * 2 - 1, c) / 2 + c / 2;\n    }\n    static sigmoid(t, c = 1, p = 10) {\n        let d = p * (t - 0.5);\n        return c / (1 + Math.exp(-d));\n    }\n    static logSigmoid(t, c = 1, p = 0.7) {\n        p = Math.max(Const.epsilon, Math.min(1 - Const.epsilon, p));\n        p = 1 / (1 - p);\n        let A = 1 / (1 + Math.exp(((t - 0.5) * p * -2)));\n        let B = 1 / (1 + Math.exp(p));\n        let C = 1 / (1 + Math.exp(-p));\n        return c * (A - B) / (C - B);\n    }\n    static seat(t, c = 1, p = 0.5) {\n        if ((t < 0.5)) {\n            return c * (Math.pow(2 * t, 1 - p)) / 2;\n        }\n        else {\n            return c * (1 - (Math.pow(2 * (1 - t), 1 - p)) / 2);\n        }\n    }\n    static quadraticBezier(t, c = 1, p = [0.05, 0.95]) {\n        let a = (typeof p != \"number\") ? p[0] : p;\n        let b = (typeof p != \"number\") ? p[1] : 0.5;\n        let om2a = 1 - 2 * a;\n        if (om2a === 0) {\n            om2a = Const.epsilon;\n        }\n        let d = (Math.sqrt(a * a + om2a * t) - a) / om2a;\n        return c * ((1 - 2 * b) * (d * d) + (2 * b) * d);\n    }\n    static cubicBezier(t, c = 1, p1 = [0.1, 0.7], p2 = [0.9, 0.2]) {\n        let curve = new Group(new Pt(0, 0), new Pt(p1), new Pt(p2), new Pt(1, 1));\n        return c * Curve.bezierStep(new Pt(t * t * t, t * t, t, 1), Curve.controlPoints(curve)).y;\n    }\n    static quadraticTarget(t, c = 1, p1 = [0.2, 0.35]) {\n        let a = Math.min(1 - Const.epsilon, Math.max(Const.epsilon, p1[0]));\n        let b = Math.min(1, Math.max(0, p1[1]));\n        let A = (1 - b) / (1 - a) - (b / a);\n        let B = (A * (a * a) - b) / a;\n        let y = A * (t * t) - B * t;\n        return c * Math.min(1, Math.max(0, y));\n    }\n    static cliff(t, c = 1, p = 0.5) {\n        return (t > p) ? c : 0;\n    }\n    static step(fn, steps, t, c, ...args) {\n        let s = 1 / steps;\n        let tt = Math.floor(t / s) * s;\n        return fn(tt, c, ...args);\n    }\n}\nexport class Range {\n    constructor(g) {\n        this._dims = 0;\n        this._source = Group.fromPtArray(g);\n        this.calc();\n    }\n    get max() { return this._max.clone(); }\n    get min() { return this._min.clone(); }\n    get magnitude() { return this._mag.clone(); }\n    calc() {\n        if (!this._source)\n            return;\n        let dims = this._source[0].length;\n        this._dims = dims;\n        let max = new Pt(dims);\n        let min = new Pt(dims);\n        let mag = new Pt(dims);\n        for (let i = 0; i < dims; i++) {\n            max[i] = Const.min;\n            min[i] = Const.max;\n            mag[i] = 0;\n            let s = this._source.zipSlice(i);\n            for (let k = 0, len = s.length; k < len; k++) {\n                max[i] = Math.max(max[i], s[k]);\n                min[i] = Math.min(min[i], s[k]);\n                mag[i] = max[i] - min[i];\n            }\n        }\n        this._max = max;\n        this._min = min;\n        this._mag = mag;\n        return this;\n    }\n    mapTo(min, max, exclude) {\n        let target = new Group();\n        for (let i = 0, len = this._source.length; i < len; i++) {\n            let g = this._source[i];\n            let n = new Pt(this._dims);\n            for (let k = 0; k < this._dims; k++) {\n                n[k] = (exclude && exclude[k]) ? g[k] : Num.mapToRange(g[k], this._min[k], this._max[k], min, max);\n            }\n            target.push(n);\n        }\n        return target;\n    }\n    append(g, update = true) {\n        if (g[0].length !== this._dims)\n            throw new Error(`Dimensions don't match. ${this._dims} dimensions in Range and ${g[0].length} provided in parameter. `);\n        this._source = this._source.concat(g);\n        if (update)\n            this.calc();\n        return this;\n    }\n    ticks(count) {\n        let g = new Group();\n        for (let i = 0; i <= count; i++) {\n            let p = new Pt(this._dims);\n            for (let k = 0, len = this._max.length; k < len; k++) {\n                p[k] = Num.lerp(this._min[k], this._max[k], i / count);\n            }\n            g.push(p);\n        }\n        return g;\n    }\n}\n//# sourceMappingURL=Num.js.map","import { Util, Const } from \"./Util\";\nimport { Geom, Num } from \"./Num\";\nimport { Vec, Mat } from \"./LinearAlgebra\";\nexport var PtBaseArray = Float32Array;\nexport class Pt extends PtBaseArray {\n    constructor(...args) {\n        if (args.length === 1 && typeof args[0] == \"number\") {\n            super(args[0]);\n        }\n        else {\n            super((args.length > 0) ? Util.getArgs(args) : [0, 0]);\n        }\n    }\n    static make(dimensions, defaultValue = 0, randomize = false) {\n        let p = new PtBaseArray(dimensions);\n        if (defaultValue)\n            p.fill(defaultValue);\n        if (randomize) {\n            for (let i = 0, len = p.length; i < len; i++) {\n                p[i] = p[i] * Math.random();\n            }\n        }\n        return new Pt(p);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get x() { return this[0]; }\n    set x(n) { this[0] = n; }\n    get y() { return this[1]; }\n    set y(n) { this[1] = n; }\n    get z() { return this[2]; }\n    set z(n) { this[2] = n; }\n    get w() { return this[3]; }\n    set w(n) { this[3] = n; }\n    clone() {\n        return new Pt(this);\n    }\n    equals(p, threshold = 0.000001) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            if (Math.abs(this[i] - p[i]) > threshold)\n                return false;\n        }\n        return true;\n    }\n    to(...args) {\n        let p = Util.getArgs(args);\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            this[i] = p[i];\n        }\n        return this;\n    }\n    $to(...args) {\n        return this.clone().to(...args);\n    }\n    toAngle(radian, magnitude, anchorFromPt = false) {\n        let m = (magnitude != undefined) ? magnitude : this.magnitude();\n        let change = [Math.cos(radian) * m, Math.sin(radian) * m];\n        return (anchorFromPt) ? this.add(change) : this.to(change);\n    }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    $take(axis) {\n        let p = [];\n        for (let i = 0, len = axis.length; i < len; i++) {\n            p.push(this[axis[i]] || 0);\n        }\n        return new Pt(p);\n    }\n    $concat(...args) {\n        return new Pt(this.toArray().concat(Util.getArgs(args)));\n    }\n    add(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.add(this, args[0]) : Vec.add(this, Util.getArgs(args));\n        return this;\n    }\n    $add(...args) { return this.clone().add(...args); }\n    subtract(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.subtract(this, args[0]) : Vec.subtract(this, Util.getArgs(args));\n        return this;\n    }\n    $subtract(...args) { return this.clone().subtract(...args); }\n    multiply(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.multiply(this, args[0]) : Vec.multiply(this, Util.getArgs(args));\n        return this;\n    }\n    $multiply(...args) { return this.clone().multiply(...args); }\n    divide(...args) {\n        (args.length === 1 && typeof args[0] == \"number\") ? Vec.divide(this, args[0]) : Vec.divide(this, Util.getArgs(args));\n        return this;\n    }\n    $divide(...args) { return this.clone().divide(...args); }\n    magnitudeSq() { return Vec.dot(this, this); }\n    magnitude() { return Vec.magnitude(this); }\n    unit(magnitude = undefined) {\n        Vec.unit(this, magnitude);\n        return this;\n    }\n    $unit(magnitude = undefined) { return this.clone().unit(magnitude); }\n    dot(...args) { return Vec.dot(this, Util.getArgs(args)); }\n    $cross2D(...args) { return Vec.cross2D(this, Util.getArgs(args)); }\n    $cross(...args) { return Vec.cross(this, Util.getArgs(args)); }\n    $project(...args) {\n        return this.$multiply(this.dot(...args) / this.magnitudeSq());\n    }\n    projectScalar(...args) {\n        return this.dot(...args) / this.magnitude();\n    }\n    abs() {\n        Vec.abs(this);\n        return this;\n    }\n    $abs() {\n        return this.clone().abs();\n    }\n    floor() {\n        Vec.floor(this);\n        return this;\n    }\n    $floor() {\n        return this.clone().floor();\n    }\n    ceil() {\n        Vec.ceil(this);\n        return this;\n    }\n    $ceil() {\n        return this.clone().ceil();\n    }\n    round() {\n        Vec.round(this);\n        return this;\n    }\n    $round() {\n        return this.clone().round();\n    }\n    minValue() {\n        return Vec.min(this);\n    }\n    maxValue() {\n        return Vec.max(this);\n    }\n    $min(...args) {\n        let p = Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.min(this[i], p[i]);\n        }\n        return m;\n    }\n    $max(...args) {\n        let p = Util.getArgs(args);\n        let m = this.clone();\n        for (let i = 0, len = Math.min(this.length, p.length); i < len; i++) {\n            m[i] = Math.max(this[i], p[i]);\n        }\n        return m;\n    }\n    angle(axis = Const.xy) {\n        return Math.atan2(this[axis[1]], this[axis[0]]);\n    }\n    angleBetween(p, axis = Const.xy) {\n        return Geom.boundRadian(this.angle(axis)) - Geom.boundRadian(p.angle(axis));\n    }\n    scale(scale, anchor) {\n        Geom.scale(this, scale, anchor || Pt.make(this.length, 0));\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        Geom.rotate2D(this, angle, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        Geom.shear2D(this, scale, anchor || Pt.make(this.length, 0), axis);\n        return this;\n    }\n    reflect2D(line, axis) {\n        Geom.reflect2D(this, line, axis);\n        return this;\n    }\n    toString() {\n        return `Pt(${this.join(\", \")})`;\n    }\n    toArray() {\n        return [].slice.call(this);\n    }\n}\nexport class Group extends Array {\n    constructor(...args) {\n        super(...args);\n    }\n    get id() { return this._id; }\n    set id(s) { this._id = s; }\n    get p1() { return this[0]; }\n    get p2() { return this[1]; }\n    get p3() { return this[2]; }\n    get p4() { return this[3]; }\n    get q1() { return this[this.length - 1]; }\n    get q2() { return this[this.length - 2]; }\n    get q3() { return this[this.length - 3]; }\n    get q4() { return this[this.length - 4]; }\n    clone() {\n        let group = new Group();\n        for (let i = 0, len = this.length; i < len; i++) {\n            group.push(this[i].clone());\n        }\n        return group;\n    }\n    static fromArray(list) {\n        let g = new Group();\n        for (let i = 0, len = list.length; i < len; i++) {\n            let p = (list[i] instanceof Pt) ? list[i] : new Pt(list[i]);\n            g.push(p);\n        }\n        return g;\n    }\n    static fromPtArray(list) {\n        return Group.from(list);\n    }\n    split(chunkSize, stride, loopBack = false) {\n        let sp = Util.split(this, chunkSize, stride, loopBack);\n        return sp;\n    }\n    insert(pts, index = 0) {\n        Group.prototype.splice.apply(this, [index, 0, ...pts]);\n        return this;\n    }\n    remove(index = 0, count = 1) {\n        let param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        return Group.prototype.splice.apply(this, param);\n    }\n    segments(pts_per_segment = 2, stride = 1, loopBack = false) {\n        return this.split(pts_per_segment, stride, loopBack);\n    }\n    lines() { return this.segments(2, 1); }\n    centroid() {\n        return Geom.centroid(this);\n    }\n    boundingBox() {\n        return Geom.boundingBox(this);\n    }\n    anchorTo(ptOrIndex = 0) { Geom.anchor(this, ptOrIndex, \"to\"); }\n    anchorFrom(ptOrIndex = 0) { Geom.anchor(this, ptOrIndex, \"from\"); }\n    op(fn) {\n        let self = this;\n        return (...params) => {\n            return fn(self, ...params);\n        };\n    }\n    ops(fns) {\n        let _ops = [];\n        for (let i = 0, len = fns.length; i < len; i++) {\n            _ops.push(this.op(fns[i]));\n        }\n        return _ops;\n    }\n    interpolate(t) {\n        t = Num.clamp(t, 0, 1);\n        let chunk = this.length - 1;\n        let tc = 1 / (this.length - 1);\n        let idx = Math.floor(t / tc);\n        return Geom.interpolate(this[idx], this[Math.min(this.length - 1, idx + 1)], (t - idx * tc) * chunk);\n    }\n    moveBy(...args) {\n        return this.add(...args);\n    }\n    moveTo(...args) {\n        let d = new Pt(Util.getArgs(args)).subtract(this[0]);\n        this.moveBy(d);\n        return this;\n    }\n    scale(scale, anchor) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.scale(this[i], scale, anchor || this[0]);\n        }\n        return this;\n    }\n    rotate2D(angle, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.rotate2D(this[i], angle, anchor || this[0], axis);\n        }\n        return this;\n    }\n    shear2D(scale, anchor, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.shear2D(this[i], scale, anchor || this[0], axis);\n        }\n        return this;\n    }\n    reflect2D(line, axis) {\n        for (let i = 0, len = this.length; i < len; i++) {\n            Geom.reflect2D(this[i], line, axis);\n        }\n        return this;\n    }\n    sortByDimension(dim, desc = false) {\n        return this.sort((a, b) => (desc) ? b[dim] - a[dim] : a[dim] - b[dim]);\n    }\n    forEachPt(ptFn, ...args) {\n        if (!this[0][ptFn]) {\n            Util.warn(`${ptFn} is not a function of Pt`);\n            return this;\n        }\n        for (let i = 0, len = this.length; i < len; i++) {\n            this[i] = this[i][ptFn](...args);\n        }\n        return this;\n    }\n    add(...args) {\n        return this.forEachPt(\"add\", ...args);\n    }\n    subtract(...args) {\n        return this.forEachPt(\"subtract\", ...args);\n    }\n    multiply(...args) {\n        return this.forEachPt(\"multiply\", ...args);\n    }\n    divide(...args) {\n        return this.forEachPt(\"divide\", ...args);\n    }\n    $matrixAdd(g) {\n        return Mat.add(this, g);\n    }\n    $matrixMultiply(g, transposed = false, elementwise = false) {\n        return Mat.multiply(this, g, transposed, elementwise);\n    }\n    zipSlice(index, defaultValue = false) {\n        return Mat.zipSlice(this, index, defaultValue);\n    }\n    $zip(defaultValue = undefined, useLongest = false) {\n        return Mat.zip(this, defaultValue, useLongest);\n    }\n    toString() {\n        return \"Group[ \" + this.reduce((p, c) => p + c.toString() + \" \", \"\") + \" ]\";\n    }\n}\nexport class Bound extends Group {\n    constructor(...args) {\n        super(...args);\n        this._center = new Pt();\n        this._size = new Pt();\n        this._topLeft = new Pt();\n        this._bottomRight = new Pt();\n        this._inited = false;\n        this.init();\n    }\n    static fromBoundingRect(rect) {\n        let b = new Bound(new Pt(rect.left || 0, rect.top || 0), new Pt(rect.right || 0, rect.bottom || 0));\n        if (rect.width && rect.height)\n            b.size = new Pt(rect.width, rect.height);\n        return b;\n    }\n    static fromGroup(g) {\n        if (g.length < 2)\n            throw new Error(\"Cannot create a Bound from a group that has less than 2 Pt\");\n        return new Bound(g[0], g[g.length - 1]);\n    }\n    init() {\n        if (this.p1) {\n            this._size = this.p1.clone();\n            this._inited = true;\n        }\n        if (this.p1 && this.p2) {\n            let a = this.p1;\n            let b = this.p2;\n            this.topLeft = a.$min(b);\n            this._bottomRight = a.$max(b);\n            this._updateSize();\n            this._inited = true;\n        }\n    }\n    clone() {\n        return new Bound(this._topLeft.clone(), this._bottomRight.clone());\n    }\n    _updateSize() {\n        this._size = this._bottomRight.$subtract(this._topLeft).abs();\n        this._updateCenter();\n    }\n    _updateCenter() {\n        this._center = this._size.$multiply(0.5).add(this._topLeft);\n    }\n    _updatePosFromTop() {\n        this._bottomRight = this._topLeft.$add(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromBottom() {\n        this._topLeft = this._bottomRight.$subtract(this._size);\n        this._updateCenter();\n    }\n    _updatePosFromCenter() {\n        let half = this._size.$multiply(0.5);\n        this._topLeft = this._center.$subtract(half);\n        this._bottomRight = this._center.$add(half);\n    }\n    get size() { return new Pt(this._size); }\n    set size(p) {\n        this._size = new Pt(p);\n        this._updatePosFromTop();\n    }\n    get center() { return new Pt(this._center); }\n    set center(p) {\n        this._center = new Pt(p);\n        this._updatePosFromCenter();\n    }\n    get topLeft() { return new Pt(this._topLeft); }\n    set topLeft(p) {\n        this._topLeft = new Pt(p);\n        this[0] = this._topLeft;\n        this._updateSize();\n    }\n    get bottomRight() { return new Pt(this._bottomRight); }\n    set bottomRight(p) {\n        this._bottomRight = new Pt(p);\n        this[1] = this._bottomRight;\n        this._updateSize();\n    }\n    get width() { return (this._size.length > 0) ? this._size.x : 0; }\n    set width(w) {\n        this._size.x = w;\n        this._updatePosFromTop();\n    }\n    get height() { return (this._size.length > 1) ? this._size.y : 0; }\n    set height(h) {\n        this._size.y = h;\n        this._updatePosFromTop();\n    }\n    get depth() { return (this._size.length > 2) ? this._size.z : 0; }\n    set depth(d) {\n        this._size.z = d;\n        this._updatePosFromTop();\n    }\n    get x() { return this.topLeft.x; }\n    get y() { return this.topLeft.y; }\n    get z() { return this.topLeft.z; }\n    get inited() { return this._inited; }\n    update() {\n        this._topLeft = this[0];\n        this._bottomRight = this[1];\n        this._updateSize();\n        return this;\n    }\n}\n//# sourceMappingURL=Pt.js.map","import { Rectangle, Circle } from \"./Op\";\nexport var UIShape;\n(function (UIShape) {\n    UIShape[UIShape[\"Rectangle\"] = 0] = \"Rectangle\";\n    UIShape[UIShape[\"Circle\"] = 1] = \"Circle\";\n    UIShape[UIShape[\"Polygon\"] = 2] = \"Polygon\";\n    UIShape[UIShape[\"Polyline\"] = 3] = \"Polyline\";\n    UIShape[UIShape[\"Line\"] = 4] = \"Line\";\n})(UIShape || (UIShape = {}));\nexport const UIPointerActions = {\n    up: \"up\", down: \"down\", move: \"move\", drag: \"drag\", drop: \"drop\", over: \"over\", out: \"out\"\n};\nexport class UI {\n    constructor(group, shape, states, id) {\n        this.group = group;\n        this.shape = shape;\n        this._id = id;\n        this._states = states;\n        this._actions = {};\n    }\n    get id() { return this._id; }\n    set id(d) { this._id = d; }\n    state(key) {\n        return this._states[key] || false;\n    }\n    on(key, fn) {\n        this._actions[key] = fn;\n        return this;\n    }\n    off(key) {\n        delete this._actions[key];\n        return this;\n    }\n    listen(key, p) {\n        if (this._actions[key] !== undefined) {\n            if (this._trigger(p)) {\n                this._actions[key](p, this, key);\n                return true;\n            }\n        }\n        return false;\n    }\n    render(fn) {\n        fn(this.group, this._states);\n    }\n    _trigger(p) {\n        let fn = null;\n        if (this.shape === UIShape.Rectangle) {\n            fn = Rectangle.withinBound;\n        }\n        else if (this.shape === UIShape.Circle) {\n            fn = Circle.withinBound;\n        }\n        else if (this.shape === UIShape.Polygon) {\n            fn = Rectangle.withinBound;\n        }\n        else {\n            return false;\n        }\n        return fn(this.group, p);\n    }\n}\nexport class UIButton extends UI {\n    constructor(group, shape, states, id) {\n        super(group, shape, states, id);\n        this._clicks = 0;\n    }\n    get clicks() { return this._clicks; }\n    onClick(fn) {\n        this._clicks++;\n        this.on(UIPointerActions.up, fn);\n    }\n    onHover(over, out) {\n        this.on(UIPointerActions.over, over);\n        this.on(UIPointerActions.out, out);\n    }\n}\n//# sourceMappingURL=UI.js.map","import { Pt, Bound } from \"./Pt\";\nimport { UIPointerActions as UIA } from \"./UI\";\nexport class Space {\n    constructor() {\n        this.id = \"space\";\n        this.bound = new Bound();\n        this._time = { prev: 0, diff: 0, end: -1 };\n        this.players = {};\n        this.playerCount = 0;\n        this._animID = -1;\n        this._pause = false;\n        this._refresh = undefined;\n        this._pointer = new Pt();\n        this._isReady = false;\n        this._playing = false;\n    }\n    refresh(b) {\n        this._refresh = b;\n        return this;\n    }\n    add(p) {\n        let player = (typeof p == \"function\") ? { animate: p } : p;\n        let k = this.playerCount++;\n        let pid = this.id + k;\n        this.players[pid] = player;\n        player.animateID = pid;\n        if (player.resize && this.bound.inited)\n            player.resize(this.bound);\n        if (this._refresh === undefined)\n            this._refresh = true;\n        return this;\n    }\n    remove(player) {\n        delete this.players[player.animateID];\n        return this;\n    }\n    removeAll() {\n        this.players = {};\n        return this;\n    }\n    play(time = 0) {\n        this._animID = requestAnimationFrame(this.play.bind(this));\n        if (this._pause)\n            return this;\n        this._time.diff = time - this._time.prev;\n        this._time.prev = time;\n        try {\n            this.playItems(time);\n        }\n        catch (err) {\n            cancelAnimationFrame(this._animID);\n            this._playing = false;\n            throw err;\n        }\n        return this;\n    }\n    replay() {\n        this._time.end = -1;\n        this.play();\n    }\n    playItems(time) {\n        this._playing = true;\n        if (this._refresh)\n            this.clear();\n        if (this._isReady) {\n            for (let k in this.players) {\n                if (this.players[k].animate)\n                    this.players[k].animate(time, this._time.diff, this);\n            }\n        }\n        if (this._time.end >= 0 && time > this._time.end) {\n            cancelAnimationFrame(this._animID);\n            this._playing = false;\n        }\n    }\n    pause(toggle = false) {\n        this._pause = (toggle) ? !this._pause : true;\n        return this;\n    }\n    resume() {\n        this._pause = false;\n        return this;\n    }\n    stop(t = 0) {\n        this._time.end = t;\n        return this;\n    }\n    playOnce(duration = 5000) {\n        this.play();\n        this.stop(duration);\n        return this;\n    }\n    render(context) {\n        if (this._renderFunc)\n            this._renderFunc(context, this);\n        return this;\n    }\n    set customRendering(f) { this._renderFunc = f; }\n    get customRendering() { return this._renderFunc; }\n    get isPlaying() { return this._playing; }\n    get outerBound() { return this.bound.clone(); }\n    get innerBound() { return new Bound(Pt.make(this.size.length, 0), this.size.clone()); }\n    get size() { return this.bound.size.clone(); }\n    get center() { return this.size.divide(2); }\n    get width() { return this.bound.width; }\n    get height() { return this.bound.height; }\n}\nexport class MultiTouchSpace extends Space {\n    constructor() {\n        super(...arguments);\n        this._pressed = false;\n        this._dragged = false;\n        this._hasMouse = false;\n        this._hasTouch = false;\n    }\n    get pointer() {\n        let p = this._pointer.clone();\n        p.id = this._pointer.id;\n        return p;\n    }\n    bindCanvas(evt, callback) {\n        this._canvas.addEventListener(evt, callback);\n    }\n    unbindCanvas(evt, callback) {\n        this._canvas.removeEventListener(evt, callback);\n    }\n    bindMouse(_bind = true) {\n        if (_bind) {\n            this.bindCanvas(\"mousedown\", this._mouseDown.bind(this));\n            this.bindCanvas(\"mouseup\", this._mouseUp.bind(this));\n            this.bindCanvas(\"mouseover\", this._mouseOver.bind(this));\n            this.bindCanvas(\"mouseout\", this._mouseOut.bind(this));\n            this.bindCanvas(\"mousemove\", this._mouseMove.bind(this));\n            this._hasMouse = true;\n        }\n        else {\n            this.unbindCanvas(\"mousedown\", this._mouseDown.bind(this));\n            this.unbindCanvas(\"mouseup\", this._mouseUp.bind(this));\n            this.unbindCanvas(\"mouseover\", this._mouseOver.bind(this));\n            this.unbindCanvas(\"mouseout\", this._mouseOut.bind(this));\n            this.unbindCanvas(\"mousemove\", this._mouseMove.bind(this));\n            this._hasMouse = false;\n        }\n        return this;\n    }\n    bindTouch(_bind = true) {\n        if (_bind) {\n            this.bindCanvas(\"touchstart\", this._mouseDown.bind(this));\n            this.bindCanvas(\"touchend\", this._mouseUp.bind(this));\n            this.bindCanvas(\"touchmove\", this._touchMove.bind(this));\n            this.bindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n            this._hasTouch = true;\n        }\n        else {\n            this.unbindCanvas(\"touchstart\", this._mouseDown.bind(this));\n            this.unbindCanvas(\"touchend\", this._mouseUp.bind(this));\n            this.unbindCanvas(\"touchmove\", this._touchMove.bind(this));\n            this.unbindCanvas(\"touchcancel\", this._mouseOut.bind(this));\n            this._hasTouch = false;\n        }\n        return this;\n    }\n    touchesToPoints(evt, which = \"touches\") {\n        if (!evt || !evt[which])\n            return [];\n        let ts = [];\n        for (var i = 0; i < evt[which].length; i++) {\n            let t = evt[which].item(i);\n            ts.push(new Pt(t.pageX - this.bound.topLeft.x, t.pageY - this.bound.topLeft.y));\n        }\n        return ts;\n    }\n    _mouseAction(type, evt) {\n        let px = 0, py = 0;\n        if (evt instanceof MouseEvent) {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    px = evt.pageX - this.outerBound.x;\n                    py = evt.pageY - this.outerBound.y;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        else {\n            for (let k in this.players) {\n                if (this.players.hasOwnProperty(k)) {\n                    let v = this.players[k];\n                    let c = evt.changedTouches && evt.changedTouches.length > 0;\n                    let touch = evt.changedTouches.item(0);\n                    px = (c) ? touch.pageX - this.outerBound.x : 0;\n                    py = (c) ? touch.pageY - this.outerBound.y : 0;\n                    if (v.action)\n                        v.action(type, px, py, evt);\n                }\n            }\n        }\n        if (type) {\n            this._pointer.to(px, py);\n            this._pointer.id = type;\n        }\n    }\n    _mouseDown(evt) {\n        this._mouseAction(UIA.down, evt);\n        this._pressed = true;\n        return false;\n    }\n    _mouseUp(evt) {\n        this._mouseAction(UIA.up, evt);\n        if (this._dragged)\n            this._mouseAction(UIA.down, evt);\n        this._pressed = false;\n        this._dragged = false;\n        return false;\n    }\n    _mouseMove(evt) {\n        this._mouseAction(UIA.move, evt);\n        if (this._pressed) {\n            this._dragged = true;\n            this._mouseAction(UIA.drag, evt);\n        }\n        return false;\n    }\n    _mouseOver(evt) {\n        this._mouseAction(UIA.over, evt);\n        return false;\n    }\n    _mouseOut(evt) {\n        this._mouseAction(UIA.out, evt);\n        if (this._dragged)\n            this._mouseAction(UIA.drop, evt);\n        this._dragged = false;\n        return false;\n    }\n    _touchMove(evt) {\n        this._mouseMove(evt);\n        evt.preventDefault();\n        return false;\n    }\n}\n//# sourceMappingURL=Space.js.map","import { Util } from \"./Util\";\nexport class Form {\n    constructor() {\n        this._ready = false;\n    }\n    get ready() { return this._ready; }\n    static _checkSize(pts, required = 2) {\n        if (pts.length < required) {\n            Util.warn(\"Requires 2 or more Pts in this Group.\");\n            return false;\n        }\n        return true;\n    }\n}\nexport class VisualForm extends Form {\n    constructor() {\n        super(...arguments);\n        this._filled = true;\n        this._stroked = true;\n        this._font = new Font(14, \"sans-serif\");\n    }\n    get filled() { return this._filled; }\n    set filled(b) { this._filled = b; }\n    get stroked() { return this._stroked; }\n    set stroked(b) { this._stroked = b; }\n    get currentFont() { return this._font; }\n    _multiple(groups, shape, ...rest) {\n        if (!groups)\n            return this;\n        for (let i = 0, len = groups.length; i < len; i++) {\n            this[shape](groups[i], ...rest);\n        }\n        return this;\n    }\n    fill(c) {\n        return this;\n    }\n    fillOnly(c) {\n        this.stroke(false);\n        return this.fill(c);\n    }\n    stroke(c, width, linejoin, linecap) {\n        return this;\n    }\n    strokeOnly(c, width, linejoin, linecap) {\n        this.fill(false);\n        return this.stroke(c, width, linejoin, linecap);\n    }\n    points(pts, radius, shape) {\n        if (!pts)\n            return;\n        for (let i = 0, len = pts.length; i < len; i++) {\n            this.point(pts[i], radius, shape);\n        }\n        return this;\n    }\n    circles(groups) {\n        return this._multiple(groups, \"circle\");\n    }\n    squares(groups) {\n        return this._multiple(groups, \"square\");\n    }\n    lines(groups) {\n        return this._multiple(groups, \"line\");\n    }\n    polygons(groups) {\n        return this._multiple(groups, \"polygon\");\n    }\n    rects(groups) {\n        return this._multiple(groups, \"rect\");\n    }\n}\nexport class Font {\n    constructor(size = 12, face = \"sans-serif\", weight = \"\", style = \"\", lineHeight = 1.5) {\n        this.size = size;\n        this.face = face;\n        this.style = style;\n        this.weight = weight;\n        this.lineHeight = lineHeight;\n    }\n    get value() { return `${this.style} ${this.weight} ${this.size}px/${this.lineHeight} ${this.face}`; }\n    toString() { return this.value; }\n}\n//# sourceMappingURL=Form.js.map","import { Pt } from \"./Pt\";\nexport class Typography {\n    static textWidthEstimator(fn, samples = [\"M\", \"n\", \".\"], distribution = [0.06, 0.8, 0.14]) {\n        let m = samples.map(fn);\n        let avg = new Pt(distribution).dot(m);\n        return (str) => str.length * avg;\n    }\n    static truncate(fn, str, width, tail = \"\") {\n        let trim = Math.floor(str.length * Math.min(1, width / fn(str)));\n        if (trim < str.length) {\n            trim = Math.max(0, trim - tail.length);\n            return [str.substr(0, trim) + tail, trim];\n        }\n        else {\n            return [str, str.length];\n        }\n    }\n    static fontSizeToBox(box, ratio = 1, byHeight = true) {\n        let i = byHeight ? 1 : 0;\n        let h = (box[1][i] - box[0][i]);\n        let f = ratio * h;\n        return function (b) {\n            let nh = (b[1][i] - b[0][i]) / h;\n            return f * nh;\n        };\n    }\n    static fontSizeToThreshold(threshold, direction = 0) {\n        return function (defaultSize, val) {\n            let d = defaultSize * val / threshold;\n            if (direction < 0)\n                return Math.min(d, defaultSize);\n            if (direction > 0)\n                return Math.max(d, defaultSize);\n            return d;\n        };\n    }\n}\n//# sourceMappingURL=Typography.js.map","import { MultiTouchSpace } from './Space';\nimport { VisualForm, Font } from \"./Form\";\nimport { Pt, Group, Bound } from \"./Pt\";\nimport { Const } from \"./Util\";\nimport { Typography as Typo } from \"./Typography\";\nimport { Rectangle } from './Op';\nexport class CanvasSpace extends MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this._pixelScale = 1;\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._offscreen = false;\n        this._initialResize = false;\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pt\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            let id = elem;\n            id = (elem[0] === \"#\" || elem[0] === \".\") ? elem : \"#\" + elem;\n            _selector = document.querySelector(id);\n            _existed = true;\n            this.id = id.substr(1);\n        }\n        if (!_selector) {\n            this._container = this._createElement(\"div\", this.id + \"_container\");\n            this._canvas = this._createElement(\"canvas\", this.id);\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else if (_selector.nodeName.toLowerCase() != \"canvas\") {\n            this._container = _selector;\n            this._canvas = this._createElement(\"canvas\", this.id + \"_canvas\");\n            this._container.appendChild(this._canvas);\n            this._initialResize = true;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n            this._autoResize = false;\n        }\n        setTimeout(this._ready.bind(this, callback), 100);\n        this._ctx = this._canvas.getContext('2d');\n    }\n    _createElement(elem = \"div\", id) {\n        let d = document.createElement(elem);\n        d.setAttribute(\"id\", id);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this._initialResize = false;\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor)\n            this._bgcolor = opt.bgcolor;\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        if (opt.retina !== false) {\n            let r1 = window.devicePixelRatio || 1;\n            let r2 = this._ctx.webkitBackingStorePixelRatio || this._ctx.mozBackingStorePixelRatio || this._ctx.msBackingStorePixelRatio || this._ctx.oBackingStorePixelRatio || this._ctx.backingStorePixelRatio || 1;\n            this._pixelScale = Math.max(1, r1 / r2);\n        }\n        if (opt.offscreen) {\n            this._offscreen = true;\n            this._offCanvas = this._createElement(\"canvas\", this.id + \"_offscreen\");\n            this._offCtx = this._offCanvas.getContext('2d');\n        }\n        else {\n            this._offscreen = false;\n        }\n        return this;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this._canvas.width = this.bound.size.x * this._pixelScale;\n        this._canvas.height = this.bound.size.y * this._pixelScale;\n        this._canvas.style.width = Math.floor(this.bound.size.x) + \"px\";\n        this._canvas.style.height = Math.floor(this.bound.size.y) + \"px\";\n        if (this._offscreen) {\n            this._offCanvas.width = this.bound.size.x * this._pixelScale;\n            this._offCanvas.height = this.bound.size.y * this._pixelScale;\n        }\n        if (this._pixelScale != 1) {\n            this._ctx.scale(this._pixelScale, this._pixelScale);\n            this._ctx.translate(0.5, 0.5);\n            if (this._offscreen) {\n                this._offCtx.scale(this._pixelScale, this._pixelScale);\n                this._offCtx.translate(0.5, 0.5);\n            }\n        }\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        this.render(this._ctx);\n        if (evt && !this.isPlaying)\n            this.playOnce(0);\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = (this._autoResize || this._initialResize) ? this._container.getBoundingClientRect() : this._canvas.getBoundingClientRect();\n        if (b) {\n            let box = Bound.fromBoundingRect(b);\n            box.center = box.center.add(window.pageXOffset, window.pageYOffset);\n            this.resize(box, evt);\n        }\n    }\n    set background(bg) { this._bgcolor = bg; }\n    get background() { return this._bgcolor; }\n    get pixelScale() {\n        return this._pixelScale;\n    }\n    get hasOffscreen() {\n        return this._offscreen;\n    }\n    get offscreenCtx() { return this._offCtx; }\n    get offscreenCanvas() { return this._offCanvas; }\n    getForm() { return new CanvasForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() {\n        return this._isReady;\n    }\n    get ctx() { return this._ctx; }\n    clear(bg) {\n        if (bg)\n            this._bgcolor = bg;\n        let lastColor = this._ctx.fillStyle;\n        if (this._bgcolor && this._bgcolor != \"transparent\") {\n            this._ctx.fillStyle = this._bgcolor;\n            this._ctx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n        }\n        else {\n            this._ctx.clearRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n        }\n        this._ctx.fillStyle = lastColor;\n        return this;\n    }\n    clearOffscreen(bg) {\n        if (this._offscreen) {\n            if (bg) {\n                this._offCtx.fillStyle = bg;\n                this._offCtx.fillRect(-1, -1, this._canvas.width + 1, this._canvas.height + 1);\n            }\n            else {\n                this._offCtx.clearRect(-1, -1, this._offCanvas.width + 1, this._offCanvas.height + 1);\n            }\n        }\n        return this;\n    }\n    playItems(time) {\n        if (this._isReady) {\n            this._ctx.save();\n            if (this._offscreen)\n                this._offCtx.save();\n            super.playItems(time);\n            this._ctx.restore();\n            if (this._offscreen)\n                this._offCtx.restore();\n            this.render(this._ctx);\n        }\n    }\n}\nexport class CanvasForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._style = {\n            fillStyle: \"#f03\", strokeStyle: \"#fff\",\n            lineWidth: 1, lineJoin: \"bevel\", lineCap: \"butt\",\n        };\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx = this._space.ctx;\n                this._ctx.fillStyle = this._style.fillStyle;\n                this._ctx.strokeStyle = this._style.strokeStyle;\n                this._ctx.lineJoin = \"bevel\";\n                this._ctx.font = this._font.value;\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    useOffscreen(off = true, clear = false) {\n        if (clear)\n            this._space.clearOffscreen((typeof clear == \"string\") ? clear : null);\n        this._ctx = (this._space.hasOffscreen && off) ? this._space.offscreenCtx : this._space.ctx;\n        return this;\n    }\n    renderOffscreen(offset = [0, 0]) {\n        if (this._space.hasOffscreen) {\n            this._space.ctx.drawImage(this._space.offscreenCanvas, offset[0], offset[1], this._space.width, this._space.height);\n        }\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.filled = c;\n        }\n        else {\n            this.filled = true;\n            this._style.fillStyle = c;\n            this._ctx.fillStyle = c;\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.stroked = c;\n        }\n        else {\n            this.stroked = true;\n            this._style.strokeStyle = c;\n            this._ctx.strokeStyle = c;\n            if (width) {\n                this._ctx.lineWidth = width;\n                this._style.lineWidth = width;\n            }\n            if (linejoin) {\n                this._ctx.lineJoin = linejoin;\n                this._style.lineJoin = linejoin;\n            }\n            if (linecap) {\n                this._ctx.lineCap = linecap;\n                this._style.lineCap = linecap;\n            }\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n            this._ctx.font = this._font.value;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        if (this._estimateTextWidth)\n            this.fontWidthEstimate(true);\n        return this;\n    }\n    fontWidthEstimate(estimate = true) {\n        this._estimateTextWidth = (estimate) ? Typo.textWidthEstimator(((c) => this._ctx.measureText(c).width)) : undefined;\n        return this;\n    }\n    getTextWidth(c) {\n        return (!this._estimateTextWidth) ? this._ctx.measureText(c + \" .\").width : this._estimateTextWidth(c);\n    }\n    _textTruncate(str, width, tail = \"\") {\n        return Typo.truncate(this.getTextWidth.bind(this), str, width, tail);\n    }\n    _textAlign(box, vertical, offset, center) {\n        if (!center)\n            center = Rectangle.center(box);\n        var px = box[0][0];\n        if (this._ctx.textAlign == \"end\" || this._ctx.textAlign == \"right\") {\n            px = box[1][0];\n        }\n        else if (this._ctx.textAlign == \"center\" || this._ctx.textAlign == \"middle\") {\n            px = center[0];\n        }\n        var py = center[1];\n        if (vertical == \"top\" || vertical == \"start\") {\n            py = box[0][1];\n        }\n        else if (vertical == \"end\" || vertical == \"bottom\") {\n            py = box[1][1];\n        }\n        return (offset) ? new Pt(px + offset[0], py + offset[1]) : new Pt(px, py);\n    }\n    reset() {\n        for (let k in this._style) {\n            if (this._style.hasOwnProperty(k)) {\n                this._ctx[k] = this._style[k];\n            }\n        }\n        this._font = new Font();\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    _paint() {\n        if (this._filled)\n            this._ctx.fill();\n        if (this._stroked)\n            this._ctx.stroke();\n    }\n    point(p, radius = 5, shape = \"square\") {\n        if (!p)\n            return;\n        if (!CanvasForm[shape])\n            throw new Error(`${shape} is not a static function of CanvasForm`);\n        CanvasForm[shape](this._ctx, p, radius);\n        this._paint();\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, 0, Const.two_pi, false);\n        ctx.closePath();\n    }\n    circle(pts) {\n        CanvasForm.circle(this._ctx, pts[0], pts[1][0]);\n        this._paint();\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        if (!pt)\n            return;\n        ctx.beginPath();\n        ctx.arc(pt[0], pt[1], radius, startAngle, endAngle, cc);\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        CanvasForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        this._paint();\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        if (!pt)\n            return;\n        let x1 = pt[0] - halfsize;\n        let y1 = pt[1] - halfsize;\n        let x2 = pt[0] + halfsize;\n        let y2 = pt[1] + halfsize;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x1, y2);\n        ctx.lineTo(x2, y2);\n        ctx.lineTo(x2, y1);\n        ctx.closePath();\n    }\n    square(pt, halfsize) {\n        CanvasForm.square(this._ctx, pt, halfsize);\n        this._paint();\n        return this;\n    }\n    static line(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            if (pts[i])\n                ctx.lineTo(pts[i][0], pts[i][1]);\n        }\n    }\n    line(pts) {\n        CanvasForm.line(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static polygon(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        for (let i = 1, len = pts.length; i < len; i++) {\n            if (pts[i])\n                ctx.lineTo(pts[i][0], pts[i][1]);\n        }\n        ctx.closePath();\n    }\n    polygon(pts) {\n        CanvasForm.polygon(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (pts.length < 2)\n            return;\n        ctx.beginPath();\n        ctx.moveTo(pts[0][0], pts[0][1]);\n        ctx.lineTo(pts[0][0], pts[1][1]);\n        ctx.lineTo(pts[1][0], pts[1][1]);\n        ctx.lineTo(pts[1][0], pts[0][1]);\n        ctx.closePath();\n    }\n    rect(pts) {\n        CanvasForm.rect(this._ctx, pts);\n        this._paint();\n        return this;\n    }\n    static image(ctx, img, target = new Pt(), orig) {\n        if (typeof target[0] === \"number\") {\n            ctx.drawImage(img, target[0], target[1]);\n        }\n        else {\n            let t = target;\n            if (orig) {\n                ctx.drawImage(img, orig[0][0], orig[0][1], orig[1][0] - orig[0][0], orig[1][1] - orig[0][1], t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n            }\n            else {\n                ctx.drawImage(img, t[0][0], t[0][1], t[1][0] - t[0][0], t[1][1] - t[0][1]);\n            }\n        }\n    }\n    image(img, target, original) {\n        CanvasForm.image(this._ctx, img, target, original);\n        return this;\n    }\n    static text(ctx, pt, txt, maxWidth) {\n        if (!pt)\n            return;\n        ctx.fillText(txt, pt[0], pt[1], maxWidth);\n    }\n    text(pt, txt, maxWidth) {\n        CanvasForm.text(this._ctx, pt, txt, maxWidth);\n        return this;\n    }\n    textBox(box, txt, verticalAlign = \"middle\", tail = \"\", overrideBaseline = true) {\n        if (overrideBaseline)\n            this._ctx.textBaseline = verticalAlign;\n        let size = Rectangle.size(box);\n        let t = this._textTruncate(txt, size[0], tail);\n        this.text(this._textAlign(box, verticalAlign), t[0]);\n        return this;\n    }\n    paragraphBox(box, txt, lineHeight = 1.2, verticalAlign = \"top\", crop = true) {\n        let size = Rectangle.size(box);\n        this._ctx.textBaseline = \"top\";\n        let lstep = this._font.size * lineHeight;\n        let nextLine = (sub, buffer = [], cc = 0) => {\n            if (!sub)\n                return buffer;\n            if (crop && cc * lstep > size[1] - lstep * 2)\n                return buffer;\n            if (cc > 10000)\n                throw new Error(\"max recursion reached (10000)\");\n            let t = this._textTruncate(sub, size[0], \"\");\n            let newln = t[0].indexOf(\"\\n\");\n            if (newln >= 0) {\n                buffer.push(t[0].substr(0, newln));\n                return nextLine(sub.substr(newln + 1), buffer, cc + 1);\n            }\n            let dt = t[0].lastIndexOf(\" \") + 1;\n            if (dt <= 0 || t[1] === sub.length)\n                dt = undefined;\n            let line = t[0].substr(0, dt);\n            buffer.push(line);\n            return (t[1] <= 0 || t[1] === sub.length) ? buffer : nextLine(sub.substr((dt || t[1])), buffer, cc + 1);\n        };\n        let lines = nextLine(txt);\n        let lsize = lines.length * lstep;\n        let lbox = box;\n        if (verticalAlign == \"middle\" || verticalAlign == \"center\") {\n            let lpad = (size[1] - lsize) / 2;\n            if (crop)\n                lpad = Math.max(0, lpad);\n            lbox = new Group(box[0].$add(0, lpad), box[1].$subtract(0, lpad));\n        }\n        else if (verticalAlign == \"bottom\") {\n            lbox = new Group(box[0].$add(0, size[1] - lsize), box[1]);\n        }\n        else {\n            lbox = new Group(box[0], box[0].$add(size[0], lsize));\n        }\n        let center = Rectangle.center(lbox);\n        for (let i = 0, len = lines.length; i < len; i++) {\n            this.text(this._textAlign(lbox, \"top\", [0, i * lstep], center), lines[i]);\n        }\n        return this;\n    }\n    alignText(alignment = \"left\", baseline = \"alphabetic\") {\n        if (baseline == \"center\")\n            baseline = \"middle\";\n        if (baseline == \"baseline\")\n            baseline = \"alphabetic\";\n        this._ctx.textAlign = alignment;\n        this._ctx.textBaseline = baseline;\n        return this;\n    }\n    log(txt) {\n        let w = this._ctx.measureText(txt).width + 20;\n        this.stroke(false).fill(\"rgba(0,0,0,.4)\").rect([[0, 0], [w, 20]]);\n        this.fill(\"#fff\").text([10, 14], txt);\n        return this;\n    }\n}\n//# sourceMappingURL=Canvas.js.map","import { Pt, Group } from \"./Pt\";\nimport { Line, Triangle } from \"./Op\";\nimport { Const } from \"./Util\";\nimport { Num, Geom } from \"./Num\";\nimport { Vec } from \"./LinearAlgebra\";\nexport class Create {\n    static distributeRandom(bound, count, dimensions = 2) {\n        let pts = new Group();\n        for (let i = 0; i < count; i++) {\n            let p = [bound.x + Math.random() * bound.width];\n            if (dimensions > 1)\n                p.push(bound.y + Math.random() * bound.height);\n            if (dimensions > 2)\n                p.push(bound.z + Math.random() * bound.depth);\n            pts.push(new Pt(p));\n        }\n        return pts;\n    }\n    static distributeLinear(line, count) {\n        let ln = Line.subpoints(line, count - 2);\n        ln.unshift(line[0]);\n        ln.push(line[line.length - 1]);\n        return ln;\n    }\n    static gridPts(bound, columns, rows, orientation = [0.5, 0.5]) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).$divide(columns, rows);\n        let offset = unit.$multiply(orientation);\n        let g = new Group();\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(bound.topLeft.$add(unit.$multiply(c, r)).add(offset));\n            }\n        }\n        return g;\n    }\n    static gridCells(bound, columns, rows) {\n        if (columns === 0 || rows === 0)\n            throw new Error(\"grid columns and rows cannot be 0\");\n        let unit = bound.size.$subtract(1).divide(columns, rows);\n        let g = [];\n        for (let r = 0; r < rows; r++) {\n            for (let c = 0; c < columns; c++) {\n                g.push(new Group(bound.topLeft.$add(unit.$multiply(c, r)), bound.topLeft.$add(unit.$multiply(c, r).add(unit))));\n            }\n        }\n        return g;\n    }\n    static radialPts(center, radius, count) {\n        let g = new Group();\n        let a = Const.two_pi / count;\n        for (let i = 0; i < count; i++) {\n            g.push(new Pt(center).toAngle(a * i - Const.half_pi, radius, true));\n        }\n        return g;\n    }\n    static noisePts(pts, dx = 0.01, dy = 0.01, rows = 0, columns = 0) {\n        let seed = Math.random();\n        let g = new Group();\n        for (let i = 0, len = pts.length; i < len; i++) {\n            let np = new Noise(pts[i]);\n            let r = (rows && rows > 0) ? Math.floor(i / rows) : i;\n            let c = (columns && columns > 0) ? i % columns : i;\n            np.initNoise(dx * c, dy * r);\n            np.seed(seed);\n            g.push(np);\n        }\n        return g;\n    }\n    static delaunay(pts) {\n        return Delaunay.from(pts);\n    }\n}\nconst grad3 = [\n    [1, 1, 0], [-1, 1, 0], [1, -1, 0], [-1, -1, 0],\n    [1, 0, 1], [-1, 0, 1], [1, 0, -1], [-1, 0, -1],\n    [0, 1, 1], [0, -1, 1], [0, 1, -1], [0, -1, -1]\n];\nconst permTable = [151, 160, 137, 91, 90, 15,\n    131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23,\n    190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33,\n    88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166,\n    77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244,\n    102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196,\n    135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123,\n    5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42,\n    223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9,\n    129, 22, 39, 253, 9, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228,\n    251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107,\n    49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254,\n    138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180\n];\nexport class Noise extends Pt {\n    constructor(...args) {\n        super(...args);\n        this.perm = [];\n        this._n = new Pt(0.01, 0.01);\n        this.perm = permTable.concat(permTable);\n    }\n    initNoise(...args) {\n        this._n = new Pt(...args);\n    }\n    step(x = 0, y = 0) {\n        this._n.add(x, y);\n    }\n    seed(s) {\n        if (s > 0 && s < 1)\n            s *= 65536;\n        s = Math.floor(s);\n        if (s < 256)\n            s |= s << 8;\n        for (let i = 0; i < 255; i++) {\n            let v = (i & 1) ? permTable[i] ^ (s & 255) : permTable[i] ^ ((s >> 8) & 255);\n            this.perm[i] = this.perm[i + 256] = v;\n        }\n    }\n    noise2D() {\n        let i = Math.max(0, Math.floor(this._n[0])) % 255;\n        let j = Math.max(0, Math.floor(this._n[1])) % 255;\n        let x = (this._n[0] % 255) - i;\n        let y = (this._n[1] % 255) - j;\n        let n00 = Vec.dot(grad3[(i + this.perm[j]) % 12], [x, y, 0]);\n        let n01 = Vec.dot(grad3[(i + this.perm[j + 1]) % 12], [x, y - 1, 0]);\n        let n10 = Vec.dot(grad3[(i + 1 + this.perm[j]) % 12], [x - 1, y, 0]);\n        let n11 = Vec.dot(grad3[(i + 1 + this.perm[j + 1]) % 12], [x - 1, y - 1, 0]);\n        let _fade = (f) => f * f * f * (f * (f * 6 - 15) + 10);\n        let tx = _fade(x);\n        return Num.lerp(Num.lerp(n00, n10, tx), Num.lerp(n01, n11, tx), _fade(y));\n    }\n}\nexport class Delaunay extends Group {\n    constructor() {\n        super(...arguments);\n        this._mesh = [];\n    }\n    delaunay(triangleOnly = true) {\n        if (this.length < 3)\n            return [];\n        this._mesh = [];\n        let n = this.length;\n        let indices = [];\n        for (let i = 0; i < n; i++)\n            indices[i] = i;\n        indices.sort((i, j) => this[j][0] - this[i][0]);\n        let pts = this.slice();\n        let st = this._superTriangle();\n        pts = pts.concat(st);\n        let opened = [this._circum(n, n + 1, n + 2, st)];\n        let closed = [];\n        let tris = [];\n        for (let i = 0, len = indices.length; i < len; i++) {\n            let c = indices[i];\n            let edges = [];\n            let j = opened.length;\n            if (!this._mesh[c])\n                this._mesh[c] = {};\n            while (j--) {\n                let circum = opened[j];\n                let radius = circum.circle[1][0];\n                let d = pts[c].$subtract(circum.circle[0]);\n                if (d[0] > 0 && d[0] * d[0] > radius * radius) {\n                    closed.push(circum);\n                    tris.push(circum.triangle);\n                    opened.splice(j, 1);\n                    continue;\n                }\n                if (d[0] * d[0] + d[1] * d[1] - radius * radius > Const.epsilon) {\n                    continue;\n                }\n                edges.push(circum.i, circum.j, circum.j, circum.k, circum.k, circum.i);\n                opened.splice(j, 1);\n            }\n            Delaunay._dedupe(edges);\n            j = edges.length;\n            while (j > 1) {\n                opened.push(this._circum(edges[--j], edges[--j], c, false, pts));\n            }\n        }\n        for (let i = 0, len = opened.length; i < len; i++) {\n            let o = opened[i];\n            if (o.i < n && o.j < n && o.k < n) {\n                closed.push(o);\n                tris.push(o.triangle);\n                this._cache(o);\n            }\n        }\n        return (triangleOnly) ? tris : closed;\n    }\n    voronoi() {\n        let vs = [];\n        let n = this._mesh;\n        for (let i = 0, len = n.length; i < len; i++) {\n            vs.push(this.neighborPts(i, true));\n        }\n        return vs;\n    }\n    mesh() {\n        return this._mesh;\n    }\n    neighborPts(i, sort = false) {\n        let cs = new Group();\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k].circle[0]);\n        }\n        return (sort) ? Geom.sortEdges(cs) : cs;\n    }\n    neighbors(i) {\n        let cs = [];\n        let n = this._mesh;\n        for (let k in n[i]) {\n            if (n[i].hasOwnProperty(k))\n                cs.push(n[i][k]);\n        }\n        return cs;\n    }\n    _cache(o) {\n        this._mesh[o.i][`${Math.min(o.j, o.k)}-${Math.max(o.j, o.k)}`] = o;\n        this._mesh[o.j][`${Math.min(o.i, o.k)}-${Math.max(o.i, o.k)}`] = o;\n        this._mesh[o.k][`${Math.min(o.i, o.j)}-${Math.max(o.i, o.j)}`] = o;\n    }\n    _superTriangle() {\n        let minPt = this[0];\n        let maxPt = this[0];\n        for (let i = 1, len = this.length; i < len; i++) {\n            minPt = minPt.$min(this[i]);\n            maxPt = maxPt.$max(this[i]);\n        }\n        let d = maxPt.$subtract(minPt);\n        let mid = minPt.$add(maxPt).divide(2);\n        let dmax = Math.max(d[0], d[1]);\n        return new Group(mid.$subtract(20 * dmax, dmax), mid.$add(0, 20 * dmax), mid.$add(20 * dmax, -dmax));\n    }\n    _triangle(i, j, k, pts = this) {\n        return new Group(pts[i], pts[j], pts[k]);\n    }\n    _circum(i, j, k, tri, pts = this) {\n        let t = tri || this._triangle(i, j, k, pts);\n        return {\n            i: i,\n            j: j,\n            k: k,\n            triangle: t,\n            circle: Triangle.circumcircle(t)\n        };\n    }\n    static _dedupe(edges) {\n        let j = edges.length;\n        while (j > 1) {\n            let b = edges[--j];\n            let a = edges[--j];\n            let i = j;\n            while (i > 1) {\n                let n = edges[--i];\n                let m = edges[--i];\n                if ((a == m && b == n) || (a == n && b == m)) {\n                    edges.splice(j, 2);\n                    edges.splice(i, 2);\n                    break;\n                }\n            }\n        }\n        return edges;\n    }\n}\n//# sourceMappingURL=Create.js.map","import { Pt, Group } from \"./Pt\";\nimport { Util } from \"./Util\";\nimport { Num, Geom } from \"./Num\";\nexport class Color extends Pt {\n    constructor(...args) {\n        super(...args);\n        this._mode = \"rgb\";\n        this._isNorm = false;\n    }\n    static from(...args) {\n        let p = [1, 1, 1, 1];\n        let c = Util.getArgs(args);\n        for (let i = 0, len = p.length; i < len; i++) {\n            if (i < c.length)\n                p[i] = c[i];\n        }\n        return new Color(p);\n    }\n    static fromHex(hex) {\n        if (hex[0] == \"#\")\n            hex = hex.substr(1);\n        if (hex.length <= 3) {\n            let fn = (i) => hex[i] || \"F\";\n            hex = `${fn(0)}${fn(0)}${fn(1)}${fn(1)}${fn(2)}${fn(2)}`;\n        }\n        let alpha = 1;\n        if (hex.length === 8) {\n            alpha = hex.substr(6) && 0xFF / 255;\n            hex = hex.substring(0, 6);\n        }\n        let hexVal = parseInt(hex, 16);\n        return new Color(hexVal >> 16, hexVal >> 8 & 0xFF, hexVal & 0xFF, alpha);\n    }\n    static rgb(...args) { return Color.from(...args).toMode(\"rgb\"); }\n    static hsl(...args) { return Color.from(...args).toMode(\"hsl\"); }\n    static hsb(...args) { return Color.from(...args).toMode(\"hsb\"); }\n    static lab(...args) { return Color.from(...args).toMode(\"lab\"); }\n    static lch(...args) { return Color.from(...args).toMode(\"lch\"); }\n    static luv(...args) { return Color.from(...args).toMode(\"luv\"); }\n    static xyz(...args) { return Color.from(...args).toMode(\"xyz\"); }\n    static maxValues(mode) { return Color.ranges[mode].zipSlice(1).$take([0, 1, 2]); }\n    get hex() { return this.toString(\"hex\"); }\n    get rgb() { return this.toString(\"rgb\"); }\n    get rgba() { return this.toString(\"rgba\"); }\n    clone() {\n        let c = new Color(this);\n        c.toMode(this._mode);\n        return c;\n    }\n    toMode(mode, convert = false) {\n        if (convert) {\n            let fname = this._mode.toUpperCase() + \"to\" + mode.toUpperCase();\n            if (Color[fname]) {\n                this.to(Color[fname](this, this._isNorm, this._isNorm));\n            }\n            else {\n                throw new Error(\"Cannot convert color with \" + fname);\n            }\n        }\n        this._mode = mode;\n        return this;\n    }\n    get mode() { return this._mode; }\n    get r() { return this[0]; }\n    set r(n) { this[0] = n; }\n    get g() { return this[1]; }\n    set g(n) { this[1] = n; }\n    get b() { return this[2]; }\n    set b(n) { this[2] = n; }\n    get h() { return (this._mode == \"lch\") ? this[2] : this[0]; }\n    set h(n) {\n        let i = (this._mode == \"lch\") ? 2 : 0;\n        this[i] = n;\n    }\n    get s() { return this[1]; }\n    set s(n) { this[1] = n; }\n    get l() { return (this._mode == \"hsl\") ? this[2] : this[0]; }\n    set l(n) {\n        let i = (this._mode == \"hsl\") ? 2 : 0;\n        this[i] = n;\n    }\n    get a() { return this[1]; }\n    set a(n) { this[1] = n; }\n    get c() { return this[1]; }\n    set c(n) { this[1] = n; }\n    get u() { return this[1]; }\n    set u(n) { this[1] = n; }\n    get v() { return this[2]; }\n    set v(n) { this[2] = n; }\n    get alpha() { return (this.length > 3) ? this[3] : 1; }\n    get normalized() { return this._isNorm; }\n    set normalized(b) { this._isNorm = b; }\n    normalize(toNorm = true) {\n        if (this._isNorm == toNorm)\n            return this;\n        let ranges = Color.ranges[this._mode];\n        for (let i = 0; i < 3; i++) {\n            this[i] = (!toNorm)\n                ? Num.mapToRange(this[i], 0, 1, ranges[i][0], ranges[i][1])\n                : Num.mapToRange(this[i], ranges[i][0], ranges[i][1], 0, 1);\n        }\n        this._isNorm = toNorm;\n        return this;\n    }\n    $normalize(toNorm = true) { return this.clone().normalize(toNorm); }\n    toString(format = \"mode\") {\n        if (format == \"hex\") {\n            let _hex = (n) => {\n                let s = Math.floor(n).toString(16);\n                return (s.length < 2) ? '0' + s : s;\n            };\n            return `#${_hex(this[0])}${_hex(this[1])}${_hex(this[2])}`;\n        }\n        else if (format == \"rgba\") {\n            return `rgba(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])},${this.alpha}`;\n        }\n        else if (format == \"rgb\") {\n            return `rgb(${Math.floor(this[0])},${Math.floor(this[1])},${Math.floor(this[2])}`;\n        }\n        else {\n            return `${this._mode}(${this[0]},${this[1]},${this[2]},${this.alpha})`;\n        }\n    }\n    static RGBtoHSL(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let h = (max + min) / 2;\n        let s = h;\n        let l = h;\n        if (max == min) {\n            h = 0;\n            s = 0;\n        }\n        else {\n            let d = max - min;\n            s = (l > 0.5) ? d / (2 - max - min) : d / (max + min);\n            h = 0;\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsl(((normalizedOutput) ? h / 60 : h * 60), s, l, rgb.alpha);\n    }\n    static HSLtoRGB(hsl, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, l] = hsl;\n        if (!normalizedInput)\n            h = h / 360;\n        if (s == 0)\n            return Color.rgb(l * 255, l * 255, l * 255, hsl.alpha);\n        let q = (l <= 0.5) ? l * (1 + s) : l + s - (l * s);\n        let p = 2 * l - q;\n        let convert = (t) => {\n            t = (t < 0) ? t + 1 : (t > 1) ? t - 1 : t;\n            if (t * 6 < 1) {\n                return p + (q - p) * t * 6;\n            }\n            else if (t * 2 < 1) {\n                return q;\n            }\n            else if (t * 3 < 2) {\n                return p + (q - p) * ((2 / 3) - t) * 6;\n            }\n            else {\n                return p;\n            }\n        };\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * convert((h + 1 / 3)), sc * convert(h), sc * convert((h - 1 / 3)), hsl.alpha);\n    }\n    static RGBtoHSB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let [r, g, b] = (!normalizedInput) ? rgb.$normalize() : rgb;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let d = max - min;\n        let h = 0;\n        let s = (max === 0) ? 0 : d / max;\n        let v = max;\n        if (max != min) {\n            if (max === r) {\n                h = (g - b) / d + ((g < b) ? 6 : 0);\n            }\n            else if (max === g) {\n                h = (b - r) / d + 2;\n            }\n            else if (max === b) {\n                h = (r - g) / d + 4;\n            }\n        }\n        return Color.hsb(((normalizedOutput) ? h / 60 : h * 60), s, v, rgb.alpha);\n    }\n    static HSBtoRGB(hsb, normalizedInput = false, normalizedOutput = false) {\n        let [h, s, v] = hsb;\n        if (!normalizedInput)\n            h = h / 360;\n        let i = Math.floor(h * 6);\n        let f = h * 6 - i;\n        let p = v * (1 - s);\n        let q = v * (1 - f * s);\n        let t = v * (1 - (1 - f) * s);\n        let pick = [\n            [v, t, p], [q, v, p], [p, v, t],\n            [p, q, v], [t, p, v], [v, p, q]\n        ];\n        let c = pick[i % 6];\n        let sc = (normalizedOutput) ? 1 : 255;\n        return Color.rgb(sc * c[0], sc * c[1], sc * c[2], hsb.alpha);\n    }\n    static RGBtoLAB(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLAB(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LABtoRGB(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        return Color.XYZtoRGB(Color.LABtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoLCH(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.LABtoLCH(Color.RGBtoLAB(c), false, normalizedOutput);\n    }\n    static LCHtoRGB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        return Color.LABtoRGB(Color.LCHtoLAB(c), false, normalizedOutput);\n    }\n    static RGBtoLUV(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? rgb.$normalize(false) : rgb;\n        return Color.XYZtoLUV(Color.RGBtoXYZ(c), false, normalizedOutput);\n    }\n    static LUVtoRGB(luv, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? luv.$normalize(false) : luv;\n        return Color.XYZtoRGB(Color.LUVtoXYZ(c), false, normalizedOutput);\n    }\n    static RGBtoXYZ(rgb, normalizedInput = false, normalizedOutput = false) {\n        let c = (!normalizedInput) ? rgb.$normalize() : rgb.clone();\n        for (let i = 0; i < 3; i++) {\n            c[i] = (c[i] > 0.04045) ? Math.pow((c[i] + 0.055) / 1.055, 2.4) : c[i] / 12.92;\n            if (!normalizedOutput)\n                c[i] = c[i] * 100;\n        }\n        let cc = Color.xyz(c[0] * 0.4124564 + c[1] * 0.3575761 + c[2] * 0.1804375, c[0] * 0.2126729 + c[1] * 0.7151522 + c[2] * 0.0721750, c[0] * 0.0193339 + c[1] * 0.1191920 + c[2] * 0.9503041, rgb.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoRGB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (!normalizedInput) ? xyz.$normalize() : xyz;\n        let rgb = [\n            x * 3.2404542 + y * -1.5371385 + z * -0.4985314,\n            x * -0.9692660 + y * 1.8760108 + z * 0.0415560,\n            x * 0.0556434 + y * -0.2040259 + z * 1.0572252\n        ];\n        for (let i = 0; i < 3; i++) {\n            rgb[i] = (rgb[i] < 0) ? 0 : (rgb[i] > 0.0031308) ? (1.055 * Math.pow(rgb[i], 1 / 2.4) - 0.055) : (12.92 * rgb[i]);\n            rgb[i] = Math.max(0, Math.min(1, rgb[i]));\n            if (!normalizedOutput)\n                rgb[i] = Math.round(rgb[i] * 255);\n        }\n        let cc = Color.rgb(rgb[0], rgb[1], rgb[2], xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLAB(xyz, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? xyz.$normalize(false) : xyz.clone();\n        c.divide(Color.D65);\n        let fn = (n) => (n > 0.008856) ? Math.pow(n, 1 / 3) : (7.787 * n) + 16 / 116;\n        let cy = fn(c[1]);\n        let cc = Color.lab((116 * cy) - 16, 500 * (fn(c[0]) - cy), 200 * (cy - fn(c[2])), xyz.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static LABtoXYZ(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let y = (c[0] + 16) / 116;\n        let x = (c[1] / 500) + y;\n        let z = y - c[2] / 200;\n        let fn = (n) => {\n            let nnn = n * n * n;\n            return (nnn > 0.008856) ? nnn : (n - 16 / 116) / 7.787;\n        };\n        let d = Color.D65;\n        let cc = Color.xyz(Math.max(0, d[0] * fn(x)), Math.max(0, d[1] * fn(y)), Math.max(0, d[2] * fn(z)), lab.alpha);\n        return (normalizedOutput) ? cc.normalize() : cc;\n    }\n    static XYZtoLUV(xyz, normalizedInput = false, normalizedOutput = false) {\n        let [x, y, z] = (normalizedInput) ? xyz.$normalize(false) : xyz;\n        let u = (4 * x) / (x + (15 * y) + (3 * z));\n        let v = (9 * y) / (x + (15 * y) + (3 * z));\n        y = y / 100;\n        y = (y > 0.008856) ? Math.pow(y, 1 / 3) : (7.787 * y + 16 / 116);\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let L = (116 * y) - 16;\n        return Color.luv(L, 13 * L * (u - refU), 13 * L * (v - refV), xyz.alpha);\n    }\n    static LUVtoXYZ(luv, normalizedInput = false, normalizedOutput = false) {\n        let [l, u, v] = (normalizedInput) ? luv.$normalize(false) : luv;\n        let y = (l + 16) / 116;\n        let cubeY = y * y * y;\n        y = (cubeY > 0.008856) ? cubeY : (y - 16 / 116) / 7.787;\n        let refU = (4 * Color.D65[0]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        let refV = (9 * Color.D65[1]) / (Color.D65[0] + (15 * Color.D65[1]) + (3 * Color.D65[2]));\n        u = u / (13 * l) + refU;\n        v = v / (13 * l) + refV;\n        y = y * 100;\n        let x = -1 * (9 * y * u) / ((u - 4) * v - u * v);\n        let z = (9 * y - (15 * v * y) - (v * x)) / (3 * v);\n        return Color.xyz(x, y, z, luv.alpha);\n    }\n    static LABtoLCH(lab, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lab.$normalize(false) : lab;\n        let h = Geom.toDegree(Geom.boundRadian(Math.atan2(c[2], c[1])));\n        return Color.lch(c[0], Math.sqrt(c[1] * c[1] + c[2] * c[2]), h, lab.alpha);\n    }\n    static LCHtoLAB(lch, normalizedInput = false, normalizedOutput = false) {\n        let c = (normalizedInput) ? lch.$normalize(false) : lch;\n        let rad = Geom.toRadian(c[2]);\n        return Color.lab(c[0], Math.cos(rad) * c[1], Math.sin(rad) * c[1], lch.alpha);\n    }\n}\nColor.D65 = new Pt(95.047, 100, 108.883, 1);\nColor.ranges = {\n    rgb: new Group(new Pt(0, 255), new Pt(0, 255), new Pt(0, 255)),\n    hsl: new Group(new Pt(0, 360), new Pt(0, 1), new Pt(0, 1)),\n    hsb: new Group(new Pt(0, 360), new Pt(0, 1), new Pt(0, 1)),\n    lab: new Group(new Pt(0, 100), new Pt(-128, 127), new Pt(-128, 127)),\n    lch: new Group(new Pt(0, 100), new Pt(0, 100), new Pt(0, 360)),\n    luv: new Group(new Pt(0, 100), new Pt(-134, 220), new Pt(-140, 122)),\n    xyz: new Group(new Pt(0, 100), new Pt(0, 100), new Pt(0, 100))\n};\n//# sourceMappingURL=Color.js.map","import { MultiTouchSpace } from './Space';\nimport { VisualForm, Font } from \"./Form\";\nimport { Util } from './Util';\nimport { Pt, Bound } from './Pt';\nexport class DOMSpace extends MultiTouchSpace {\n    constructor(elem, callback) {\n        super();\n        this.id = \"domspace\";\n        this._autoResize = true;\n        this._bgcolor = \"#e1e9f0\";\n        this._css = {};\n        var _selector = null;\n        var _existed = false;\n        this.id = \"pts\";\n        if (elem instanceof Element) {\n            _selector = elem;\n            this.id = \"pts_existing_space\";\n        }\n        else {\n            _selector = document.querySelector(elem);\n            _existed = true;\n            this.id = elem.substr(1);\n        }\n        if (!_selector) {\n            this._container = DOMSpace.createElement(\"div\", \"pts_container\");\n            this._canvas = DOMSpace.createElement(\"div\", \"pts_element\");\n            this._container.appendChild(this._canvas);\n            document.body.appendChild(this._container);\n            _existed = false;\n        }\n        else {\n            this._canvas = _selector;\n            this._container = _selector.parentElement;\n        }\n        setTimeout(this._ready.bind(this, callback), 50);\n    }\n    static createElement(elem = \"div\", id, appendTo) {\n        let d = document.createElement(elem);\n        if (id)\n            d.setAttribute(\"id\", id);\n        if (appendTo && appendTo.appendChild)\n            appendTo.appendChild(d);\n        return d;\n    }\n    _ready(callback) {\n        if (!this._container)\n            throw new Error(`Cannot initiate #${this.id} element`);\n        this._isReady = true;\n        this._resizeHandler(null);\n        this.clear(this._bgcolor);\n        this._canvas.dispatchEvent(new Event(\"ready\"));\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                if (this.players[k].start)\n                    this.players[k].start(this.bound.clone(), this);\n            }\n        }\n        this._pointer = this.center;\n        this.refresh(false);\n        if (callback)\n            callback(this.bound, this._canvas);\n    }\n    setup(opt) {\n        if (opt.bgcolor) {\n            this._bgcolor = opt.bgcolor;\n        }\n        this.autoResize = (opt.resize != undefined) ? opt.resize : false;\n        return this;\n    }\n    getForm() {\n        return null;\n    }\n    set autoResize(auto) {\n        this._autoResize = auto;\n        if (auto) {\n            window.addEventListener('resize', this._resizeHandler.bind(this));\n        }\n        else {\n            delete this._css['width'];\n            delete this._css['height'];\n            window.removeEventListener('resize', this._resizeHandler.bind(this));\n        }\n    }\n    get autoResize() { return this._autoResize; }\n    resize(b, evt) {\n        this.bound = b;\n        this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        for (let k in this.players) {\n            if (this.players.hasOwnProperty(k)) {\n                let p = this.players[k];\n                if (p.resize)\n                    p.resize(this.bound, evt);\n            }\n        }\n        return this;\n    }\n    _resizeHandler(evt) {\n        let b = Bound.fromBoundingRect(this._container.getBoundingClientRect());\n        if (this._autoResize) {\n            this.styles({ width: \"100%\", height: \"100%\" }, true);\n        }\n        else {\n            this.styles({ width: `${b.width}px`, height: `${b.height}px` }, true);\n        }\n        this.resize(b, evt);\n    }\n    get element() {\n        return this._canvas;\n    }\n    get parent() {\n        return this._container;\n    }\n    get ready() { return this._isReady; }\n    clear(bg) {\n        if (bg)\n            this.background = bg;\n        this._canvas.innerHTML = \"\";\n        return this;\n    }\n    set background(bg) {\n        this._bgcolor = bg;\n        this._container.style.backgroundColor = this._bgcolor;\n    }\n    get background() { return this._bgcolor; }\n    style(key, val, update = false) {\n        this._css[key] = val;\n        if (update)\n            this._canvas.style[key] = val;\n        return this;\n    }\n    styles(styles, update = false) {\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k))\n                this.style(k, styles[k], update);\n        }\n        return this;\n    }\n    static setAttr(elem, data) {\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                elem.setAttribute(k, data[k]);\n            }\n        }\n        return elem;\n    }\n    static getInlineStyles(data) {\n        let str = \"\";\n        for (let k in data) {\n            if (data.hasOwnProperty(k)) {\n                if (data[k])\n                    str += `${k}: ${data[k]}; `;\n            }\n        }\n        return str;\n    }\n}\nexport class HTMLSpace extends DOMSpace {\n    getForm() {\n        return new HTMLForm(this);\n    }\n    static htmlElement(parent, name, id, autoClass = true) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElement(name);\n            elem.setAttribute(\"id\", id);\n            if (autoClass)\n                elem.setAttribute(\"class\", id.substring(0, id.indexOf(\"-\")));\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + HTMLForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexport class HTMLForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {\n                \"filled\": true,\n                \"stroked\": true,\n                \"background\": \"#f03\",\n                \"border-color\": \"#fff\",\n                \"color\": \"#000\",\n                \"border-width\": \"1px\",\n                \"border-radius\": \"0\",\n                \"border-style\": \"solid\",\n                \"position\": \"absolute\",\n                \"top\": 0,\n                \"left\": 0,\n                \"width\": 0,\n                \"height\": 0\n            },\n            font: \"11px sans-serif\",\n            fontSize: 11,\n            fontFamily: \"sans-serif\"\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_dom_\" + (HTMLForm.groupID++);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v, unit = '') {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = `${v}${unit}`;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n            if (!c)\n                this.styleTo(\"background\", \"transparent\");\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"background\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n            if (!c)\n                this.styleTo(\"border-width\", 0);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"border-color\", c);\n            this.styleTo(\"border-width\", (width || 1) + \"px\");\n        }\n        return this;\n    }\n    fillText(c) {\n        this.styleTo(\"color\", c);\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n            this._ctx.font = this._font.value;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        return this;\n    }\n    reset() {\n        this._ctx.style = {\n            \"filled\": true, \"stroked\": true,\n            \"background\": \"#f03\", \"border-color\": \"#fff\",\n            \"border-width\": \"1px\"\n        };\n        this._font = new Font(14, \"sans-serif\");\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(HTMLForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${HTMLForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"background: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"border: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('background') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('border-width') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return HTMLSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static rectStyle(ctx, pt, size) {\n        ctx.style[\"left\"] = pt[0] + \"px\";\n        ctx.style[\"top\"] = pt[1] + \"px\";\n        ctx.style[\"width\"] = size[0] + \"px\";\n        ctx.style[\"height\"] = size[1] + \"px\";\n        return ctx;\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return HTMLForm.circle(ctx, pt, radius);\n        }\n        else {\n            return HTMLForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        if (shape == \"circle\")\n            this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-circle ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(radius), new Pt(radius * 2, radius * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"100%\");\n        HTMLForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-square ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, new Pt(pt).$subtract(halfsize), new Pt(halfsize * 2, halfsize * 2));\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        HTMLForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, { class: `pts-form pts-rect ${ctx.currentClass}` });\n        HTMLForm.rectStyle(ctx, pts[0], pts[1]);\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        this.styleTo(\"border-radius\", \"0\");\n        HTMLForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = HTMLSpace.htmlElement(ctx.group, \"div\", HTMLForm.getID(ctx));\n        HTMLSpace.setAttr(elem, {\n            position: 'absolute',\n            class: `pts-form pts-text ${ctx.currentClass}`,\n            left: pt[0],\n            top: pt[1],\n        });\n        elem.textContent = txt;\n        HTMLForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        HTMLForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        Util.warn(\"arc is not implemented in HTMLForm\");\n        return this;\n    }\n    line(pts) {\n        Util.warn(\"line is not implemented in HTMLForm\");\n        return this;\n    }\n    polygon(pts) {\n        Util.warn(\"polygon is not implemented in HTMLForm\");\n        return this;\n    }\n}\nHTMLForm.groupID = 0;\nHTMLForm.domID = 0;\n//# sourceMappingURL=Dom.js.map","import { VisualForm, Font } from \"./Form\";\nimport { Geom } from './Num';\nimport { Const } from './Util';\nimport { Pt, Group } from './Pt';\nimport { Rectangle } from \"./Op\";\nimport { DOMSpace } from \"./Dom\";\nexport class SVGSpace extends DOMSpace {\n    constructor(elem, callback) {\n        super(elem, callback);\n        this.id = \"svgspace\";\n        this._bgcolor = \"#999\";\n        if (this._canvas.nodeName.toLowerCase() != \"svg\") {\n            let s = SVGSpace.svgElement(this._canvas, \"svg\", `${this.id}_svg`);\n            this._container = this._canvas;\n            this._canvas = s;\n        }\n    }\n    getForm() { return new SVGForm(this); }\n    get element() {\n        return this._canvas;\n    }\n    resize(b, evt) {\n        super.resize(b, evt);\n        SVGSpace.setAttr(this.element, {\n            \"viewBox\": `0 0 ${this.bound.width} ${this.bound.height}`,\n            \"width\": `${this.bound.width}`,\n            \"height\": `${this.bound.height}`,\n            \"xmlns\": \"http://www.w3.org/2000/svg\",\n            \"version\": \"1.1\"\n        });\n        return this;\n    }\n    static svgElement(parent, name, id) {\n        if (!parent || !parent.appendChild)\n            throw new Error(\"parent is not a valid DOM element\");\n        let elem = document.querySelector(`#${id}`);\n        if (!elem) {\n            elem = document.createElementNS(\"http://www.w3.org/2000/svg\", name);\n            elem.setAttribute(\"id\", id);\n            parent.appendChild(elem);\n        }\n        return elem;\n    }\n    remove(player) {\n        let temp = this._container.querySelectorAll(\".\" + SVGForm.scopeID(player));\n        temp.forEach((el) => {\n            el.parentNode.removeChild(el);\n        });\n        return super.remove(player);\n    }\n    removeAll() {\n        this._container.innerHTML = \"\";\n        return super.removeAll();\n    }\n}\nexport class SVGForm extends VisualForm {\n    constructor(space) {\n        super();\n        this._ctx = {\n            group: null,\n            groupID: \"pts\",\n            groupCount: 0,\n            currentID: \"pts0\",\n            currentClass: \"\",\n            style: {\n                \"filled\": true,\n                \"stroked\": true,\n                \"fill\": \"#f03\",\n                \"stroke\": \"#fff\",\n                \"stroke-width\": 1,\n                \"stroke-linejoin\": \"bevel\",\n                \"stroke-linecap\": \"sqaure\"\n            },\n            font: \"11px sans-serif\",\n            fontSize: 11,\n            fontFamily: \"sans-serif\"\n        };\n        this._ready = false;\n        this._space = space;\n        this._space.add({ start: () => {\n                this._ctx.group = this._space.element;\n                this._ctx.groupID = \"pts_svg_\" + (SVGForm.groupID++);\n                this._ready = true;\n            } });\n    }\n    get space() { return this._space; }\n    styleTo(k, v) {\n        if (this._ctx.style[k] === undefined)\n            throw new Error(`${k} style property doesn't exist`);\n        this._ctx.style[k] = v;\n    }\n    fill(c) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"filled\", c);\n        }\n        else {\n            this.styleTo(\"filled\", true);\n            this.styleTo(\"fill\", c);\n        }\n        return this;\n    }\n    stroke(c, width, linejoin, linecap) {\n        if (typeof c == \"boolean\") {\n            this.styleTo(\"stroked\", c);\n        }\n        else {\n            this.styleTo(\"stroked\", true);\n            this.styleTo(\"stroke\", c);\n            if (width)\n                this.styleTo(\"stroke-width\", width);\n            if (linejoin)\n                this.styleTo(\"stroke-linejoin\", linejoin);\n            if (linecap)\n                this.styleTo(\"stroke-linecap\", linecap);\n        }\n        return this;\n    }\n    cls(c) {\n        if (typeof c == \"boolean\") {\n            this._ctx.currentClass = \"\";\n        }\n        else {\n            this._ctx.currentClass = c;\n        }\n        return this;\n    }\n    font(sizeOrFont, weight, style, lineHeight, family) {\n        if (typeof sizeOrFont == \"number\") {\n            this._font.size = sizeOrFont;\n            if (family)\n                this._font.face = family;\n            if (weight)\n                this._font.weight = weight;\n            if (style)\n                this._font.style = style;\n            if (lineHeight)\n                this._font.lineHeight = lineHeight;\n            this._ctx.font = this._font.value;\n        }\n        else {\n            this._font = sizeOrFont;\n        }\n        return this;\n    }\n    reset() {\n        this._ctx.style = {\n            \"filled\": true, \"stroked\": true,\n            \"fill\": \"#f03\", \"stroke\": \"#fff\",\n            \"stroke-width\": 1,\n            \"stroke-linejoin\": \"bevel\",\n            \"stroke-linecap\": \"sqaure\"\n        };\n        this._font = new Font(14, \"sans-serif\");\n        this._ctx.font = this._font.value;\n        return this;\n    }\n    updateScope(group_id, group) {\n        this._ctx.group = group;\n        this._ctx.groupID = group_id;\n        this._ctx.groupCount = 0;\n        this.nextID();\n        return this._ctx;\n    }\n    scope(item) {\n        if (!item || item.animateID == null)\n            throw new Error(\"item not defined or not yet added to Space\");\n        return this.updateScope(SVGForm.scopeID(item), this.space.element);\n    }\n    nextID() {\n        this._ctx.groupCount++;\n        this._ctx.currentID = `${this._ctx.groupID}-${this._ctx.groupCount}`;\n        return this._ctx.currentID;\n    }\n    static getID(ctx) {\n        return ctx.currentID || `p-${SVGForm.domID++}`;\n    }\n    static scopeID(item) {\n        return `item-${item.animateID}`;\n    }\n    static style(elem, styles) {\n        let st = [];\n        if (!styles[\"filled\"])\n            st.push(\"fill: none\");\n        if (!styles[\"stroked\"])\n            st.push(\"stroke: none\");\n        for (let k in styles) {\n            if (styles.hasOwnProperty(k) && k != \"filled\" && k != \"stroked\") {\n                let v = styles[k];\n                if (v) {\n                    if (!styles[\"filled\"] && k.indexOf('fill') === 0) {\n                        continue;\n                    }\n                    else if (!styles[\"stroked\"] && k.indexOf('stroke') === 0) {\n                        continue;\n                    }\n                    else {\n                        st.push(`${k}: ${v}`);\n                    }\n                }\n            }\n        }\n        return DOMSpace.setAttr(elem, { style: st.join(\";\") });\n    }\n    static point(ctx, pt, radius = 5, shape = \"square\") {\n        if (shape === \"circle\") {\n            return SVGForm.circle(ctx, pt, radius);\n        }\n        else {\n            return SVGForm.square(ctx, pt, radius);\n        }\n    }\n    point(pt, radius = 5, shape = \"square\") {\n        this.nextID();\n        SVGForm.point(this._ctx, pt, radius, shape);\n        return this;\n    }\n    static circle(ctx, pt, radius = 10) {\n        let elem = SVGSpace.svgElement(ctx.group, \"circle\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            cx: pt[0],\n            cy: pt[1],\n            r: radius,\n            'class': `pts-svgform pts-circle ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    circle(pts) {\n        this.nextID();\n        SVGForm.circle(this._ctx, pts[0], pts[1][0]);\n        return this;\n    }\n    static arc(ctx, pt, radius, startAngle, endAngle, cc) {\n        let elem = SVGSpace.svgElement(ctx.group, \"path\", SVGForm.getID(ctx));\n        const start = new Pt(pt).toAngle(startAngle, radius, true);\n        const end = new Pt(pt).toAngle(endAngle, radius, true);\n        const diff = Geom.boundAngle(endAngle) - Geom.boundAngle(startAngle);\n        let largeArc = (diff > Const.pi) ? true : false;\n        if (cc)\n            largeArc = !largeArc;\n        const sweep = (cc) ? \"0\" : \"1\";\n        const d = `M ${start[0]} ${start[1]} A ${radius} ${radius} 0 ${largeArc ? \"1\" : \"0\"} ${sweep} ${end[0]} ${end[1]}`;\n        DOMSpace.setAttr(elem, {\n            d: d,\n            'class': `pts-svgform pts-arc ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    arc(pt, radius, startAngle, endAngle, cc) {\n        this.nextID();\n        SVGForm.arc(this._ctx, pt, radius, startAngle, endAngle, cc);\n        return this;\n    }\n    static square(ctx, pt, halfsize) {\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            x: pt[0] - halfsize,\n            y: pt[1] - halfsize,\n            width: halfsize * 2,\n            height: halfsize * 2,\n            'class': `pts-svgform pts-square ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    square(pt, halfsize) {\n        this.nextID();\n        SVGForm.square(this._ctx, pt, halfsize);\n        return this;\n    }\n    static line(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        if (pts.length > 2)\n            return SVGForm._poly(ctx, pts, false);\n        let elem = SVGSpace.svgElement(ctx.group, \"line\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            x1: pts[0][0],\n            y1: pts[0][1],\n            x2: pts[1][0],\n            y2: pts[1][1],\n            'class': `pts-svgform pts-line ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    line(pts) {\n        this.nextID();\n        SVGForm.line(this._ctx, pts);\n        return this;\n    }\n    static _poly(ctx, pts, closePath = true) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, ((closePath) ? \"polygon\" : \"polyline\"), SVGForm.getID(ctx));\n        let points = pts.reduce((a, p) => a + `${p[0]},${p[1]} `, \"\");\n        DOMSpace.setAttr(elem, {\n            points: points,\n            'class': `pts-svgform pts-polygon ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    static polygon(ctx, pts) {\n        return SVGForm._poly(ctx, pts, true);\n    }\n    polygon(pts) {\n        this.nextID();\n        SVGForm.polygon(this._ctx, pts);\n        return this;\n    }\n    static rect(ctx, pts) {\n        if (!this._checkSize(pts))\n            return;\n        let elem = SVGSpace.svgElement(ctx.group, \"rect\", SVGForm.getID(ctx));\n        let bound = Group.fromArray(pts).boundingBox();\n        let size = Rectangle.size(bound);\n        DOMSpace.setAttr(elem, {\n            x: bound[0][0],\n            y: bound[0][1],\n            width: size[0],\n            height: size[1],\n            'class': `pts-svgform pts-rect ${ctx.currentClass}`,\n        });\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    rect(pts) {\n        this.nextID();\n        SVGForm.rect(this._ctx, pts);\n        return this;\n    }\n    static text(ctx, pt, txt) {\n        let elem = SVGSpace.svgElement(ctx.group, \"text\", SVGForm.getID(ctx));\n        DOMSpace.setAttr(elem, {\n            \"pointer-events\": \"none\",\n            x: pt[0],\n            y: pt[1],\n            dx: 0, dy: 0,\n            'class': `pts-svgform pts-text ${ctx.currentClass}`,\n        });\n        elem.textContent = txt;\n        SVGForm.style(elem, ctx.style);\n        return elem;\n    }\n    text(pt, txt) {\n        this.nextID();\n        SVGForm.text(this._ctx, pt, txt);\n        return this;\n    }\n    log(txt) {\n        this.fill(\"#000\").stroke(\"#fff\", 0.5).text([10, 14], txt);\n        return this;\n    }\n}\nSVGForm.groupID = 0;\nSVGForm.domID = 0;\n//# sourceMappingURL=Svg.js.map","import { Pt, Group, Bound } from \"./Pt\";\nimport { Polygon, Circle } from \"./Op\";\nexport class World {\n    constructor(bound, friction = 1, gravity = 0) {\n        this._lastTime = null;\n        this._gravity = new Pt();\n        this._friction = 1;\n        this._damping = 0.75;\n        this._particles = [];\n        this._bodies = [];\n        this._names = { p: {}, b: {} };\n        this._bound = Bound.fromGroup(bound);\n        this._friction = friction;\n        this._gravity = (typeof gravity === \"number\") ? new Pt(0, gravity) : new Pt(gravity);\n        return this;\n    }\n    get gravity() { return this._gravity; }\n    set gravity(g) { this._gravity = g; }\n    get friction() { return this._friction; }\n    set friction(f) { this._friction = f; }\n    get damping() { return this._damping; }\n    set damping(f) { this._damping = f; }\n    get bodyCount() { return this._bodies.length; }\n    get particleCount() { return this._particles.length; }\n    body(id) { return this._bodies[(typeof id === \"string\") ? this._names.b[id] : id]; }\n    particle(id) { return this._particles[(typeof id === \"string\") ? this._names.p[id] : id]; }\n    update(ms) {\n        let dt = ms / 1000;\n        this._updateParticles(dt);\n        this._updateBodies(dt);\n    }\n    drawParticles(fn) {\n        this._drawParticles = fn;\n    }\n    drawBodies(fn) {\n        this._drawBodies = fn;\n    }\n    add(p, name) {\n        if (p instanceof Body) {\n            this._bodies.push(p);\n            if (name)\n                this._names.b[name] = this._bodies.length - 1;\n        }\n        else {\n            this._particles.push(p);\n            if (name)\n                this._names.p[name] = this._particles.length - 1;\n        }\n        return this;\n    }\n    remove(which, index, count = 1) {\n        let param = (index < 0) ? [index * -1 - 1, count] : [index, count];\n        if (which == \"body\") {\n            this._bodies.splice(param[0], param[1]);\n        }\n        else {\n            this._particles.splice(param[0], param[1]);\n        }\n        return this;\n    }\n    static edgeConstraint(p1, p2, dist, stiff = 1, precise = false) {\n        const m1 = 1 / (p1.mass || 1);\n        const m2 = 1 / (p2.mass || 1);\n        const mm = m1 + m2;\n        let delta = p2.$subtract(p1);\n        let distSq = dist * dist;\n        let d = (precise) ? (dist / delta.magnitude() - 1) : (distSq / (delta.dot(delta) + distSq) - 0.5);\n        let f = delta.$multiply(d * stiff);\n        p1.subtract(f.$multiply(m1 / mm));\n        p2.add(f.$multiply(m2 / mm));\n        return p1;\n    }\n    static boundConstraint(p, rect, damping = 0.75) {\n        let bound = rect.boundingBox();\n        let np = p.$min(bound[1].subtract(p.radius)).$max(bound[0].add(p.radius));\n        if (np[0] === bound[0][0] || np[0] === bound[1][0]) {\n            let c = p.changed.$multiply(damping);\n            p.previous = np.$subtract(new Pt(-c[0], c[1]));\n        }\n        else if (np[1] === bound[0][1] || np[1] === bound[1][1]) {\n            let c = p.changed.$multiply(damping);\n            p.previous = np.$subtract(new Pt(c[0], -c[1]));\n        }\n        p.to(np);\n    }\n    integrate(p, dt, prevDt) {\n        p.addForce(this._gravity);\n        p.verlet(dt, this._friction, prevDt);\n        return p;\n    }\n    _updateParticles(dt) {\n        for (let i = 0, len = this._particles.length; i < len; i++) {\n            let p = this._particles[i];\n            this.integrate(p, dt, this._lastTime);\n            World.boundConstraint(p, this._bound, this._damping);\n            for (let k = i + 1; k < len; k++) {\n                if (i !== k) {\n                    let p2 = this._particles[k];\n                    p.collide(p2, this._damping);\n                }\n            }\n            if (this._drawParticles)\n                this._drawParticles(p, i);\n        }\n        this._lastTime = dt;\n    }\n    _updateBodies(dt) {\n        for (let i = 0, len = this._bodies.length; i < len; i++) {\n            let b = this._bodies[i];\n            for (let k = 0, klen = b.length; k < klen; k++) {\n                let bk = b[k];\n                World.boundConstraint(bk, this._bound, this._damping);\n                this.integrate(bk, dt, this._lastTime);\n            }\n            for (let k = i + 1; k < len; k++) {\n                b.processBody(this._bodies[k]);\n            }\n            for (let m = 0, mlen = this._particles.length; m < mlen; m++) {\n                b.processParticle(this._particles[m]);\n            }\n            b.processEdges();\n            if (this._drawBodies)\n                this._drawBodies(b, i);\n        }\n    }\n}\nexport class Particle extends Pt {\n    constructor(...args) {\n        super(...args);\n        this._mass = 1;\n        this._radius = 0;\n        this._force = new Pt();\n        this._prev = new Pt();\n        this._lock = false;\n        this._prev = this.clone();\n    }\n    get mass() { return this._mass; }\n    set mass(m) { this._mass = m; }\n    get radius() { return this._radius; }\n    set radius(f) { this._radius = f; }\n    get previous() { return this._prev; }\n    set previous(p) { this._prev = p; }\n    get force() { return this._force; }\n    set force(g) { this._force = g; }\n    get body() { return this._body; }\n    set body(b) { this._body = b; }\n    get lock() { return this._lock; }\n    set lock(b) {\n        this._lock = b;\n        this._lockPt = new Pt(this);\n    }\n    get changed() { return this.$subtract(this._prev); }\n    set position(p) {\n        this.previous.to(this);\n        if (this._lock)\n            this._lockPt = p;\n        this.to(p);\n    }\n    size(r) {\n        this._mass = r;\n        this._radius = r;\n        return this;\n    }\n    addForce(...args) {\n        this._force.add(...args);\n        return this._force;\n    }\n    verlet(dt, friction, lastDt) {\n        if (this._lock) {\n            this.to(this._lockPt);\n        }\n        else {\n            let lt = (lastDt) ? lastDt : dt;\n            let a = this._force.multiply(dt * (dt + lt) / 2);\n            let v = this.changed.multiply(friction * dt / lt).add(a);\n            this._prev = this.clone();\n            this.add(v);\n            this._force = new Pt();\n        }\n        return this;\n    }\n    hit(...args) {\n        this._prev.subtract(new Pt(...args).$divide(Math.sqrt(this._mass)));\n        return this;\n    }\n    collide(p2, damp = 1) {\n        let p1 = this;\n        let dp = p1.$subtract(p2);\n        let distSq = dp.magnitudeSq();\n        let dr = p1.radius + p2.radius;\n        if (distSq < dr * dr) {\n            let c1 = p1.changed;\n            let c2 = p2.changed;\n            let dist = Math.sqrt(distSq);\n            let d = dp.$multiply(((dist - dr) / dist) / 2);\n            let np1 = p1.$subtract(d);\n            let np2 = p2.$add(d);\n            p1.to(np1);\n            p2.to(np2);\n            let f1 = damp * dp.dot(c1) / distSq;\n            let f2 = damp * dp.dot(c2) / distSq;\n            let dm1 = p1.mass / (p1.mass + p2.mass);\n            let dm2 = p2.mass / (p1.mass + p2.mass);\n            c1.add(new Pt(f2 * dp[0] - f1 * dp[0], f2 * dp[1] - f1 * dp[1]).$multiply(dm2));\n            c2.add(new Pt(f1 * dp[0] - f2 * dp[0], f1 * dp[1] - f2 * dp[1]).$multiply(dm1));\n            p1.previous = p1.$subtract(c1);\n            p2.previous = p2.$subtract(c2);\n        }\n    }\n    toString() {\n        return `Particle: ${this[0]} ${this[1]} | previous ${this._prev[0]} ${this._prev[1]} | mass ${this._mass}`;\n    }\n}\nexport class Body extends Group {\n    constructor() {\n        super();\n        this._cs = [];\n        this._stiff = 1;\n        this._locks = {};\n        this._mass = 1;\n    }\n    static fromGroup(list, stiff = 1, autoLink = true, autoMass = true) {\n        let b = new Body().init(list);\n        if (autoLink)\n            b.linkAll(stiff);\n        if (autoMass)\n            b.autoMass();\n        return b;\n    }\n    init(list, stiff = 1) {\n        let c = new Pt();\n        for (let i = 0, len = list.length; i < len; i++) {\n            let p = new Particle(list[i]);\n            p.body = this;\n            c.add(list[i]);\n            this.push(p);\n        }\n        this._stiff = stiff;\n        return this;\n    }\n    get mass() { return this._mass; }\n    set mass(m) {\n        this._mass = m;\n        for (let i = 0, len = this.length; i < len; i++) {\n            this[i].mass = this._mass;\n        }\n    }\n    autoMass() {\n        this.mass = Math.sqrt(Polygon.area(this)) / 10;\n        return this;\n    }\n    link(index1, index2, stiff) {\n        if (index1 < 0 || index1 >= this.length)\n            throw new Error(\"index1 is not in the Group's indices\");\n        if (index2 < 0 || index2 >= this.length)\n            throw new Error(\"index1 is not in the Group's indices\");\n        let d = this[index1].$subtract(this[index2]).magnitude();\n        this._cs.push([index1, index2, d, stiff || this._stiff]);\n        return this;\n    }\n    linkAll(stiff) {\n        let half = this.length / 2;\n        for (let i = 0, len = this.length; i < len; i++) {\n            let n = (i >= len - 1) ? 0 : i + 1;\n            this.link(i, n, stiff);\n            if (len > 4) {\n                let nd = (Math.floor(half / 2)) + 1;\n                let n2 = (i >= len - nd) ? i % len : i + nd;\n                this.link(i, n2, stiff);\n            }\n            if (i <= half - 1) {\n                this.link(i, Math.min(this.length - 1, i + Math.floor(half)));\n            }\n        }\n    }\n    linksToLines() {\n        let gs = [];\n        for (let i = 0, len = this._cs.length; i < len; i++) {\n            let ln = this._cs[i];\n            gs.push(new Group(this[ln[0]], this[ln[1]]));\n        }\n        return gs;\n    }\n    processEdges() {\n        for (let i = 0, len = this._cs.length; i < len; i++) {\n            let [m, n, d, s] = this._cs[i];\n            World.edgeConstraint(this[m], this[n], d, s);\n        }\n    }\n    processBody(b) {\n        let b1 = this;\n        let b2 = b;\n        let hit = Polygon.hasIntersectPolygon(b1, b2);\n        if (hit) {\n            let cv = hit.normal.$multiply(hit.dist);\n            let t;\n            let eg = hit.edge;\n            if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n            }\n            else {\n                t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n            }\n            let lambda = 1 / (t * t + (1 - t) * (1 - t));\n            let m0 = hit.vertex.body.mass || 1;\n            let m1 = hit.edge[0].body.mass || 1;\n            let mr0 = m0 / (m0 + m1);\n            let mr1 = m1 / (m0 + m1);\n            eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n            eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n            hit.vertex.add(cv.$multiply(mr1));\n        }\n    }\n    processParticle(b) {\n        let b1 = this;\n        let b2 = b;\n        let hit = Polygon.hasIntersectCircle(b1, Circle.fromCenter(b, b.radius));\n        if (hit) {\n            let cv = hit.normal.$multiply(hit.dist);\n            let t;\n            let eg = hit.edge;\n            if (Math.abs(eg[0][0] - eg[1][0]) > Math.abs(eg[0][1] - eg[1][1])) {\n                t = (hit.vertex[0] - cv[0] - eg[0][0]) / (eg[1][0] - eg[0][0]);\n            }\n            else {\n                t = (hit.vertex[1] - cv[1] - eg[0][1]) / (eg[1][1] - eg[0][1]);\n            }\n            let lambda = 1 / (t * t + (1 - t) * (1 - t));\n            let m0 = hit.vertex.mass || b2.mass || 1;\n            let m1 = hit.edge[0].body.mass || 1;\n            let mr0 = m0 / (m0 + m1);\n            let mr1 = m1 / (m0 + m1);\n            eg[0].subtract(cv.$multiply(mr0 * (1 - t) * lambda / 2));\n            eg[1].subtract(cv.$multiply(mr0 * t * lambda / 2));\n            let c1 = b.changed.add(cv.$multiply(mr1));\n            b.previous = b.$subtract(c1);\n        }\n    }\n}\n//# sourceMappingURL=Physics.js.map","export * from \"./Canvas\";\nexport * from \"./Create\";\nexport * from \"./Form\";\nexport * from \"./LinearAlgebra\";\nexport * from \"./Num\";\nexport * from \"./Op\";\nexport * from \"./Pt\";\nexport * from \"./Space\";\nexport * from \"./Color\";\nexport * from \"./Util\";\nexport * from \"./Dom\";\nexport * from \"./Svg\";\nexport * from \"./Typography\";\nexport * from \"./Physics\";\n//# sourceMappingURL=_module.js.map"],"sourceRoot":""}