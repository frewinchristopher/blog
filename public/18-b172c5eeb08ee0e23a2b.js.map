{"version":3,"sources":["webpack:///./node_modules/debug/src/browser.js","webpack:///./node_modules/component-emitter/index.js","webpack:///./node_modules/engine.io-parser/lib/browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/parseqs/index.js","webpack:///./node_modules/component-inherit/index.js","webpack:///./node_modules/socket.io-parser/index.js","webpack:///./node_modules/engine.io-client/lib/xmlhttprequest.js","webpack:///./node_modules/engine.io-client/lib/transport.js","webpack:///./node_modules/parseuri/index.js","webpack:///./node_modules/socket.io-parser/is-buffer.js","webpack:///./node_modules/socket.io-client/lib/manager.js","webpack:///./node_modules/engine.io-client/lib/transports/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling.js","webpack:///./node_modules/has-binary2/index.js","webpack:///./node_modules/yeast/index.js","webpack:///./node_modules/indexof/index.js","webpack:///./node_modules/socket.io-client/lib/socket.js","webpack:///./node_modules/socket.io-client/lib/on.js","webpack:///./node_modules/component-bind/index.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_string-html.js","webpack:///./node_modules/socket.io-client/lib/index.js","webpack:///./node_modules/socket.io-client/lib/url.js","webpack:///./node_modules/debug/src/debug.js","webpack:///./node_modules/ms/index.js","webpack:///./node_modules/socket.io-parser/binary.js","webpack:///./node_modules/engine.io-client/lib/index.js","webpack:///./node_modules/engine.io-client/lib/socket.js","webpack:///./node_modules/has-cors/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-xhr.js","webpack:///./node_modules/engine.io-parser/lib/keys.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/arraybuffer.slice/index.js","webpack:///./node_modules/after/index.js","webpack:///./node_modules/engine.io-parser/lib/utf8.js","webpack:///./node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","webpack:///./node_modules/blob/index.js","webpack:///./node_modules/engine.io-client/lib/transports/polling-jsonp.js","webpack:///./node_modules/engine.io-client/lib/transports/websocket.js","webpack:///./node_modules/to-array/index.js","webpack:///./node_modules/backo2/index.js"],"names":["process","load","r","exports","storage","debug","e","Object","CLIENT_URL","SERVER_URL","NODE_ENV","PUBLIC_DIR","BUILD_STAGE","GATSBY_BUILD_STAGE","DEBUG","module","__webpack_require__","log","console","Function","prototype","apply","call","arguments","formatArgs","args","useColors","this","namespace","humanize","diff","c","color","splice","index","lastC","replace","match","save","namespaces","removeItem","window","type","navigator","userAgent","toLowerCase","document","documentElement","style","WebkitAppearance","firebug","exception","table","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","JSON","stringify","err","message","enable","Emitter","obj","key","mixin","on","addEventListener","event","fn","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","length","cb","callbacks","i","emit","slice","len","listeners","hasListeners","base64encoder","keys","hasBinary","sliceBuffer","after","utf8","ArrayBuffer","isAndroid","test","isPhantomJS","dontSendBlobs","protocol","packets","open","close","ping","pong","upgrade","noop","packetslist","data","Blob","map","ary","each","done","result","Array","next","eachWithIndex","el","error","msg","encodePacket","packet","supportsBinary","utf8encode","callback","undefined","buffer","encodeBase64Packet","contentArray","Uint8Array","resultBuffer","byteLength","encodeArrayBuffer","fr","FileReader","onload","readAsArrayBuffer","encodeBlobAsArrayBuffer","blob","encodeBlob","base64","encodeBase64Object","encoded","encode","String","strict","b64data","b64","split","readAsDataURL","fromCharCode","typed","basic","btoa","decodePacket","binaryType","utf8decode","charAt","decodeBase64Packet","substr","decode","tryDecode","Number","substring","rest","encodePayload","isBinary","encodePayloadAsBlob","encodePayloadAsArrayBuffer","doneCallback","setLengthHeader","results","join","decodePayload","decodePayloadAsBinary","n","l","chr","encodedPackets","totalLength","reduce","acc","p","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","size","lengthAry","bufferTail","buffers","tailArray","msgLength","total","isArray","arr","str","hasOwnProperty","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","a","b","constructor","binary","isBuf","Encoder","types","CONNECT","DISCONNECT","EVENT","ACK","ERROR","BINARY_EVENT","BINARY_ACK","Decoder","ERROR_PACKET","encodeAsString","attachments","nsp","id","payload","tryStringify","reconstructor","BinaryReconstructor","reconPack","removeBlobs","bloblessData","deconstruction","deconstructPacket","pack","unshift","encodeAsBinary","add","buf","Error","parse","tryParse","isPayloadValid","decodeString","takeBinaryData","destroy","finishedReconstruction","binData","reconstructPacket","global","hasCORS","opts","xdomain","xscheme","enablesXDR","XMLHttpRequest","XDomainRequest","concat","parser","Transport","path","hostname","port","secure","query","timestampParam","timestampRequests","readyState","agent","socket","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","forceNode","extraHeaders","localAddress","onError","desc","description","doOpen","doClose","onClose","send","write","onOpen","writable","onData","onPacket","re","parts","src","indexOf","m","exec","uri","source","host","authority","ipv6uri","withNativeBuffer","Buffer","isBuffer","withNativeArrayBuffer","isView","eio","Socket","bind","Backoff","has","Manager","nsps","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","min","max","jitter","timeout","connecting","lastPing","encoding","packetBuffer","_parser","encoder","decoder","autoConnect","emitAll","updateSocketIds","generateId","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","setMin","_randomizationFactor","setJitter","_reconnectionDelayMax","setMax","_timeout","maybeReconnectOnOpen","reconnecting","attempts","reconnect","connect","self","skipReconnect","openSub","onopen","errorSub","cleanup","timer","setTimeout","clearTimeout","onping","Date","onpong","ondata","ondecoded","onerror","onConnecting","options","processPacketQueue","shift","subsLength","disconnect","reset","onclose","reason","delay","duration","onreconnect","attempt","XHR","JSONP","websocket","polling","xd","xs","jsonp","location","isSSL","forceJSONP","parseqs","inherit","yeast","Polling","hasXHR2","responseType","forceBase64","name","poll","pause","onPause","doPoll","callbackfn","doWrite","schema","sid","withNativeBlob","withNativeFile","File","toJSON","prev","alphabet","seed","num","Math","floor","now","decoded","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","io","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","flags","subEvents","ev","compress","pop","onpacket","sameNamespace","rootNamespaceError","onconnect","onevent","onack","ondisconnect","ack","sent","emitBuffered","createHTML","url","$export","fails","defined","quot","string","tag","attribute","value","S","p1","NAME","O","P","F","lookup","cache","managers","parsed","forceNew","multiplex","parseuri","loc","href","createDebug","prevTime","enabled","curr","ms","coerce","format","formatter","val","hash","abs","selectColor","init","instances","stack","disable","names","skips","instance","s","h","d","y","plural","ceil","parseFloat","isNaN","long","round","fmtShort","packetData","_deconstructPacket","placeholder","_placeholder","newData","_reconstructPacket","pendingBlobs","_removeBlobs","curKey","containingObject","fileReader","transports","transportOptions","writeBuffer","prevBufferLen","policyPort","rememberUpgrade","onlyBinaryUpgrades","perMessageDeflate","threshold","freeGlobal","upgrades","pingInterval","pingTimeout","pingIntervalTimer","pingTimeoutTimer","priorWebsocketSuccess","createTransport","o","clone","EIO","transport","requestTimeout","protocols","setTransport","onDrain","probe","failed","onTransportOpen","upgradeLosesBinary","upgrading","flush","freezeTransport","onTransportClose","onupgrade","to","onHandshake","setPing","code","filterUpgrades","onHeartbeat","sendPacket","waitForUpgrade","cleanupAndClose","filteredUpgrades","empty","Request","method","async","create","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","xhr","setDisableHeaderCheck","setRequestHeader","withCredentials","hasXDR","onLoad","responseText","onreadystatechange","contentType","getResponseHeader","status","requestsCount","onSuccess","fromError","response","attachEvent","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","from","TypeError","array","byteOffset","fromArrayLike","fromArrayBuffer","isEncoding","actual","fromString","checked","copy","fromObject","assertSize","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","ret","out","toHex","bytes","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","leadSurrogate","toByteArray","trim","stringtrim","base64clean","dst","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","arraybuffer","abv","ii","count","err_cb","bail","proxy","byteCount","byteIndex","stringFromCharCode","ucs2decode","extra","counter","checkScalarValue","toUpperCase","createByte","encodeCodePoint","symbol","readContinuationByte","continuationByte","decodeSymbol","byte1","version","byteString","ucs2encode","chars","encoded1","encoded2","encoded3","encoded4","bufferLength","BlobBuilder","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","blobSupportsArrayBufferView","blobBuilderSupported","append","getBlob","mapArrayBufferViews","chunk","BlobBuilderConstructor","bb","part","BlobConstructor","JSONPPolling","rNewline","rEscapedNewline","___eio","script","parentNode","removeChild","form","iframe","createElement","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","area","iframeId","className","position","top","left","setAttribute","complete","initIframe","html","action","submit","NodeWebSocket","BrowserWebSocket","WebSocket","MozWebSocket","WS","usingBrowserWebSocket","check","headers","ws","supports","addEventListeners","onmessage","factor","rand","random","deviation"],"mappings":"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","file":"18-b172c5eeb08ee0e23a2b.js","sourcesContent":["/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new global[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof global.Buffer === 'function' && typeof global.Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof global.ArrayBuffer === 'function';\n\nvar isView = (function () {\n  if (withNativeArrayBuffer && typeof global.ArrayBuffer.isView === 'function') {\n    return global.ArrayBuffer.isView;\n  } else {\n    return function (obj) { return obj.buffer instanceof global.ArrayBuffer; };\n  }\n})();\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && global.Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof global.ArrayBuffer || isView(obj)));\n}\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof global.Blob === 'function' || toString.call(global.Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof global.File === 'function' || toString.call(global.File) === '[object FileConstructor]';\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (global.location && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global === 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0)\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (global.location) {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname !== global.location.hostname ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (global.document) {\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\nvar NodeWebSocket;\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  WebSocket = NodeWebSocket;\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocket = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws = this.usingBrowserWebSocket ? (protocols ? new WebSocket(uri, protocols) : new WebSocket(uri)) : new WebSocket(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n"],"sourceRoot":""}