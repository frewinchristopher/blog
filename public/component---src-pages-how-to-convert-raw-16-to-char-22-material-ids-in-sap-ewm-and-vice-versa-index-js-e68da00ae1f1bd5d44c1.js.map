{"version":3,"sources":["webpack:///./src/pages/how-to-convert-raw16-to-char22-material-ids-in-sap-ewm-and-vice-versa/index.js","webpack:///./src/utils/typography.js","webpack:///./src/components/CodeCopier.js"],"names":["React","require","Post","render","createElement","style","marginLeft","marginRight","maxWidth","rhythm","padding","className","href","_components_CodeCopier__WEBPACK_IMPORTED_MODULE_3__","sLanguage","sCode","react_emoji_render__WEBPACK_IMPORTED_MODULE_1___default","a","text","Component","frontmatter","title","date","draft","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography","oCustomStyle","margin","overflow","borderRadius","CodeCopier","_this","_React$Component","call","this","state","bCopied","notify","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2___default","toast","info","position","POSITION","BOTTOM_CENTER","react__WEBPACK_IMPORTED_MODULE_3___default","react_syntax_highlighter__WEBPACK_IMPORTED_MODULE_5___default","language","props","monokaiSublime","customStyle","react_copy_to_clipboard__WEBPACK_IMPORTED_MODULE_4__","onCopy","width","alt","marginBottom","src","process","react_toastify__WEBPACK_IMPORTED_MODULE_7__","autoClose","hideProgressBar","pauseOnHover","closeButton"],"mappings":"mMAMMA,EAAQC,EAAQ,GAiBhBC,4FACJC,kBACE,OACEH,EAAAI,cAAA,WACEJ,EAAAI,cAAA,OACEC,MAAO,CACLC,WAAY,OACZC,YAAa,OACbC,SAAUC,YAAO,IACjBC,QAAYD,YAAO,KAAZ,IAAoBA,YAAO,OAGpCT,EAAAI,cAAA,qFACAJ,EAAAI,cAAA,KAAGO,UAAU,eAAb,sBACAX,EAAAI,cAAA,2LAAkLJ,EAAAI,cAAA,qBAAlL,8GAA+SJ,EAAAI,cAAA,uBAA/S,oDAAoXJ,EAAAI,cAAA,wCAApX,aAAmaJ,EAAAI,cAAA,kCAAna,6BAA4dJ,EAAAI,cAAA,iCAA5d,aAAogBJ,EAAAI,cAAA,qBAApgB,SAA4hBJ,EAAAI,cAAA,8BAA5hB,8BAAklBJ,EAAAI,cAAA,sBAAllB,uFAAyrBJ,EAAAI,cAAA,4BAAzrB,KAEAJ,EAAAI,cAAA,gFAAuEJ,EAAAI,cAAA,KAAGQ,KAAK,wBAAR,wBAAvE,uCAAkKZ,EAAAI,cAAA,sBAAlK,8HAEAJ,EAAAI,cAACS,EAAA,EAAD,CAAYC,UAAU,OAAOC,MAjCpB,iUAmCTf,EAAAI,cAAA,+KAEAJ,EAAAI,cAACS,EAAA,EAAD,CAAYC,UAAU,OAAOC,MA5BpB,oIA8BTf,EAAAI,cAAA,2BAEAJ,EAAAI,cAAA,oJAA2IJ,EAAAI,cAAA,kBAA3I,uHAEAJ,EAAAI,cAAA,oBAAWJ,EAAAI,cAACY,EAAAC,EAAD,CAAOC,KAAK,YAEvBlB,EAAAI,cAAA,wBA9BSJ,EAAMmB,WAsCZC,EAAc,CACzBC,MAAO,0EACPC,KAAM,aACNC,OAAO,GAGMrB,8CCnEfsB,EAAAC,EAAAC,EAAA,sBAAAjB,IAAAe,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAAAQ,EAAAR,EAAAM,EAAAC,GAGAE,IAAcC,oBAAsB,iBAAO,CACzCC,2BAA4B,CAC1BC,UAAW,iBAIRH,IAAcI,YAErB,IAAMC,EAAa,IAAIC,IAAWN,KAOnBK,IACF7B,EAAS6B,EAAW7B,OACpBkB,EAAQW,EAAWX,iJCX1Ba,UAAe,CACnB9B,QAAW,MACX+B,OAAU,SACVC,SAAY,OACZC,aAAgB,UAGZC,cACJ,SAAAA,IAAc,IAAAC,EAAA,OACZA,EAAAC,EAAAC,KAAAC,aACKC,MAAQ,CACXC,SAAS,GAEXL,EAAKM,OAASN,EAAKM,OAAOC,KAAZC,QAAAR,KALFA,sCAOdM,kBACEG,QAAMC,KAAK,4BAA6B,CACtC5C,UAAW,eACX6C,SAAUF,QAAMG,SAASC,mBAK7BvD,kBACE,OACEwD,EAAA1C,EAAAb,cAAA,OAAKC,MAAO,CAACmD,SAAY,aACvBG,EAAA1C,EAAAb,cAACwD,EAAA3C,EAAD,CAAmB4C,SAAUb,KAAKc,MAAMhD,UAAWT,MAAO0D,iBAAgBC,YAAaxB,GACtFQ,KAAKc,MAAM/C,OAEZ4C,EAAA1C,EAAAb,cAAC6D,EAAA,gBAAD,CAAiB/C,KAAM8B,KAAKc,MAAM/C,MAChCmD,OAAQlB,KAAKG,QACbQ,EAAA1C,EAAAb,cAAA,UAAQO,UAAU,cAChBgD,EAAA1C,EAAAb,cAAA,YAAMuD,EAAA1C,EAAAb,cAAA,OAAK+D,MAAM,OAAOC,IAAI,YAAY/D,MAAO,CAACgE,aAAc,OAAQC,IAAQC,iEAGlFZ,EAAA1C,EAAAb,cAACoE,EAAA,eAAD,CAAgBC,UAAW,IAAMC,iBAAiB,EAAMC,cAAc,EAAOC,aAAa,SA5BzE5E,IAAMmB,WAkChByB","file":"component---src-pages-how-to-convert-raw-16-to-char-22-material-ids-in-sap-ewm-and-vice-versa-index-js-e68da00ae1f1bd5d44c1.js","sourcesContent":["import Emoji from 'react-emoji-render';\nimport { rhythm } from '../../utils/typography'\n\n// custom components\nimport CodeCopier from '../../components/CodeCopier';\n\nconst React = require('react');\n\nconst sCodeSnippet1 = `DATA: lv_matid_16 TYPE /SCWM/DE_MATID, \" used in EWM monitor fields like \nlv_matid_22 TYPE /SAPAPO/MATID. \" used in database table key field as in database table /SAPAPO/MARM\n\nCALL FUNCTION '/SCMB/MDL_GUID_CONVERT'\n  EXPORTING\n    IV_GUID16       = lv_matid_16\n  IMPORTING\n    EV_GUID22       = lv_matid_22.`;\n    \nconst sCodeSnippet2 = `CALL FUNCTION '/SCMB/MDL_GUID_CONVERT'\nEXPORTING\n  IV_GUID22       = lv_matid_22\nIMPORTING\n  EV_GUID16       = lv_matid_16.`;\n\nclass Post extends React.Component {\n  render () {\n    return (\n      <div>\n        <div\n          style={{\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            maxWidth: rhythm(24),\n            padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n          }}\n        >\n          <h1>How to Convert RAW16 to CHAR22 Material IDs in SAP EWM (and vice-versa)</h1>\n          <p className=\"jsPostsDate\">09 September, 2018</p>\n          <p>So, in SAP EWM, there are a few formats that material IDs, MATID are stored (similar to material numbers, MATNR, in ERP systems). Some of the two most popular formats are the <code>RAW16</code> format, as is used many EWM monitor functions usually, in the export structure that is often named simply <code>et_data</code>, for example in the EWM monitor function module <code>/SCWM/HUITM_OVERVIEW_MON</code>, of type <code>/scwm/tt_huitm_mon</code>, in which it's line type <code>/SCWM/S_HUITM_MON</code> uses the <code>RAW16</code> type <code>/SCWM/DE_MATID</code>. Then there is the larger <code>CHAR22</code> format, which is used as the type for the key field of MATID in the database table <code>/SAPAPO/MARM</code>.</p>\n\n          <p>I'll admit, this is nearly a copy of the post by John Kristensen at <a href=\"https://sap.sd/matid\">https://sap.sd/matid</a>, and I give him 99% of the credit, <em>however,</em> for your benefit, I've provided **complete copy-paste-able code examples** so you can see exactly how the function works:</p>\n          \n          <CodeCopier sLanguage='abap' sCode={sCodeSnippet1}/>\n\n          <p>...and, the nice thing about this function is that it can do the conversion the other way around (note the change in the name of the input and output parameters):</p>\n\n          <CodeCopier sLanguage='abap' sCode={sCodeSnippet2}/>\n\n          <p>And that's it!</p>\n\n          <p>I know in starting this blog I originally stated I would be adding a lot more about SAPUI5 and EWM and other neat ERP programs. While I <em>have</em> written some posts on ERP-sided programs, I've yet to touch SAPUI5 or EWM. I promise I'll get to it at some point!</p>\n\n          <p>Cheers! <Emoji text=\":beer:\"/></p>\n\n          <p>Chris</p>\n        </div>\n      </div>\n    )\n  }\n}\n\n// front matter, javascript style\nexport const frontmatter = {\n  title: \"How to Convert RAW16 to CHAR22 Material IDs in SAP EWM (and vice-versa)\",\n  date: \"2018-09-09\",\n  draft: false\n}\n\nexport default Post;\n\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: 'none',\n  },\n})\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale","import React from 'react'\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\nimport { monokaiSublime } from 'react-syntax-highlighter/styles/hljs';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// style so it matches the CSS styles for gatsby prism plugin (oCustomStyle is applied to the wrapping <pre> tag of each code peice)\nconst oCustomStyle = {\n  'padding': '1em',\n  'margin': '.5em 0',\n  'overflow': 'auto',\n  'borderRadius': '0.3em'\n}\n\nclass CodeCopier extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      bCopied: false\n    };\n    this.notify = this.notify.bind(this);\n  }\n  notify() {\n    toast.info(\"Code copied to clipboard!\", {\n      className: \"custom-toast\",\n      position: toast.POSITION.BOTTOM_CENTER\n    });\n    \n    \n  }\n  render () {  \n    return (\n      <div style={{'position': 'relative'}}>\n        <SyntaxHighlighter language={this.props.sLanguage} style={monokaiSublime} customStyle={oCustomStyle}>\n        {this.props.sCode}\n        </SyntaxHighlighter>    \n        <CopyToClipboard text={this.props.sCode}\n          onCopy={this.notify}>\n          <button className=\"copyButton\">\n            <span><img width=\"25px\" alt=\"Copy icon\" style={{marginBottom: '0px'}} src={`${process.env.CDN_URL}/copy.svg`}/></span>\n          </button>\n        </CopyToClipboard>\n        <ToastContainer autoClose={2000} hideProgressBar={true} pauseOnHover={false} closeButton={false}/>\n      </div>\n    );\n  }\n}\n\nexport default CodeCopier;"],"sourceRoot":""}