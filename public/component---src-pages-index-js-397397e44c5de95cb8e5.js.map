{"version":3,"sources":["webpack:///./src/components/switcher.js","webpack:///./src/pages/index.js","webpack:///./node_modules/react-body-classname/index.js"],"names":["Switcher","state","activeModeText","handleInputChange","bind","event","target","checked","document","body","classList","remove","add","this","setState","render","className","type","onChange","React","Component","BlogIndex","data","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery","withSideEffect","PropTypes","splitClassName","split","BodyClassName","children","Children","only","displayName","cache","propTypes","string","isRequired","module","exports","propsList","filter","value","index","self","indexOf","join","stringClassNames","currentClassNames","newClassNames","concat","trim"],"mappings":"2IAEqBA,E,oBACnB,aAAe,IAAD,SACZ,sBACKC,MAAQ,CACXC,eAAgB,QAElB,EAAKC,kBAAoB,EAAKA,kBAAkBC,K,yHAAvB,KALb,E,kHAOdD,kBAAA,SAAkBE,GACZA,EAAMC,OAAOC,SACfC,SAASC,KAAKC,UAAUC,OAAO,aAC/BH,SAASC,KAAKC,UAAUE,IAAI,cAC5BC,KAAKC,SAAS,CAAEZ,eAAgB,YAEhCM,SAASC,KAAKC,UAAUC,OAAO,cAC/BH,SAASC,KAAKC,UAAUE,IAAI,aAC5BC,KAAKC,SAAS,CAAEZ,eAAgB,W,EAIpCa,OAAA,WAAU,IACAb,EAAmBW,KAAKZ,MAAxBC,eACR,OACE,yBAAKc,UAAU,oBACb,2BAAOA,UAAU,UACf,2BAAOC,KAAK,WAAWC,SAAUL,KAAKV,oBACtC,0BAAMa,UAAU,kBAElB,0BAAMA,UAAU,eAAc,2BAAId,EAAJ,mB,GA5BAiB,IAAMC,W,mHCStCC,E,gLACJN,OAAA,WAAU,IACAO,EAAST,KAAKU,MAAdD,KACFE,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUlB,KAAKU,MAAMQ,SAAUJ,MAAOH,GAC5C,kBAAC,IAAD,CAAeR,UAAU,cACzB,kBAAC,IAAD,CAAKW,MAAM,uCACX,kBAAC,EAAD,MACA,kBAAC,IAAD,MACCC,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIT,EAAKE,OAAOC,MACjDT,IAGL,+BAAQM,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,kB,GA/BzC5B,IAAMC,WA6CjB4B,GAFE3B,YAEO,e,kCCtDtB,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,EAAQ,QAER,IAAIF,EAAQ,EAAQ,QAEhB8B,EAAiB,EAAQ,QAEzBC,EAAY,EAAQ,QAExB,SAASC,EAAenC,GACtB,OAAOA,EAAUoC,MAAM,OAoBzB,SAASC,EAAc9B,GACrB,OAAIA,EAAM+B,SACDnC,EAAMoC,SAASC,KAAKjC,EAAM+B,UAE1B,KAIXD,EAAcI,YAAc,gBAC5BJ,EAAcK,MAAQ,GACtBL,EAAcM,UAAY,CACxB3C,UAAWkC,EAAUU,OAAOC,YAE9BC,EAAOC,QAAUd,GA9BjB,SAA4Be,GAC1B,OAAOA,EAAUhC,KAAI,SAAUT,GAC7B,OAAOA,EAAMP,aACZiD,QAAO,SAAUC,EAAOC,EAAOC,GAChC,OAAOA,EAAKC,QAAQH,KAAWC,KAC9BG,KAAK,QAGV,SAAmCC,GACjC,IAAIC,EAAoBrB,EAAe3C,SAASC,KAAKO,WAAWiD,QAAO,SAAUjD,GAC/E,OAAmD,IAA5CqC,EAAcK,MAAMW,QAAQrD,MAEjCyD,EAAgBtB,EAAeoB,GACnClB,EAAcK,MAAQe,EACtBjE,SAASC,KAAKO,UAAYwD,EAAkBE,OAAOD,GAAeH,KAAK,KAAKK,SAgB7D1B,CAA8DI","file":"component---src-pages-index-js-397397e44c5de95cb8e5.js","sourcesContent":["import React from \"react\"\n\nexport default class Switcher extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      activeModeText: \"Dark\"\n    }\n    this.handleInputChange = this.handleInputChange.bind(this)\n  }\n  handleInputChange(event) {\n    if (event.target.checked) {\n      document.body.classList.remove(\"dark-mode\")\n      document.body.classList.add(\"light-mode\")\n      this.setState({ activeModeText: \"Light\" });\n    } else {\n      document.body.classList.remove(\"light-mode\")\n      document.body.classList.add(\"dark-mode\")\n      this.setState({ activeModeText: \"Dark\" });\n    }\n  }\n\n  render() {\n    const { activeModeText } = this.state;\n    return (\n      <div className=\"switch-container\">\n        <label className=\"switch\">\n          <input type=\"checkbox\" onChange={this.handleInputChange} />\n          <span className=\"slider round\" />\n        </label>\n        <span className=\"switch-text\"><b>{activeModeText} mode active</b></span>\n      </div>\n    )\n  }\n}\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Switcher from \"../components/switcher\"\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport BodyClassName from 'react-body-classname';\n\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <BodyClassName className=\"dark-mode\" />\n        <SEO title=\"Chris' Full Stack Blog - All posts\" />\n        <Switcher/>\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nvar React = require('react');\n\nvar withSideEffect = require('react-side-effect');\n\nvar PropTypes = require('prop-types');\n\nfunction splitClassName(className) {\n  return className.split(/\\s+/);\n}\n\nfunction reducePropsToState(propsList) {\n  return propsList.map(function (props) {\n    return props.className;\n  }).filter(function (value, index, self) {\n    return self.indexOf(value) === index;\n  }).join(' ');\n}\n\nfunction handleStateChangeOnClient(stringClassNames) {\n  var currentClassNames = splitClassName(document.body.className).filter(function (className) {\n    return BodyClassName.cache.indexOf(className) === -1;\n  });\n  var newClassNames = splitClassName(stringClassNames);\n  BodyClassName.cache = newClassNames;\n  document.body.className = currentClassNames.concat(newClassNames).join(' ').trim();\n}\n\nfunction BodyClassName(props) {\n  if (props.children) {\n    return React.Children.only(props.children);\n  } else {\n    return null;\n  }\n}\n\nBodyClassName.displayName = 'BodyClassName';\nBodyClassName.cache = [];\nBodyClassName.propTypes = {\n  className: PropTypes.string.isRequired\n};\nmodule.exports = withSideEffect(reducePropsToState, handleStateChangeOnClient)(BodyClassName);"],"sourceRoot":""}