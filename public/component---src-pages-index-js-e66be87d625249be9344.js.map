{"version":3,"sources":["webpack:///./src/components/fluid.js","webpack:///./src/pages/index.js"],"names":["Fluid","componentDidMount","script","document","createElement","src","id","async","onload","fluidLoaded","body","appendChild","componentWillUnmount","querySelector","remove","console","log","render","className","React","Component","BlogIndex","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","location","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"+KA0BeA,E,wLAtBbC,kBAAA,WAAqB,IAAD,OACZC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAAM,6BACbH,EAAOI,GAAK,YACZJ,EAAOK,OAAQ,EACfL,EAAOM,OAAS,kBAAM,EAAKC,eAC3BN,SAASO,KAAKC,YAAYT,I,EAG5BU,qBAAA,WACET,SAASU,cAAc,cAAcC,U,EAGvCL,YAAA,WACEM,QAAQC,IAAI,kB,EAGdC,OAAA,WACE,OAAO,4BAAQC,UAAU,kB,GApBTC,IAAMC,W,0DCOpBC,E,gLACJJ,OAAA,WAAU,IACAK,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUJ,MAAOH,GAC5C,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNN,EAAQM,EAAKC,YAAYP,OAASM,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,aAAcC,YAAO,OAGvB,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIT,EAAKE,OAAOC,MACjDT,IAGL,+BAAQM,EAAKC,YAAYS,OAE3B,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,kB,GA9BzC7B,IAAMC,WA4CjB6B,GAFE5B,YAEO","file":"component---src-pages-index-js-e66be87d625249be9344.js","sourcesContent":["import React from \"react\";\n\nclass Fluid extends React.Component {\n\n  componentDidMount() {\n    const script = document.createElement(\"script\");\n    script.src = \"../../static/fluid-init.js\";\n    script.id = \"fluid-src\"; // give the script tag an ID\n    script.async = true;\n    script.onload = () => this.fluidLoaded();\n    document.body.appendChild(script);\n  }\n\n  componentWillUnmount() {\n    document.querySelector(\"#fluid-src\").remove();\n  }\n\n  fluidLoaded() {\n    console.log(\"Fluid Started\");\n  }\n\n  render() {\n    return <canvas className=\"fluid-canvas\"></canvas>;\n  }\n}\n\nexport default Fluid;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Fluid from \"../components/fluid\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <Fluid/>\n        <SEO title=\"All posts\" />\n        <Bio />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <article key={node.fields.slug}>\n              <header>\n                <h3\n                  style={{\n                    marginBottom: rhythm(1 / 4),\n                  }}\n                >\n                  <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                />\n              </section>\n            </article>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}