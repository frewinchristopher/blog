{"version":3,"sources":["webpack:///./src/pages/sec-filings/index.js","webpack:///./src/utils/typography.js"],"names":["SECFilings","_this","_React$Component","call","this","state","aListItems","render","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","componentDidMount","that","axios","get","then","response","aItems","console","log","data","forEach","oItem","iIndex","push","length","setState","catch","error","React","Component","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","googleFonts","typography","Typography"],"mappings":"+LAKMA,cACF,SAAAA,IAAc,IAAAC,EAAA,OACZA,EAAAC,EAAAC,KAAAC,aACKC,MAAQ,CACXC,WAAY,IAHFL,sCAMdM,kBACE,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAQG,MAAM,gBACdJ,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,KACEG,MAAKC,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHC,QAAS,QACTC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MALvB,sJAUAX,EAAAC,EAAAC,cAAA,UACGN,KAAKC,MAAMC,gBAKpBe,6BACE,IAAIC,EAAOlB,KACXmB,IAAMC,IAAI,wCACPC,KAAK,SAAUC,GACd,IAAIC,EAAS,GACbC,QAAQC,IAAIH,GACZA,EAASI,KAAKC,QAAQ,SAACC,EAAOC,GAC5BN,EAAOO,KAAK1B,EAAAC,EAAAC,cAAA,oBACRuB,IAAWP,EAASI,KAAKK,QAC3Bb,EAAKc,SAAS,CAAC9B,WAAYqB,QAIhCU,MAAM,SAAUC,GACfhB,EAAKc,SAAS,CAAC9B,WAAY,CAACE,EAAAC,EAAAC,cAAA,+BAC5BkB,QAAQC,IAAIS,SA3CGC,IAAMC,WAgDhBxC,8CCrDfyC,EAAAC,EAAAC,EAAA,sBAAAxB,IAAAsB,EAAAC,EAAAC,EAAA,sBAAA3B,IAAA,IAAA4B,EAAAH,EAAA,KAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAGAE,IAAcC,oBAAsB,iBAAO,CACzCC,2BAA4B,CAC1BC,UAAW,iBAIRH,IAAcI,YAErB,IAAMC,EAAa,IAAIC,IAAWN,KAOnBK,IACFnC,EAASmC,EAAWnC,OACpBH,EAAQsC,EAAWtC","file":"component---src-pages-sec-filings-index-js-f89d03384bc701214420.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport axios from 'axios'\nimport { rhythm, scale } from '../../utils/typography'\n\nclass SECFilings extends React.Component {    \n    constructor() {\n      super();\n      this.state = {\n        aListItems: []\n      };\n    }\n    render() {\n      return (\n        <div>\n          <Helmet title=\"SEC Filings\" />\n          <h1>SEC Filings</h1>\n          <p\n            style={{\n              ...scale(-1 / 5),\n              display: 'block',\n              marginBottom: rhythm(1),\n              marginTop: rhythm(-1),\n            }}\n          >\n            My Raspberry Pi is currently running and saving a list of various SEC filings from companies across the S&P500. Here's the list it's built so far:\n          </p>\n          <ul>\n            {this.state.aListItems}\n          </ul>\n        </div>\n      );\n    }\n    componentDidMount() {\n      let that = this;\n      axios.get('https://chrisfrew.in/sec-filings-api')\n        .then(function (response) {\n          let aItems = [];\n          console.log(response);\n          response.data.forEach((oItem, iIndex) => {\n            aItems.push(<li>oItem</li>);\n            if (iIndex === response.data.length) {\n              that.setState({aListItems: aItems});\n            }\n          })\n        })\n        .catch(function (error) {\n          that.setState({aListItems: [<li>Coming soon :)</li>]});\n          console.log(error);\n        });\n    }\n}\n\nexport default SECFilings","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: 'none',\n  },\n})\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== 'production') {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale"],"sourceRoot":""}