{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/error-and-failure-free-connecting-zapier-and-postgresql/","result":{"data":{"site":{"siteMetadata":{"title":"Chris' Full Stack Blog"}},"markdownRemark":{"id":"9df104e4-a30a-5d99-9bd8-c80ad83110f2","excerpt":"A Five-Step Tutorial as an Antidote to Incorrect Documentation Or my angry sub-subtitle: ‚ÄòYet again, an issue with documentation‚Ä¶‚Äô This post is mirrored on my‚Ä¶","html":"<h3>A Five-Step Tutorial as an Antidote to Incorrect Documentation</h3>\n<p><em>Or my angry sub-subtitle: ‚ÄòYet again, an issue with documentation‚Ä¶‚Äô</em></p>\n<p><a href=\"https://medium.com/@frewin.christopher/properly-connecting-zapier-and-postgresql-998c998db4d9\"><em>This post is mirrored on my Medium account.</em></a></p>\n<h2>Google Sheets + PostgreSQL ‚Äî Nice!</h2>\n<p>I‚Äôm working on an app that currently needs a lot of database maintenance as we are in the data collection and cleaning phase. I had heard about Zapier many times, and even had an account for the longest time, but never had used it. So, when I heard that they have a ‚ÄòZap‚Äô to connect Google Sheets to PostgreSQL, creating and editing rows and writing them to the database, I figured I would give it a try.</p>\n<p>However, I was quickly led astray by incomplete and simple wrong Zapier documentation and Stack Overflow answers.</p>\n<p>In the end, the correct configuration is five simple steps. I hope these steps can spare you from the pain I experienced, because there aren‚Äôt many things that frustrate me more than poor documentation, which just wastes everyone else‚Äôs time.</p>\n<p>***As of April 2020, those were the steps I took to get a working connection, with the newest version of PostgreSQL at the time, 12.2. I assume these steps are basic enough that they are backwards-compatible to the oldest currently supported PostgreSQL version, which is 9.5. (Supported until <a href=\"https://www.postgresql.org/support/versioning/\">February 11, 2021</a>)</p>\n<h2>1. Edit Your postgresql.conf File to Listen on All Addresses</h2>\n<p>On normal Linux machines, the <code class=\"language-text\">postgresql.conf</code> file should be located at the following location:</p>\n<p><code class=\"language-text\">/etc/postgresql/12/main/postgresql.conf</code></p>\n<p>or, for example, if you have an older version like 9.5:</p>\n<p><code class=\"language-text\">/etc/postgresql/9.5/main/postgresql.conf</code></p>\n<p>You can also find this file path from inside a PostgreSQL command line with:</p>\n<p><code class=\"language-text\">SHOW config_file;</code></p>\n<p>In the <code class=\"language-text\">postgresql.conf</code> file, uncomment the <code class=\"language-text\">listen_addresses</code> line (the first setting in that file) such that it reads:</p>\n<p><code class=\"language-text\">listen_addresses = &#39;*&#39;</code></p>\n<p>This ensures PostgreSQL is listening for connections on all ports.</p>\n<p>***Note that you have a tool like Uncomplicated Firewall, aka command-line command <code class=\"language-text\">ufw</code> (or any firewall for that matter), you will need to allow connections on port 5432. (With <code class=\"language-text\">ufw</code> for example, that is <code class=\"language-text\">ufw allow 5432</code> ). You can check if your port is open with this handy <a href=\"https://www.yougetsignal.com/tools/open-ports/\">Open Port Check Tool</a>.</p>\n<h2>2. Create Your PostgreSQL User and Grant Permissions</h2>\n<p>Considering this user would be used by Zapier, I named the PostgreSQL user <code class=\"language-text\">zapier</code> as well. Makes sense right? Note that you do NOT need to create a Linux user for this connection to work. (In the background, Zapier is using <code class=\"language-text\">psycopg2</code> ‚Äî a <a href=\"https://www.psycopg.org/docs/\">PostgreSQL database adapter for Python</a>, which connects directly via a PostgreSQL URI, skipping the SSH layer entirely)</p>\n<p>Note that the specified PostgreSQL command in the <a href=\"https://zapier.com/apps/mysql/help\">Zapier documentation</a> (which you need to venture all the way to the MySQL portion anyway just to find) does <em>not</em> work! The <code class=\"language-text\">&#39;user&#39;@&#39;localhost&#39;</code> (or whatever host or IP) syntax does not work in PostgreSQL! The correct commands are as follows:</p>\n<p>Login in as the <code class=\"language-text\">postgres</code> user (or whatever your root PostgreSQL user is):</p>\n<p><code class=\"language-text\">psql -U postgres</code></p>\n<p>If you haven‚Äôt created the user yet, do so now:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">USER</span> zapier <span class=\"token keyword\">WITH</span> PASSWORD <span class=\"token string\">'somesuperstrongpasswordhere'</span></code></pre></div>\n<p>Connect to the database your target table is in:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">\\<span class=\"token keyword\">connect</span> your_database_here</code></pre></div>\n<p>Grant the proper permissions to the Zapier user you just created ‚Äî in my case, user <code class=\"language-text\">zapier</code> :</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">GRANT</span> <span class=\"token keyword\">INSERT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">UPDATE</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ON</span> your_table_here <span class=\"token keyword\">TO</span> zapier<span class=\"token punctuation\">;</span></code></pre></div>\n<h2>3. Add a Custom Entry to Your pg_hba.conf File</h2>\n<p>This is where the documentation fails. Zapier simply states:</p>\n<blockquote>\n<p>For PostgreSQL, you‚Äôll need to configure the server to accept logins from remote IPs (in <code class=\"language-text\">pg_hba.conf</code>), and create a user for Zapier to use.</p>\n</blockquote>\n<p>Ok, great thanks guys. üòû No help at all.</p>\n<p>They of course don‚Äôt provide an example. Well, I will!</p>\n<p>First off, your <code class=\"language-text\">pg_hba.conf</code> file should be located in the same folder, for version 12 again, as an example:</p>\n<p><code class=\"language-text\">/etc/postgresql/12/main/pg_hba.conf</code></p>\n<p>or for 9.5 as an example:</p>\n<p><code class=\"language-text\">/etc/postgresql/9.5/main/pg_hba.conf</code></p>\n<p>again, you can always get this file directly from a PostgreSQL command-line connection by issuing:</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SHOW</span> hba_file<span class=\"token punctuation\">;</span></code></pre></div>\n<p>As we see in the <code class=\"language-text\">pg_hba.conf</code>file, the order of the elements is written in a commented line as such:</p>\n<p><code class=\"language-text\"># TYPE DATABASE USER ADDRESS METHOD</code></p>\n<p>Zapier at least tells us the IP at which it will always access the database from, <code class=\"language-text\">54.86.9.50</code></p>\n<p>If you know the name of the table you want Zapier to access, we can compose the line we need in <code class=\"language-text\">pg_hba.conf</code>. However, there is a critical step here that you need to include. We want <em>exactly</em> this IP and this IP only, so we must at a <code class=\"language-text\">/32</code> to the end of the IP. See the <a href=\"https://www.postgresql.org/docs/9.1/auth-pg-hba-conf.html\">PostgreSQL pg_hba.conf documentation</a> under <code class=\"language-text\">address</code> for more details. So our <code class=\"language-text\">pg_hba.conf</code> line appears as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Access for zapier user  \nhost     your_table_here     zapier     54.86.9.50/32    md5</code></pre></div>\n<p>Note here that <code class=\"language-text\">host</code> is literally the word <code class=\"language-text\">host</code>. You only need to modify the table name <code class=\"language-text\">your_table_here</code> , and <code class=\"language-text\">zapier</code> if you‚Äôve defined a different user for Zapier to use.</p>\n<h2>4. Restart your PostgreSQL instance</h2>\n<p>Issue</p>\n<p><code class=\"language-text\">sudo service postgresql restart</code></p>\n<p>for the changes we made in <code class=\"language-text\">postgresql.conf</code> and <code class=\"language-text\">pg_hba.conf</code> to take effect.</p>\n<h2>5. Fill Out Information in Zapier PostgreSQL Form</h2>\n<p>Once arriving at the form that Zapier prompts you with for your PostgreSQL information, you should be able to enter all the server information and user credentials, and the connection should work right away! No cryptic error messages.</p>\n<p>üç∫ Cheers all,</p>\n<p>-Chris</p>","frontmatter":{"title":"Error and Failure Free - Connecting Zapier and PostgreSQL","date":"April 14, 2020","description":"A Five-Step Tutorial as an Antidote to Incorrect Documentation"}}},"pageContext":{"slug":"/blog/error-and-failure-free-connecting-zapier-and-postgresql/","previous":{"fields":{"slug":"/draftposts/one-major-challenge-with-the-internet-and-society/"},"frontmatter":{"title":"The Internet, Subscriptions, Big Winners, the Networking Effect, Makers & Creators, and Society Today"}},"next":null}}}