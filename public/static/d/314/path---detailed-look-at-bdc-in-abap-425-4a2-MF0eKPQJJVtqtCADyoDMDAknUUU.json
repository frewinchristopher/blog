{"data":{"site":{"siteMetadata":{"title":"Chris Frewin's Full Stack, Web Development, ABAP, SAPUI5, Blockchain, Machine Learning, & Natural Language Processing Blog.","author":"Chris Frewin"}},"markdownRemark":{"id":"ae843523-4791-5586-87af-de247e8f693b","excerpt":"And some common gotchyas, too","html":"<h2>And some common gotchyas, too</h2>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">*                          S A P M S S Y 0</span>\n<span class=\"token comment\">*                  system routines for ABAP processing</span>\n<span class=\"token comment\">*</span>\n<span class=\"token comment\">*                  (must be declared as FUNCTION-POOL)</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">function-pool</span> sapmssy0  <span class=\"token keyword\">message-id</span> <span class=\"token number\">02</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">include</span> &lt;%_list><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">include</span> &lt;sys000><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">include</span> tskhincl<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">tables</span><span class=\"token punctuation\">:</span> tfdir<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span>  orders          <span class=\"token keyword\">type</span> <span class=\"token keyword\">standard</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">of</span> %_commit_orders<span class=\"token punctuation\">,</span>\n                                                  <span class=\"token eol-comment comment\">\"ON COMMIT orders</span>\n       rb_orders       <span class=\"token keyword\">type</span> <span class=\"token keyword\">standard</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">of</span> %_commit_orders<span class=\"token punctuation\">,</span>\n                                                  <span class=\"token eol-comment comment\">\"ON ROLLBACK orders</span>\n       imode_orders    <span class=\"token keyword\">type</span> <span class=\"token keyword\">standard</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">of</span> %_commit_orders<span class=\"token punctuation\">,</span>\n                                                  <span class=\"token eol-comment comment\">\"POC in CALL DIALOG</span>\n       imode_rb_orders <span class=\"token keyword\">type</span> <span class=\"token keyword\">standard</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">of</span> %_commit_orders<span class=\"token punctuation\">.</span>\n<span class=\"token eol-comment comment\">\"POR in CALL DIALOG</span>\n<span class=\"token comment\">* for RTM test concerning POC during OS event handling</span>\n<span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> os_orders        <span class=\"token keyword\">type</span> <span class=\"token keyword\">hashed</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">of</span> %_commit_orders\n                            <span class=\"token keyword\">with</span> <span class=\"token keyword\">unique</span> <span class=\"token keyword\">key</span> prog rout<span class=\"token punctuation\">.</span>      <span class=\"token eol-comment comment\">\"#EC NEEDED</span>\n<span class=\"token eol-comment comment\">\"OS ON COMMIT orders</span>\n<span class=\"token comment\">* end RTM</span>\n\n<span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span>  %_vbkey <span class=\"token keyword\">type</span> %_vbkey <span class=\"token keyword\">value</span> <span class=\"token string\">'%_'</span><span class=\"token punctuation\">,</span>                     <span class=\"token eol-comment comment\">\"#EC *</span>\n       %%vbkey <span class=\"token keyword\">type</span> %_vbkey <span class=\"token keyword\">value</span> <span class=\"token string\">'%%'</span><span class=\"token punctuation\">,</span>\n       %_vb_calls <span class=\"token keyword\">type</span> %_vb_calls <span class=\"token keyword\">occurs</span> <span class=\"token number\">50</span> <span class=\"token keyword\">with</span> <span class=\"token keyword\">header</span> <span class=\"token keyword\">line</span><span class=\"token punctuation\">.</span>\"#EC <span class=\"token operator\">*</span>\n<span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span>  i_level <span class=\"token keyword\">type</span> <span class=\"token keyword\">i</span> <span class=\"token keyword\">value</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">data</span> <span class=\"token punctuation\">:</span> arfc_pending <span class=\"token keyword\">type</span> <span class=\"token keyword\">c</span><span class=\"token punctuation\">,</span>\n       trfc_nowait_for_update <span class=\"token keyword\">type</span> <span class=\"token keyword\">c</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* bgRFC: something todo at COMMIT / ROLLBACK</span>\n<span class=\"token keyword\">data</span> <span class=\"token punctuation\">:</span> bgrfc_eot_action <span class=\"token keyword\">type</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* LDQ: something todo at COMMIT / ROLLBACK</span>\n<span class=\"token keyword\">data</span> <span class=\"token punctuation\">:</span> ldq_writer_eot_action <span class=\"token keyword\">type</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">data</span> <span class=\"token punctuation\">:</span> ldq_reader_eot_action <span class=\"token keyword\">type</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* O R D E R _ F O R M _ L E V E L</span>\n<span class=\"token comment\">* order given form to be run when work is committed</span>\n<span class=\"token comment\">*</span>\n<span class=\"token comment\">* Input : program name, form name, execution level</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_order_form_level <span class=\"token keyword\">using</span> prog rout u_level<span class=\"token punctuation\">.</span>            <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> allow_nested_poc<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">c</span><span class=\"token punctuation\">,</span>\n        caller <span class=\"token keyword\">type</span> sy<span class=\"token token-operator punctuation\">-</span>repid<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> mpar1<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mpar2<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mpar3<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mpar4<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> imode_orders_wa <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">,</span>\n        orders_wa <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">call</span> <span class=\"token string\">'ThVBCall'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'OPCODE'</span> <span class=\"token keyword\">field</span> get_vb_key  <span class=\"token eol-comment comment\">\"#EC CI_CCALL</span>\n                    <span class=\"token keyword\">id</span> <span class=\"token string\">'VBKEY'</span>  <span class=\"token keyword\">field</span> %_vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">import</span> imode_orders imode_rb_orders <span class=\"token keyword\">from</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">read</span> <span class=\"token keyword\">table</span> imode_orders\n      <span class=\"token keyword\">into</span> imode_orders_wa\n      <span class=\"token keyword\">with</span> <span class=\"token keyword\">key</span> prog <span class=\"token operator\">=</span> prog\n               rout <span class=\"token operator\">=</span> rout\n      <span class=\"token keyword\">binary</span> <span class=\"token keyword\">search</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">describe</span> <span class=\"token keyword\">table</span> imode_orders <span class=\"token keyword\">lines</span> i_level<span class=\"token punctuation\">.</span>\n      imode_orders_wa<span class=\"token token-operator punctuation\">-</span>prog <span class=\"token operator\">=</span> prog<span class=\"token punctuation\">.</span>\n      imode_orders_wa<span class=\"token token-operator punctuation\">-</span>rout <span class=\"token operator\">=</span> rout<span class=\"token punctuation\">.</span>\n      imode_orders_wa<span class=\"token token-operator punctuation\">-</span>i_level <span class=\"token operator\">=</span> i_level<span class=\"token punctuation\">.</span>\n      imode_orders_wa<span class=\"token token-operator punctuation\">-</span>u_level <span class=\"token operator\">=</span> u_level<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">insert</span> imode_orders_wa <span class=\"token keyword\">into</span> imode_orders <span class=\"token keyword\">index</span> sy<span class=\"token token-operator punctuation\">-</span>tabix<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">export</span> imode_orders imode_rb_orders <span class=\"token keyword\">to</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'P'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*     already in PERFORM ON COMMIT</span>\n      <span class=\"token keyword\">call</span> <span class=\"token string\">'C_SAPGPARAM'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'NAME'</span>  <span class=\"token keyword\">field</span> <span class=\"token string\">'abap/allow_nested_poc'</span>  <span class=\"token eol-comment comment\">\"#EC CI_CCALL</span>\n                         <span class=\"token keyword\">id</span> <span class=\"token string\">'VALUE'</span> <span class=\"token keyword\">field</span> allow_nested_poc<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">if</span> allow_nested_poc <span class=\"token operator\">&lt;></span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*       nested PERFORM ON COMMIT not allowed</span>\n        <span class=\"token keyword\">call</span> <span class=\"token string\">'AB_GET_CALLER'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'PROGRAM'</span> <span class=\"token keyword\">field</span> caller<span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"#EC CI_CCALL</span>\n        <span class=\"token keyword\">if</span> caller <span class=\"token operator\">&lt;></span> <span class=\"token string\">'SAPMSSY0'</span><span class=\"token punctuation\">.</span>\n          mpar1 <span class=\"token operator\">=</span> <span class=\"token string\">'NESTED_PERFORM_ON_COMMIT'</span><span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">concatenate</span> <span class=\"token string\">'caller:'</span>  caller <span class=\"token keyword\">into</span> mpar2 <span class=\"token keyword\">separated</span> <span class=\"token keyword\">by</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">concatenate</span> <span class=\"token string\">'program:'</span> prog   <span class=\"token keyword\">into</span> mpar3 <span class=\"token keyword\">separated</span> <span class=\"token keyword\">by</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">concatenate</span> <span class=\"token string\">'form:'</span>    rout   <span class=\"token keyword\">into</span> mpar4 <span class=\"token keyword\">separated</span> <span class=\"token keyword\">by</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*         switch back kernel flag: just for sure.</span>\n          <span class=\"token keyword\">call</span> <span class=\"token string\">'SET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"#EC CI_CCALL</span>\n<span class=\"token comment\">*         issue short dump</span>\n          <span class=\"token keyword\">message</span> x081<span class=\"token punctuation\">(</span><span class=\"token number\">00</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> mpar1 mpar2 mpar3 mpar4<span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">read</span> <span class=\"token keyword\">table</span> orders\n      <span class=\"token keyword\">into</span> orders_wa\n      <span class=\"token keyword\">with</span> <span class=\"token keyword\">key</span> prog <span class=\"token operator\">=</span> prog\n               rout <span class=\"token operator\">=</span> rout\n      <span class=\"token keyword\">binary</span> <span class=\"token keyword\">search</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">describe</span> <span class=\"token keyword\">table</span> orders <span class=\"token keyword\">lines</span> i_level<span class=\"token punctuation\">.</span>\n      orders_wa<span class=\"token token-operator punctuation\">-</span>prog <span class=\"token operator\">=</span> prog<span class=\"token punctuation\">.</span>\n      orders_wa<span class=\"token token-operator punctuation\">-</span>rout <span class=\"token operator\">=</span> rout<span class=\"token punctuation\">.</span>\n      orders_wa<span class=\"token token-operator punctuation\">-</span>i_level <span class=\"token operator\">=</span> i_level<span class=\"token punctuation\">.</span>\n      orders_wa<span class=\"token token-operator punctuation\">-</span>u_level <span class=\"token operator\">=</span> u_level<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">insert</span> orders_wa <span class=\"token keyword\">into</span> orders <span class=\"token keyword\">index</span> sy<span class=\"token token-operator punctuation\">-</span>tabix<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*   for RTM test concerning POC during OS event handling</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>\n      orders_wa<span class=\"token token-operator punctuation\">-</span>prog <span class=\"token operator\">=</span> prog<span class=\"token punctuation\">.</span>\n      orders_wa<span class=\"token token-operator punctuation\">-</span>rout <span class=\"token operator\">=</span> rout<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">insert</span> orders_wa <span class=\"token keyword\">into</span> <span class=\"token keyword\">table</span> os_orders<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*   end RTM</span>\n\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_order_form_level</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* O R D E R _ F O R M _ F O R _ R O L L B A C K</span>\n<span class=\"token comment\">* order given form to be run when work is rolled back</span>\n<span class=\"token comment\">* Input : program name, form name</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_order_form_for_rollback <span class=\"token keyword\">using</span> prog rout<span class=\"token punctuation\">.</span>             <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> mpar1<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mpar2<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mpar3<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mpar4<span class=\"token punctuation\">(</span><span class=\"token number\">80</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        caller <span class=\"token keyword\">type</span> sy<span class=\"token token-operator punctuation\">-</span>repid<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> rb_orders_wa       <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">,</span>\n        imode_rb_orders_wa <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">call</span> <span class=\"token string\">'ThVBCall'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'OPCODE'</span> <span class=\"token keyword\">field</span> get_vb_key  <span class=\"token eol-comment comment\">\"#EC CI_CCALL</span>\n                    <span class=\"token keyword\">id</span> <span class=\"token string\">'VBKEY'</span>  <span class=\"token keyword\">field</span> %_vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">import</span> imode_orders imode_rb_orders <span class=\"token keyword\">from</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">read</span> <span class=\"token keyword\">table</span> imode_rb_orders\n      <span class=\"token keyword\">into</span> imode_rb_orders_wa\n      <span class=\"token keyword\">with</span> <span class=\"token keyword\">key</span> prog <span class=\"token operator\">=</span> prog\n           rout <span class=\"token operator\">=</span> rout\n      <span class=\"token keyword\">binary</span> <span class=\"token keyword\">search</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">describe</span> <span class=\"token keyword\">table</span> imode_rb_orders <span class=\"token keyword\">lines</span> i_level<span class=\"token punctuation\">.</span>\n      imode_rb_orders_wa<span class=\"token token-operator punctuation\">-</span>prog <span class=\"token operator\">=</span> prog<span class=\"token punctuation\">.</span>\n      imode_rb_orders_wa<span class=\"token token-operator punctuation\">-</span>rout <span class=\"token operator\">=</span> rout<span class=\"token punctuation\">.</span>\n      imode_rb_orders_wa<span class=\"token token-operator punctuation\">-</span>i_level <span class=\"token operator\">=</span> i_level<span class=\"token punctuation\">.</span>\n      imode_rb_orders_wa<span class=\"token token-operator punctuation\">-</span>u_level <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">insert</span> imode_rb_orders_wa <span class=\"token keyword\">into</span> imode_rb_orders <span class=\"token keyword\">index</span> sy<span class=\"token token-operator punctuation\">-</span>tabix<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">export</span> imode_orders imode_rb_orders <span class=\"token keyword\">to</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'P'</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">call</span> <span class=\"token string\">'AB_GET_CALLER'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'PROGRAM'</span> <span class=\"token keyword\">field</span> caller<span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"#EC CI_CCALL</span>\n      mpar1 <span class=\"token operator\">=</span> <span class=\"token string\">'NESTED_PERFORM_ON_ROLLBACK'</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">concatenate</span> <span class=\"token string\">'caller:'</span>  caller <span class=\"token keyword\">into</span> mpar2 <span class=\"token keyword\">separated</span> <span class=\"token keyword\">by</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">concatenate</span> <span class=\"token string\">'program:'</span> prog   <span class=\"token keyword\">into</span> mpar3 <span class=\"token keyword\">separated</span> <span class=\"token keyword\">by</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">concatenate</span> <span class=\"token string\">'form:'</span>    rout   <span class=\"token keyword\">into</span> mpar4 <span class=\"token keyword\">separated</span> <span class=\"token keyword\">by</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*     switch back kernel flag: just for sure.</span>\n      <span class=\"token keyword\">call</span> <span class=\"token string\">'SET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*     already in PERFORM ON ROLLBACK issue short dump</span>\n      <span class=\"token keyword\">message</span> x081<span class=\"token punctuation\">(</span><span class=\"token number\">00</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> mpar1 mpar2 mpar3 mpar4<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">read</span> <span class=\"token keyword\">table</span> rb_orders <span class=\"token keyword\">into</span> rb_orders_wa\n      <span class=\"token keyword\">with</span> <span class=\"token keyword\">key</span> prog <span class=\"token operator\">=</span> prog\n               rout <span class=\"token operator\">=</span> rout\n      <span class=\"token keyword\">binary</span> <span class=\"token keyword\">search</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">describe</span> <span class=\"token keyword\">table</span> rb_orders <span class=\"token keyword\">lines</span> i_level<span class=\"token punctuation\">.</span>\n      rb_orders_wa<span class=\"token token-operator punctuation\">-</span>prog <span class=\"token operator\">=</span> prog<span class=\"token punctuation\">.</span>\n      rb_orders_wa<span class=\"token token-operator punctuation\">-</span>rout <span class=\"token operator\">=</span> rout<span class=\"token punctuation\">.</span>\n      rb_orders_wa<span class=\"token token-operator punctuation\">-</span>i_level <span class=\"token operator\">=</span> i_level<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">insert</span> rb_orders_wa <span class=\"token keyword\">into</span> rb_orders <span class=\"token keyword\">index</span> sy<span class=\"token token-operator punctuation\">-</span>tabix<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_order_form_for_rollback</span>\n\n\n<span class=\"token comment\">*---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*  %_COMMIT_PREPARE                                                   *</span>\n<span class=\"token comment\">*  Set date and time for aRFC</span>\n<span class=\"token comment\">*---------------------------------------------------------------------*</span>\n<span class=\"token keyword\">form</span> %_commit_prepare <span class=\"token keyword\">using</span> <span class=\"token keyword\">date</span> <span class=\"token keyword\">time</span><span class=\"token punctuation\">.</span>                      <span class=\"token eol-comment comment\">\"#EC *</span>\n\n  %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time <span class=\"token operator\">=</span> <span class=\"token keyword\">time</span><span class=\"token punctuation\">.</span>\n  %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date <span class=\"token operator\">=</span> <span class=\"token keyword\">date</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_commit_prepare</span>\n\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM %_BEFORE_COMMIT</span>\n<span class=\"token comment\">* called from RSYN commit.rs1</span>\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_before_commit<span class=\"token punctuation\">.</span>                                       <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_oncom <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> txend <span class=\"token keyword\">type</span> <span class=\"token keyword\">c</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* forbid COMMIT if already in ON ROLLBACK handling</span>\n<span class=\"token comment\">* allow COMMIT during ON COMMIT for backward compatibilty</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'GET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> txend<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">if</span> txend <span class=\"token operator\">=</span> <span class=\"token string\">'R'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">message</span> x085<span class=\"token punctuation\">(</span><span class=\"token number\">00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* COMMIT during CALL DIALOG/SUBMIT, POC, Update task</span>\n<span class=\"token comment\">* or End Transaction event?</span>\n  <span class=\"token keyword\">check</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'N'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'P'</span> <span class=\"token keyword\">and</span>\n        sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'E'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* change sy-oncom to avoid recursion</span>\n  l_oncom <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>                      <span class=\"token eol-comment comment\">\"E = Event Handling</span>\n\n<span class=\"token comment\">* no escape out off this form other than ENDFORM</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">set</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* Hook for Process Information Infrastructure</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'SPI_AGENT_COMMIT'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* Raise event 'Commit Requested' for Object Manager</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> cl_os_transaction_end_notifier<span class=\"token token-operator punctuation\">=></span>raise_commit_requested<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* restore sy-oncom</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> l_oncom<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* reset marker on call stack.</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">reset</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_before_commit</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* C O M M I T</span>\n<span class=\"token comment\">* commit work</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_commit<span class=\"token punctuation\">.</span>                                              <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> %_state<span class=\"token punctuation\">,</span> %_direct_utask_active<span class=\"token punctuation\">.</span>                     <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_lines   <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>tabix<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> %_enqkey  <span class=\"token keyword\">type</span> eqeusrvb<span class=\"token punctuation\">.</span>                            <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> %_enqdone <span class=\"token keyword\">type</span> <span class=\"token keyword\">c</span><span class=\"token punctuation\">.</span>                                   <span class=\"token eol-comment comment\">\"#EC *</span>\n\n<span class=\"token comment\">* status processing of set update task local</span>\n<span class=\"token comment\">* value 'E': local update is active. Export tRFC/qRFC to memory!</span>\n<span class=\"token comment\">* value 'S': local update is active. Map the dialog tRFC/qRFC to called update trfc/qRFC.</span>\n<span class=\"token comment\">*            Import tRFC/qRFC form memory! Save it to the Database.</span>\n<span class=\"token comment\">* value 'X': local update is active. Execute the tRFC/qRFC within the Dialog workprocess.</span>\n\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_local_vb_status <span class=\"token keyword\">type</span> <span class=\"token keyword\">c</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* COMMIT during POC, Update task or End Transaction event?</span>\n  <span class=\"token keyword\">check</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'P'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'E'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* no escape out off this form other than ENDFORM</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">set</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'ThVBCall'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'OPCODE'</span>  <span class=\"token keyword\">field</span> get_vb_key\n                  <span class=\"token keyword\">id</span> <span class=\"token string\">'VBKEY'</span>   <span class=\"token keyword\">field</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*   Not in CALL DIALOG</span>\n    %_vbkey<span class=\"token token-operator punctuation\">-</span>vbkey <span class=\"token operator\">=</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">perform</span> %_process_p_o_c<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*   Check if local update task is switched on?</span>\n    <span class=\"token keyword\">call</span> <span class=\"token string\">'GET_SWITCH_UTASK'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'MODE'</span>  <span class=\"token keyword\">field</span> <span class=\"token string\">'S'</span>\n                            <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> %_state<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> %_state <span class=\"token keyword\">eq</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">free</span> %_vb_calls<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">import</span> %_vb_calls <span class=\"token keyword\">from</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %%vbkey<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">describe</span> <span class=\"token keyword\">table</span> %_vb_calls <span class=\"token keyword\">lines</span> l_lines<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">if</span> l_lines <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*       Local update task is active,</span>\n<span class=\"token comment\">*       export the called tRFC/qRFCs from dialog to memory within arfc_end_transaction.</span>\n        l_local_vb_status <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*     Within sapmssy4 (commit work) we have to import and save all dia tRFC/qRFC</span>\n<span class=\"token comment\">*     in arfc_end_transaction</span>\n      <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>cprog <span class=\"token operator\">=</span> <span class=\"token string\">'SAPMSSY4'</span><span class=\"token punctuation\">.</span>\n        l_local_vb_status <span class=\"token operator\">=</span> <span class=\"token string\">'S'</span><span class=\"token punctuation\">.</span>\n        arfc_pending <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n\n    <span class=\"token keyword\">if</span> arfc_pending <span class=\"token operator\">&lt;></span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n      arfc_pending <span class=\"token operator\">=</span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">if</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>dontsend <span class=\"token operator\">&lt;></span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n        %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date  <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>datum<span class=\"token punctuation\">.</span>\n        %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time  <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>uzeit <span class=\"token operator\">+</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n      <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'ARFC_END_TRANSACTION'</span>\n        <span class=\"token keyword\">exporting</span>\n          <span class=\"token keyword\">mode</span>              <span class=\"token operator\">=</span> <span class=\"token string\">'COMMIT'</span>\n          starttime         <span class=\"token operator\">=</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time\n          startdate         <span class=\"token operator\">=</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date\n          utask_local_state <span class=\"token operator\">=</span> l_local_vb_status\n          vbkey             <span class=\"token operator\">=</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey\n          bgrfc_active      <span class=\"token operator\">=</span> bgrfc_eot_action<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*      clear %_sys000-arfc-send_time.</span>\n<span class=\"token comment\">*      clear %_sys000-arfc-send_date.</span>\n<span class=\"token comment\">*      clear %_sys000-arfc-dontsend.</span>\n\n<span class=\"token comment\">***************</span>\n<span class=\"token comment\">*   bgRFC</span>\n<span class=\"token comment\">***************</span>\n<span class=\"token comment\">*     Update task in Asynchronous mode!</span>\n<span class=\"token comment\">*     Wenn arfc_pending &lt;> SPACE dann wurde bereits durch classic qRFC der arfc_end_vb</span>\n<span class=\"token comment\">*     getriggert, falls lokale Verbuchung nicht aktiv ist.</span>\n<span class=\"token comment\">*     N = asynch. update task switched off: direct updates</span>\n      <span class=\"token keyword\">if</span> bgrfc_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"something happened with bgRFC</span>\n<span class=\"token comment\">*       In current LUW classic t/qRFC and bgRFC was called</span>\n\n        <span class=\"token keyword\">if</span> trfc_nowait_for_update <span class=\"token operator\">&lt;></span> <span class=\"token keyword\">space</span> <span class=\"token keyword\">OR</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">initial</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"ARFC_END_VB wurde nicht im tRFC/qRFC gerufen</span>\n          <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time<span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date<span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>dontsend<span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_BGRFC_DB_HELPER'</span><span class=\"token punctuation\">)</span>=>on_commit\n            <span class=\"token keyword\">exporting</span>\n              arfc_end_vb_already_called <span class=\"token operator\">=</span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" ARFC_END_VB wurde bereits im tRFC/qrfc gerufen.</span>\n          <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time<span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date<span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>dontsend<span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_BGRFC_DB_HELPER'</span><span class=\"token punctuation\">)</span>=>on_commit\n            <span class=\"token keyword\">exporting</span>\n              arfc_end_vb_already_called <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time<span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date<span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>dontsend<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*      clear %_sys000-arfc-send_time.</span>\n<span class=\"token comment\">*      clear %_sys000-arfc-send_date.</span>\n<span class=\"token comment\">*      clear %_sys000-arfc-dontsend.</span>\n\n<span class=\"token comment\">*   Wenn kein classic qRFC getriggert und keine lokale Verbuchung, dann</span>\n<span class=\"token comment\">*   muss ARFC_END_VB von bgRFC getriggert werden.</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">if</span> bgrfc_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"something happened with bgRFC</span>\n<span class=\"token comment\">*       In current LUW only bgRFC was called</span>\n        <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_BGRFC_DB_HELPER'</span><span class=\"token punctuation\">)</span>=>on_commit\n          <span class=\"token keyword\">exporting</span>\n            arfc_end_vb_already_called <span class=\"token operator\">=</span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">***************************</span>\n<span class=\"token comment\">*   Local Data Queue (LDQ)</span>\n<span class=\"token comment\">***************************</span>\n    <span class=\"token keyword\">if</span> ldq_writer_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"something happened with LDQ-Writer</span>\n      <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_LDQ_UNIT_WRITER'</span><span class=\"token punctuation\">)</span>=>on_commit<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">if</span> ldq_reader_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"something happened with LDQ-Reader</span>\n      <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_LDQ_UNIT_READER'</span><span class=\"token punctuation\">)</span>=>on_commit<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">if</span> %_state <span class=\"token keyword\">eq</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*     N = asynch. update task switched off: direct updates</span>\n<span class=\"token comment\">*     free %_vb_calls.</span>\n<span class=\"token comment\">*     import %_vb_calls from memory id %%vbkey.</span>\n<span class=\"token comment\">*     describe table %_vb_calls lines l_lines.</span>\n      <span class=\"token keyword\">if</span> l_lines <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*       process direct updates (with the same vbkey)</span>\n        <span class=\"token keyword\">call</span> <span class=\"token string\">'ThVBCall'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'OPCODE'</span>  <span class=\"token keyword\">field</span> get_vb_key\n                        <span class=\"token keyword\">id</span> <span class=\"token string\">'VBKEY'</span>   <span class=\"token keyword\">field</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey\n                        <span class=\"token keyword\">id</span> <span class=\"token string\">'ENQKEY'</span>  <span class=\"token keyword\">field</span> %_enqkey\n                        <span class=\"token keyword\">id</span> <span class=\"token string\">'ENQDONE'</span> <span class=\"token keyword\">field</span> %_enqdone<span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">submit</span> sapmssy4 <span class=\"token keyword\">with</span> vbkey_id <span class=\"token operator\">=</span> %%vbkey\n                        <span class=\"token keyword\">with</span> enqkey   <span class=\"token operator\">=</span> %_enqkey\n                        <span class=\"token keyword\">with</span> enqdone  <span class=\"token operator\">=</span> %_enqdone <span class=\"token keyword\">and</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*       Start new LUW, release locks that were acquired during dialog part</span>\n        <span class=\"token keyword\">call</span> <span class=\"token string\">'ThVBCall'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'OPCODE'</span>       <span class=\"token keyword\">field</span> reset_vb_enq_key\n                        <span class=\"token keyword\">id</span> <span class=\"token string\">'SYNC_DEQUEUE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* Call Dialog wurde gerufen; gerufene tRFC/qRFC Verarbeitung wie gehabt.</span>\n  <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'N'</span> <span class=\"token keyword\">or</span> l_local_vb_status <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> l_local_vb_status <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*     Lokale Verbuchung ist aktiv Ausführung im Dialog und UPD.</span>\n      l_local_vb_status <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>     <span class=\"token eol-comment comment\">\"Umsetzen auf Ausführung der trfc/qRFC im Dialog.</span>\n      arfc_pending      <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> arfc_pending <span class=\"token operator\">&lt;></span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n      arfc_pending <span class=\"token operator\">=</span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">if</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>dontsend <span class=\"token operator\">&lt;></span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n        %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date  <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>datum<span class=\"token punctuation\">.</span>\n        %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time  <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>uzeit <span class=\"token operator\">+</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n      <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'ARFC_END_TRANSACTION'</span>\n        <span class=\"token keyword\">exporting</span>\n          <span class=\"token keyword\">mode</span>              <span class=\"token operator\">=</span> <span class=\"token string\">'COMMIT'</span>\n          starttime         <span class=\"token operator\">=</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time\n          startdate         <span class=\"token operator\">=</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date\n          utask_local_state <span class=\"token operator\">=</span> l_local_vb_status\n          vbkey             <span class=\"token operator\">=</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey\n          bgrfc_active      <span class=\"token operator\">=</span> bgrfc_eot_action<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_time<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>send_date<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">clear</span> %_sys000<span class=\"token token-operator punctuation\">-</span>arfc<span class=\"token token-operator punctuation\">-</span>dontsend<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>binpt <span class=\"token keyword\">eq</span> <span class=\"token string\">'X'</span> <span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'BDC_END_TRANSACTION'</span><span class=\"token punctuation\">.</span>       <span class=\"token eol-comment comment\">\"ende einer trans in BI</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* clear memory containing registrations for PERFORM ON ROLLBACK.</span>\n<span class=\"token comment\">* delete imode_orders and imode_rb_orders only if not in CALL DIALOG</span>\n  <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">free</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> rb_orders<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* reset marker on call stack.</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">reset</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_commit</span>\n\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM %_AFTER_COMMIT</span>\n<span class=\"token comment\">* called from RSYN commit.rs1</span>\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_after_commit<span class=\"token punctuation\">.</span>                                        <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> %_direct_utask_active<span class=\"token punctuation\">,</span> %_task_state<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">x</span><span class=\"token punctuation\">.</span>      <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">i</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">,</span> j <span class=\"token keyword\">type</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">,</span> x4<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">x</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_update_task <span class=\"token keyword\">type</span> boolean <span class=\"token keyword\">value</span> <span class=\"token string\">'-'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_oncom <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_subrc <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>subrc<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* COMMIT during CALL DIALOG/SUBMIT, POC, Update task</span>\n<span class=\"token comment\">* or End Transaction event?</span>\n  <span class=\"token keyword\">check</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'N'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'P'</span> <span class=\"token keyword\">and</span>\n        sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'E'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* change sy-oncom to avoid recursion</span>\n  l_oncom <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>                      <span class=\"token eol-comment comment\">\"E = Event Handling</span>\n  l_subrc <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>subrc<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* no escape out off this form other than ENDFORM</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">set</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*</span>\n<span class=\"token comment\">* bgRFC</span>\n<span class=\"token comment\">*</span>\n  <span class=\"token keyword\">if</span> bgrfc_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\"something happened with bgRFC</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_BGRFC_DB_HELPER'</span><span class=\"token punctuation\">)</span>=>AFTER_COMMIT<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*</span>\n<span class=\"token comment\">* Local DATA Queue (LDQ)</span>\n<span class=\"token comment\">*</span>\n  <span class=\"token keyword\">if</span> ldq_writer_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\"something happened with LDW-Writer</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_LDQ_UNIT_WRITER'</span><span class=\"token punctuation\">)</span>=>after_commit<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">if</span> ldq_reader_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\"something happened with LDW-Reader</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_LDQ_UNIT_READER'</span><span class=\"token punctuation\">)</span>=>after_commit<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* Raise event 'Commit Finished' for Object Manager</span>\n<span class=\"token comment\">* for synchronous update task this is after all database changes.</span>\n<span class=\"token comment\">* for asynchronous update task this is after triggering the updates.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> cl_os_transaction_end_notifier<span class=\"token token-operator punctuation\">=></span>raise_commit_finished<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* COMMIT in (classic) update task?</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'TH_USER_INFO'</span>\n    <span class=\"token keyword\">importing</span>\n      task_state <span class=\"token operator\">=</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">.</span>\n  %_task_state <span class=\"token operator\">=</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">.</span>\n  j <span class=\"token operator\">=</span> task_vb<span class=\"token punctuation\">.</span> x4 <span class=\"token operator\">=</span> j<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> %_task_state <span class=\"token keyword\">z</span> x4<span class=\"token punctuation\">.</span>            <span class=\"token eol-comment comment\">\"update task must not be active</span>\n    l_update_task <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">if</span> l_update_task <span class=\"token operator\">&lt;></span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*   COMMIT in local update task?</span>\n    <span class=\"token keyword\">call</span> <span class=\"token string\">'GET_SWITCH_UTASK'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'MODE'</span>  <span class=\"token keyword\">field</span> <span class=\"token string\">'A'</span>          <span class=\"token eol-comment comment\">\"A = active?</span>\n                            <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> %_direct_utask_active<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> %_direct_utask_active <span class=\"token operator\">=</span> <span class=\"token string\">'Y'</span> <span class=\"token keyword\">or</span> sy<span class=\"token token-operator punctuation\">-</span>cprog <span class=\"token operator\">=</span> <span class=\"token string\">'SAPMSSY4'</span><span class=\"token punctuation\">.</span>\n      l_update_task <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* raise event 'transaction_finished' only if not in update task.</span>\n  <span class=\"token keyword\">if</span> l_update_task <span class=\"token operator\">&lt;></span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span>\n      cl_system_transaction_state<span class=\"token token-operator punctuation\">=></span>raise_transaction_finished\n      <span class=\"token keyword\">exporting</span>\n        <span class=\"token keyword\">kind</span> <span class=\"token operator\">=</span> cl_system_transaction_state<span class=\"token token-operator punctuation\">=></span>commit_work<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* restore sy-oncom</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> l_oncom<span class=\"token punctuation\">.</span>\n  sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> l_subrc<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* reset marker on call stack.</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">reset</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                                                <span class=\"token eol-comment comment\">\"%_after_commit</span>\n\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM %_PROCESS_P_O_C</span>\n<span class=\"token comment\">* Process PERFORM ON COMMIT orders</span>\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_process_p_o_c<span class=\"token punctuation\">.</span>                                       <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> last_oncom <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> imode_orders_wa <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">,</span>\n        orders_wa       <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">.</span>\n\n  last_oncom <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">import</span> imode_orders <span class=\"token keyword\">from</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n  sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">sort</span> imode_orders <span class=\"token keyword\">by</span> u_level i_level<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">loop</span> <span class=\"token keyword\">at</span> imode_orders <span class=\"token keyword\">into</span> imode_orders_wa<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">perform</span> %_order_form_level <span class=\"token keyword\">using</span> imode_orders_wa<span class=\"token token-operator punctuation\">-</span>prog\n                                     imode_orders_wa<span class=\"token token-operator punctuation\">-</span>rout\n                                     imode_orders_wa<span class=\"token token-operator punctuation\">-</span>u_level<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endloop</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> imode_orders<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">sort</span> orders <span class=\"token keyword\">by</span> u_level i_level<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* signal begin of ON COMMIT handling</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'P'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'SET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">loop</span> <span class=\"token keyword\">at</span> orders <span class=\"token keyword\">into</span> orders_wa<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">perform</span> <span class=\"token punctuation\">(</span>orders_wa<span class=\"token token-operator punctuation\">-</span>rout<span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">in</span> <span class=\"token keyword\">program</span> <span class=\"token punctuation\">(</span>orders_wa<span class=\"token token-operator punctuation\">-</span>prog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endloop</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> orders<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* for RTM test concerning POC during OS events</span>\n  <span class=\"token keyword\">free</span> os_orders<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* end RTM</span>\n\n<span class=\"token comment\">* signal end of ON COMMIT</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> last_oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'SET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_process_p_o_c</span>\n\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM %_GET_VB_KEY</span>\n<span class=\"token comment\">* Update task without update task</span>\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_get_vb_key <span class=\"token keyword\">using</span> vb_func_name <span class=\"token keyword\">changing</span> vb_data_key<span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"#EC *</span>\n\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> %_vb_calls    <span class=\"token keyword\">type</span> <span class=\"token keyword\">standard</span> <span class=\"token keyword\">table</span> <span class=\"token keyword\">of</span> %_vb_calls<span class=\"token punctuation\">,</span>       <span class=\"token eol-comment comment\">\"#EC *</span>\n        %_vb_calls_wa <span class=\"token keyword\">type</span> %_vb_calls<span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> utask_on<span class=\"token punctuation\">,</span>                  <span class=\"token eol-comment comment\">\"flag: asynchronous update task on?</span>\n        direct_utask_active<span class=\"token punctuation\">.</span>       <span class=\"token eol-comment comment\">\"flag: already in local update task?</span>\n\n  <span class=\"token keyword\">clear</span> vb_data_key<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'GET_SWITCH_UTASK'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'MODE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">'S'</span>\n                          <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> utask_on<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'GET_SWITCH_UTASK'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'MODE'</span>  <span class=\"token keyword\">field</span> <span class=\"token string\">'A'</span>\n                          <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> direct_utask_active<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">if</span> utask_on <span class=\"token keyword\">eq</span> <span class=\"token string\">'N'</span> <span class=\"token keyword\">and</span> direct_utask_active <span class=\"token keyword\">eq</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*   update task switched to \"local\", but not yet inside update task.</span>\n    <span class=\"token keyword\">select</span> <span class=\"token keyword\">single</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> tfdir <span class=\"token keyword\">where</span> funcname <span class=\"token operator\">=</span> vb_func_name<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">message</span> a400 <span class=\"token keyword\">with</span> vb_func_name<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n    cl_abap_restrmode_utils<span class=\"token token-operator punctuation\">=></span>check_in_restr_mode_updtask<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">if</span> tfdir<span class=\"token token-operator punctuation\">-</span>utask <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span>     <span class=\"token eol-comment comment\">\"direct update task call</span>\n       <span class=\"token keyword\">or</span> tfdir<span class=\"token token-operator punctuation\">-</span>utask <span class=\"token operator\">=</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"direct update task call, no later update</span>\n\n<span class=\"token comment\">*     get identifier for current LUW</span>\n      <span class=\"token keyword\">call</span> <span class=\"token string\">'ThVBCall'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'OPCODE'</span> <span class=\"token keyword\">field</span> get_vb_key\n                      <span class=\"token keyword\">id</span> <span class=\"token string\">'VBKEY'</span>  <span class=\"token keyword\">field</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">free</span> %_vb_calls<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">clear</span> %_vb_calls_wa<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*     import table with already registered function modules</span>\n      <span class=\"token keyword\">import</span> %_vb_calls <span class=\"token keyword\">from</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %%vbkey<span class=\"token punctuation\">.</span>\n\n      <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*       already got UUID for the parameters of the function module</span>\n        <span class=\"token keyword\">read</span> <span class=\"token keyword\">table</span> %_vb_calls <span class=\"token keyword\">index</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">into</span> %_vb_calls_wa <span class=\"token keyword\">transporting</span> daten_id<span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">&lt;></span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">message</span> x675<span class=\"token punctuation\">(</span><span class=\"token number\">00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*       get new UUID as key for the parameters of the function module</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">.</span>\n          %_vb_calls_wa<span class=\"token token-operator punctuation\">-</span>daten_id<span class=\"token token-operator punctuation\">-</span>vbkey <span class=\"token operator\">=</span> cl_system_uuid<span class=\"token token-operator punctuation\">=></span>create_uuid_c22_static<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">catch</span> cx_uuid_error<span class=\"token punctuation\">.</span>\n          <span class=\"token keyword\">message</span> x675<span class=\"token punctuation\">(</span><span class=\"token number\">00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">endtry</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*     fill in name of function module</span>\n      %_vb_calls_wa<span class=\"token token-operator punctuation\">-</span>func_name <span class=\"token operator\">=</span> vb_func_name<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*     identify the function call by consecutive number</span>\n      <span class=\"token keyword\">describe</span> <span class=\"token keyword\">table</span> %_vb_calls <span class=\"token keyword\">lines</span> %_vb_calls_wa<span class=\"token token-operator punctuation\">-</span>daten_id<span class=\"token token-operator punctuation\">-</span>vbkey+<span class=\"token number\">22</span><span class=\"token punctuation\">.</span>\n      %_vb_calls_wa<span class=\"token token-operator punctuation\">-</span>data_temperature <span class=\"token operator\">=</span> cl_abap_stack_temperature<span class=\"token token-operator punctuation\">=></span>get_temperature<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">append</span> %_vb_calls_wa <span class=\"token keyword\">to</span> %_vb_calls<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*     (re-) export the table to memory</span>\n      <span class=\"token keyword\">export</span> %_vb_calls <span class=\"token keyword\">to</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %%vbkey<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">free</span> %_vb_calls<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*     return the identifier of this function call to call.rs1 to export</span>\n<span class=\"token comment\">*     the corresponding parameters with the same identifier.</span>\n      vb_data_key <span class=\"token operator\">=</span> %_vb_calls_wa<span class=\"token token-operator punctuation\">-</span>daten_id<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_get_vb_key</span>\n\n<span class=\"token comment\">*----------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM %_CALL_ROLLBACK</span>\n<span class=\"token comment\">* Call ROLLBACK-Handling</span>\n<span class=\"token comment\">* To be called by kernel code to perform rollback handling in ABAP</span>\n<span class=\"token comment\">*----------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_call_rollback<span class=\"token punctuation\">.</span>                                       <span class=\"token eol-comment comment\">\"#EC *</span>\n<span class=\"token comment\">* Save SUBRC for returncode after EXCEPTION ERROR_MESSAGE</span>\n  <span class=\"token keyword\">local</span><span class=\"token punctuation\">:</span> sy<span class=\"token token-operator punctuation\">-</span>subrc<span class=\"token punctuation\">,</span> sy<span class=\"token token-operator punctuation\">-</span>msgty<span class=\"token punctuation\">,</span> sy<span class=\"token token-operator punctuation\">-</span>msgid<span class=\"token punctuation\">,</span> sy<span class=\"token token-operator punctuation\">-</span>msgno<span class=\"token punctuation\">,</span>\n         sy<span class=\"token token-operator punctuation\">-</span>msgv1<span class=\"token punctuation\">,</span> sy<span class=\"token token-operator punctuation\">-</span>msgv2<span class=\"token punctuation\">,</span> sy<span class=\"token token-operator punctuation\">-</span>msgv3<span class=\"token punctuation\">,</span> sy<span class=\"token token-operator punctuation\">-</span>msgv4<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* Perform ROLLBACK with all registered rollback hooks</span>\n  <span class=\"token keyword\">rollback</span> <span class=\"token keyword\">work</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_call_rollback</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* R O L L B A C K</span>\n<span class=\"token comment\">* rollback work</span>\n<span class=\"token comment\">* when called within CALL DIALOG --> no effect i.e. symmetrical to</span>\n<span class=\"token comment\">* COMMIT WORK</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_rollback<span class=\"token punctuation\">.</span>                                            <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> txend <span class=\"token keyword\">type</span> <span class=\"token keyword\">c</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_oncom <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* forbid ROLLBACK if already in ON COMMIT/ROLLBACK handling</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'GET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> txend<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">if</span> txend <span class=\"token operator\">=</span> <span class=\"token string\">'C'</span> <span class=\"token keyword\">or</span> txend <span class=\"token operator\">=</span> <span class=\"token string\">'R'</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">message</span> x086<span class=\"token punctuation\">(</span><span class=\"token number\">00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">check</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'N'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'V'</span> <span class=\"token keyword\">and</span>\n        sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'E'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'P'</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* change sy-oncom to avoid recursion</span>\n  l_oncom <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>                      <span class=\"token eol-comment comment\">\"E = Event Handling</span>\n\n<span class=\"token comment\">* no escape out off this form other than ENDFORM</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">set</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* Hook for Process Information Infrastructure</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'SPI_AGENT_ROLLBACK'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* restore sy-oncom</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> l_oncom<span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'ThVBCall'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'OPCODE'</span>  <span class=\"token keyword\">field</span> get_vb_key\n                  <span class=\"token keyword\">id</span> <span class=\"token string\">'VBKEY'</span>  <span class=\"token keyword\">field</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n  %_vbkey<span class=\"token token-operator punctuation\">-</span>vbkey <span class=\"token operator\">=</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* perform ON ROLLBACK orders</span>\n  <span class=\"token keyword\">perform</span> %_process_p_o_r<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* free contents of memory and tables for update task</span>\n  <span class=\"token keyword\">free</span> %_vb_calls<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">import</span> %_vb_calls <span class=\"token keyword\">from</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %%vbkey<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">loop</span> <span class=\"token keyword\">at</span> %_vb_calls<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">free</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vb_calls<span class=\"token token-operator punctuation\">-</span>daten_id<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endloop</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %%vbkey<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> %_vb_calls<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* free contents of memory and tables</span>\n  %_vbkey<span class=\"token token-operator punctuation\">-</span>vbkey <span class=\"token operator\">=</span> %%vbkey<span class=\"token token-operator punctuation\">-</span>vbkey<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> imode_orders<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> orders<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> imode_rb_orders<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> rb_orders<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* for RTM test concerning POC during OS events</span>\n  <span class=\"token keyword\">free</span> os_orders<span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* end RTM</span>\n\n  <span class=\"token keyword\">if</span> arfc_pending <span class=\"token operator\">&lt;></span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n    arfc_pending <span class=\"token operator\">=</span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'ARFC_END_TRANSACTION'</span>\n      <span class=\"token keyword\">exporting</span>\n        <span class=\"token keyword\">mode</span> <span class=\"token operator\">=</span> <span class=\"token string\">'ROLLBACK'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*</span>\n<span class=\"token comment\">* bgRFC</span>\n<span class=\"token comment\">*</span>\n  <span class=\"token keyword\">if</span> bgrfc_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\"something happened with bgRFC</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_BGRFC_DB_HELPER'</span><span class=\"token punctuation\">)</span>=>ON_ROLLBACK<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*</span>\n<span class=\"token comment\">* Local DATA Queue (LDQ)</span>\n<span class=\"token comment\">*</span>\n  <span class=\"token keyword\">if</span> ldq_writer_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"something happened with LDQ-Writer</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_LDQ_UNIT_WRITER'</span><span class=\"token punctuation\">)</span>=>on_rollback<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">if</span> ldq_reader_eot_action  <span class=\"token keyword\">ne</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>  <span class=\"token eol-comment comment\">\"something happened with LDQ-Writer</span>\n    <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CL_LDQ_UNIT_READER'</span><span class=\"token punctuation\">)</span>=>on_rollback<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* reset marker on call stack.</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">reset</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_rollback</span>\n\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM %_AFTER_ROLLBACK</span>\n<span class=\"token comment\">* called from RSYN rollback.rs1</span>\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_after_rollback<span class=\"token punctuation\">.</span>                                      <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> l_oncom <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* ROLLBACK during POC, Update task or End Transaction event?</span>\n  <span class=\"token keyword\">check</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'P'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'E'</span> <span class=\"token keyword\">and</span>\n        sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'N'</span> <span class=\"token keyword\">and</span> sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">&lt;></span> <span class=\"token string\">'V'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* change sy-oncom to avoid recursion</span>\n  l_oncom <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'E'</span><span class=\"token punctuation\">.</span>                      <span class=\"token eol-comment comment\">\"E = Event Handling</span>\n<span class=\"token comment\">* no escape out off this form other than ENDFORM</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">set</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> cl_os_transaction_end_notifier<span class=\"token token-operator punctuation\">=></span>raise_rollback_finished<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">method</span> cl_system_transaction_state<span class=\"token token-operator punctuation\">=></span>raise_transaction_finished\n    <span class=\"token keyword\">exporting</span>\n      <span class=\"token keyword\">kind</span> <span class=\"token operator\">=</span> cl_system_transaction_state<span class=\"token token-operator punctuation\">=></span>rollback_work<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* switch local update task to 'inactive'</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'SET_SWITCH_UTASK_OFF'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">'N'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* restore sy-oncom</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> l_oncom<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* reset marker on call stack.</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">reset</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_after_rollback</span>\n\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM %_PROCESS_P_O_R</span>\n<span class=\"token comment\">* Process PERFORM ON ROLLBACK orders</span>\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_process_p_o_r<span class=\"token punctuation\">.</span>                                       <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> last_oncom <span class=\"token keyword\">like</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> rb_orders_wa       <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">,</span>\n        imode_rb_orders_wa <span class=\"token keyword\">type</span> %_commit_orders<span class=\"token punctuation\">.</span>\n\n  last_oncom <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">import</span> imode_rb_orders <span class=\"token keyword\">from</span> <span class=\"token keyword\">memory</span> <span class=\"token keyword\">id</span> %_vbkey<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">loop</span> <span class=\"token keyword\">at</span> imode_rb_orders <span class=\"token keyword\">into</span> imode_rb_orders_wa<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">perform</span> %_order_form_for_rollback\n      <span class=\"token keyword\">using</span> imode_rb_orders_wa<span class=\"token token-operator punctuation\">-</span>prog\n            imode_rb_orders_wa<span class=\"token token-operator punctuation\">-</span>rout<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endloop</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> imode_rb_orders<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">sort</span> rb_orders <span class=\"token keyword\">by</span> u_level i_level<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* signal begin of ON ROLLBACK handling</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> <span class=\"token string\">'P'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'SET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">'R'</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">set</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">loop</span> <span class=\"token keyword\">at</span> rb_orders <span class=\"token keyword\">into</span> rb_orders_wa<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">perform</span> <span class=\"token punctuation\">(</span>rb_orders_wa<span class=\"token token-operator punctuation\">-</span>rout<span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">in</span> <span class=\"token keyword\">program</span> <span class=\"token punctuation\">(</span>rb_orders_wa<span class=\"token token-operator punctuation\">-</span>prog<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endloop</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">system-call</span> state_limit <span class=\"token keyword\">reset</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">free</span> rb_orders<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* signal end of ON ROLLBACK</span>\n  sy<span class=\"token token-operator punctuation\">-</span>oncom <span class=\"token operator\">=</span> last_oncom<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'SET_SWITCH_TXEND'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'STATE'</span> <span class=\"token keyword\">field</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_process_p_o_r</span>\n\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token comment\">* FORM SYSTEM_HOOK</span>\n<span class=\"token comment\">* ---------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> system_hook<span class=\"token punctuation\">.</span>                                           <span class=\"token eol-comment comment\">\"#EC CALLED</span>\n  sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"system_hook</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* R E G I S T E R _ A F R C</span>\n<span class=\"token comment\">* register ARFC call</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_register_arfc<span class=\"token punctuation\">.</span>                                       <span class=\"token eol-comment comment\">\"#EC *</span>\n  arfc_pending <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_register_arfc</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* R E G I S T E R _ t R F C / q R F C independent from Update TASK</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_register_trfc_no_wait_for_update<span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"#EC PREFIX_OK</span>\n  trfc_nowait_for_update <span class=\"token operator\">=</span> <span class=\"token string\">'X'</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*-------------------------------------------------------------------</span>\n<span class=\"token comment\">* register bgRFC actions</span>\n<span class=\"token comment\">*-------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_register_bgrfc<span class=\"token punctuation\">.</span>                                       <span class=\"token eol-comment comment\">\"#EC *</span>\n  bgrfc_eot_action <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_register_bgrfc</span>\n\n<span class=\"token comment\">*-------------------------------------------------------------------</span>\n<span class=\"token comment\">* register Local Data Queue (ldq) actions</span>\n<span class=\"token comment\">*-------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_register_ldq_writer<span class=\"token punctuation\">.</span>                                 <span class=\"token eol-comment comment\">\"#EC *</span>\n  ldq_writer_eot_action <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_register_ldq_writer</span>\n\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*&amp;      Form  %_register_ldq_reader</span>\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*       text</span>\n<span class=\"token comment\">*----------------------------------------------------------------------*</span>\n<span class=\"token keyword\">form</span> %_register_ldq_reader<span class=\"token punctuation\">.</span>                                 <span class=\"token eol-comment comment\">\"#EC *</span>\n  ldq_reader_eot_action <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_register_ldq_reader</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* L I S T _ C O M M A N D</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">module</span> list_command <span class=\"token keyword\">input</span><span class=\"token punctuation\">.</span>                                  <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">result</span> <span class=\"token keyword\">type</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">*  IF sy-xcode(5) EQ 'PFILE'.</span>\n<span class=\"token comment\">*    MESSAGE ID '02' TYPE 'I' NUMBER '016'.</span>\n<span class=\"token comment\">*    CLEAR sy-xcode.</span>\n<span class=\"token comment\">*  ENDIF.</span>\n  <span class=\"token keyword\">result</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">call</span> <span class=\"token string\">'QUERY_LIST_TO_MEMORY'</span> <span class=\"token keyword\">id</span> <span class=\"token string\">'RESULT'</span> <span class=\"token keyword\">field</span> <span class=\"token keyword\">result</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">result</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span>\n    sy<span class=\"token token-operator punctuation\">-</span>xcode <span class=\"token operator\">=</span> <span class=\"token string\">'%SMEX'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">check</span> sy<span class=\"token token-operator punctuation\">-</span>xcode<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">'%'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'LIST_COMMAND'</span>\n    <span class=\"token keyword\">exporting</span>\n      command         <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>xcode\n    <span class=\"token keyword\">exceptions</span>\n      unknown_command <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\n      <span class=\"token keyword\">others</span>          <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">check</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">clear</span><span class=\"token punctuation\">:</span> sy<span class=\"token token-operator punctuation\">-</span>ucomm<span class=\"token punctuation\">,</span> sy<span class=\"token token-operator punctuation\">-</span>xcode<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endmodule</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"list_command INPUT</span>\n\n<span class=\"token comment\">* R/3-Drucken Anfang</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* P R I N T _ S T A R T</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">module</span> print_start <span class=\"token keyword\">input</span><span class=\"token punctuation\">.</span>                                   <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> hex02 <span class=\"token keyword\">type</span> <span class=\"token keyword\">x</span> <span class=\"token keyword\">value</span> <span class=\"token string\">'02'</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> display_mode<span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* Korrektur Ralf Wendelgaß 20.5.98</span>\n\n  <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>xcode <span class=\"token operator\">=</span> <span class=\"token string\">'PRI'</span>   <span class=\"token keyword\">or</span>\n     sy<span class=\"token token-operator punctuation\">-</span>xcode <span class=\"token operator\">=</span> <span class=\"token string\">'PRINT'</span> <span class=\"token keyword\">or</span>\n     sy<span class=\"token token-operator punctuation\">-</span>xcode <span class=\"token operator\">=</span> <span class=\"token string\">'%PRI'</span> <span class=\"token keyword\">or</span>\n     sy<span class=\"token token-operator punctuation\">-</span>xcode <span class=\"token operator\">=</span> <span class=\"token string\">'%PRN'</span><span class=\"token punctuation\">.</span>\n\n    display_mode <span class=\"token operator\">=</span> cl_abap_list_layout<span class=\"token token-operator punctuation\">=></span>get_display_mode<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n    sy<span class=\"token token-operator punctuation\">-</span>callr <span class=\"token operator\">=</span> <span class=\"token string\">'OKPRI'</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">* no print dialog if print icon was pressed</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>xcode <span class=\"token operator\">=</span> <span class=\"token string\">'%PRN'</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'PRINT_REPORT_DEFAULT'</span>\n        <span class=\"token keyword\">exporting</span>\n          <span class=\"token keyword\">report</span> <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>cprog\n          uc_display_mode <span class=\"token operator\">=</span> display_mode\n        <span class=\"token keyword\">exceptions</span>\n          <span class=\"token keyword\">others</span> <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">call</span> <span class=\"token keyword\">function</span> <span class=\"token string\">'PRINT_REPORT'</span>\n        <span class=\"token keyword\">exporting</span>\n          <span class=\"token keyword\">report</span> <span class=\"token operator\">=</span> sy<span class=\"token token-operator punctuation\">-</span>cprog\n          uc_display_mode <span class=\"token operator\">=</span> display_mode\n        <span class=\"token keyword\">exceptions</span>\n          <span class=\"token keyword\">others</span> <span class=\"token operator\">=</span> <span class=\"token number\">99</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* printing ok</span>\n    <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* cover page</span>\n      <span class=\"token keyword\">if</span> sy<span class=\"token token-operator punctuation\">-</span>subty <span class=\"token keyword\">o</span> hex02 <span class=\"token keyword\">and</span> %_print<span class=\"token token-operator punctuation\">-</span>prbig <span class=\"token operator\">&lt;></span> <span class=\"token keyword\">space</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">perform</span> %_%_cover_page<span class=\"token punctuation\">(</span>rsdbrunt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n      sy<span class=\"token token-operator punctuation\">-</span>xcode <span class=\"token operator\">=</span> <span class=\"token string\">'PRI'</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* errors occured or printout cancelled</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">clear</span> sy<span class=\"token token-operator punctuation\">-</span>xcode<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">message</span> s015<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">endif</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">endmodule</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"print_start INPUT</span>\n<span class=\"token comment\">* R/3-Drucken Ende</span>\n\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* S Y N T A X C H E C K - Popup (143)</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">module</span> sc_init <span class=\"token keyword\">output</span><span class=\"token punctuation\">.</span>                                      <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">tables</span><span class=\"token punctuation\">:</span> trdir<span class=\"token punctuation\">,</span> abmsg<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">set</span> <span class=\"token keyword\">titlebar</span> <span class=\"token string\">'001'</span><span class=\"token punctuation\">.</span>                                       <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">set</span> <span class=\"token keyword\">pf-status</span> <span class=\"token string\">'SCMS'</span> <span class=\"token keyword\">immediately</span><span class=\"token punctuation\">.</span>                         <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">select</span> <span class=\"token keyword\">single</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> trdir <span class=\"token keyword\">where</span> <span class=\"token keyword\">name</span> <span class=\"token operator\">=</span> abmsg<span class=\"token token-operator punctuation\">-</span>irepid<span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endmodule</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"sc_init OUTPUT</span>\n\n<span class=\"token comment\">*---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*       MODULE SC_RESET                                               *</span>\n<span class=\"token comment\">*---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*       ........                                                      *</span>\n<span class=\"token comment\">*---------------------------------------------------------------------*</span>\n<span class=\"token keyword\">module</span> sc_reset<span class=\"token punctuation\">.</span>                                            <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">leave</span> <span class=\"token keyword\">to</span> <span class=\"token keyword\">transaction</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endmodule</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"sc_reset</span>\n\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* L I S T _ E X I T</span>\n<span class=\"token comment\">* return from \"Listprocessing\" (main list of report -> LIST_RETURN)</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_list_exit<span class=\"token punctuation\">.</span>                                           <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">leave</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_list_exit</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* L I S T _ R E T U R N</span>\n<span class=\"token comment\">* return from main list of report -> selection screen</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> %_list_return<span class=\"token punctuation\">.</span>                                         <span class=\"token eol-comment comment\">\"#EC *</span>\n  <span class=\"token keyword\">perform</span> %_return_to_selscreen <span class=\"token keyword\">in</span> <span class=\"token keyword\">program</span> rsdbrunt <span class=\"token keyword\">if</span> <span class=\"token keyword\">found</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>                    <span class=\"token eol-comment comment\">\"%_list_return</span>\n\n<span class=\"token comment\">*???????????????????????????????????????????????????????????????????????</span>\n<span class=\"token keyword\">form</span> list_command ##NEEDED<span class=\"token punctuation\">.</span>                                 <span class=\"token eol-comment comment\">\"#EC CALLED</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token comment\">* N E W - L I N E</span>\n<span class=\"token comment\">* called by ab_trigg to force a line-skip after GET processing</span>\n<span class=\"token comment\">* -------------------------------------------------------------------</span>\n<span class=\"token keyword\">form</span> <span class=\"token keyword\">new-line</span> ##FIELD_HYPHEN<span class=\"token punctuation\">.</span>                               <span class=\"token eol-comment comment\">\"#EC CALLED</span>\n  <span class=\"token keyword\">new-line</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endform</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*&amp;      Module  LEAVE_LIST  OUTPUT</span>\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*       text                                                           *</span>\n<span class=\"token comment\">*----------------------------------------------------------------------*</span>\n<span class=\"token comment\">*odule %_list_return output.</span>\n<span class=\"token comment\">* perform %_return_to_selscreen in program rsdbrunt if found.</span>\n<span class=\"token comment\">* leave screen.</span>\n<span class=\"token comment\">*ndmodule.                             \" LEAVE_LIST  OUTPUT</span>\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*&amp;      Module  LIST_STRUCTURE_RECOGNIZER  OUTPUT</span>\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*       text</span>\n<span class=\"token comment\">*----------------------------------------------------------------------*</span>\n<span class=\"token keyword\">module</span> list_structure_recognizer <span class=\"token keyword\">output</span><span class=\"token punctuation\">.</span>\n   cl_abap_list_parser<span class=\"token token-operator punctuation\">=></span>refresh_lsr_container<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">endmodule</span><span class=\"token punctuation\">.</span>                 <span class=\"token eol-comment comment\">\" LIST_STRUCTURE_RECOGNIZER  OUTPUT</span>\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*&amp;      Form  thew_list_masking</span>\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*       text</span>\n<span class=\"token comment\">*----------------------------------------------------------------------*</span>\n<span class=\"token comment\">*  -->  p1        text</span>\n<span class=\"token comment\">*  &lt;--  p2        text</span>\n<span class=\"token comment\">*----------------------------------------------------------------------*</span>\n<span class=\"token keyword\">FORM</span> thew_list_masking <span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n    lv_func       <span class=\"token keyword\">TYPE</span> rs38l_fnam <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'/UIM/PBO_120_HOOK_LIST'</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">TRY</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'FUNCTION_EXISTS'</span>\n        <span class=\"token keyword\">EXPORTING</span>\n          funcname           <span class=\"token operator\">=</span> lv_func\n        <span class=\"token keyword\">EXCEPTIONS</span>\n          function_not_exist <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">OTHERS</span>             <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">IF</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n        <span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> lv_func<span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">ENDIF</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">CATCH</span> cx_root<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDTRY</span><span class=\"token punctuation\">.</span>\n\n\n<span class=\"token keyword\">ENDFORM</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*&amp;      Form  thew_list_masking2</span>\n<span class=\"token comment\">*&amp;---------------------------------------------------------------------*</span>\n<span class=\"token comment\">*       advanced UI masking of special fields with helpid</span>\n<span class=\"token comment\">*       called from kernel by ab_rperf from abwrite</span>\n<span class=\"token comment\">*----------------------------------------------------------------------*</span>\n<span class=\"token keyword\">FORM</span> thew_list_masking2<span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n    lv_func       <span class=\"token keyword\">TYPE</span> rs38l_fnam <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'/UIM/PBO_WRITE_HOOK'</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">TRY</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'FUNCTION_EXISTS'</span>\n        <span class=\"token keyword\">EXPORTING</span>\n          funcname           <span class=\"token operator\">=</span> lv_func\n        <span class=\"token keyword\">EXCEPTIONS</span>\n          function_not_exist <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n          <span class=\"token keyword\">OTHERS</span>             <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">.</span>\n      <span class=\"token keyword\">IF</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">FIELD-SYMBOLS</span><span class=\"token punctuation\">:</span>\n          &lt;in_p1>    <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">,</span>\n          &lt;in_p2>    <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">,</span>\n          &lt;inout_p3> <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">,</span>\n          &lt;out_p4>   <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">any</span><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">CALL</span> <span class=\"token string\">'AB_GET_C_PARMS'</span> <span class=\"token keyword\">ID</span> <span class=\"token string\">'P1'</span> <span class=\"token keyword\">FIELD</span> &lt;in_p1>    <span class=\"token eol-comment comment\">\"field name</span>\n                              <span class=\"token keyword\">ID</span> <span class=\"token string\">'P2'</span> <span class=\"token keyword\">FIELD</span> &lt;in_p2>    <span class=\"token eol-comment comment\">\"ddic name</span>\n                              <span class=\"token keyword\">ID</span> <span class=\"token string\">'P3'</span> <span class=\"token keyword\">FIELD</span> &lt;inout_p3>    <span class=\"token eol-comment comment\">\"field value</span>\n                              <span class=\"token keyword\">ID</span> <span class=\"token string\">'P4'</span> <span class=\"token keyword\">FIELD</span> &lt;out_p4><span class=\"token punctuation\">.</span>    <span class=\"token eol-comment comment\">\"flag is list masking</span>\n\n        <span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> lv_func\n          <span class=\"token keyword\">EXPORTING</span>\n            fieldname       <span class=\"token operator\">=</span> &lt;in_p1>\n            ddicname        <span class=\"token operator\">=</span> &lt;in_p2>\n          <span class=\"token keyword\">IMPORTING</span>\n            is_list_masking <span class=\"token operator\">=</span> &lt;out_p4>\n          <span class=\"token keyword\">CHANGING</span>\n            fieldvalue      <span class=\"token operator\">=</span> &lt;inout_p3><span class=\"token punctuation\">.</span>\n\n        <span class=\"token keyword\">CALL</span> <span class=\"token string\">'AB_SET_C_PARMS'</span> <span class=\"token keyword\">ID</span> <span class=\"token string\">'P3'</span> <span class=\"token keyword\">FIELD</span> &lt;inout_p3>\n                      <span class=\"token keyword\">ID</span> <span class=\"token string\">'P4'</span> <span class=\"token keyword\">FIELD</span> &lt;out_p4><span class=\"token punctuation\">.</span>    <span class=\"token eol-comment comment\">\"#EC CI_CCALL CI_CCALL</span>\n      <span class=\"token keyword\">ENDIF</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token keyword\">CATCH</span> cx_root<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDTRY</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">ENDFORM</span><span class=\"token punctuation\">.</span></code></pre>\n      </div>","frontmatter":{"title":"A Detailed Look at ABAP's BDC Method","date":"January 24, 2018","draft":true}}},"pageContext":{"slug":"/detailed-look-at-bdc-in-abap/","prev":{"fields":{"slug":"/data-analysis-and-pixel-art-of-towns-and-cities-in-pokemon/"},"frontmatter":{"date":"15 July, 2018","title":"Data Analysis and Pixel Art of Towns and Cities in Pokemon","draft":false,"link":"https://chrisfrew.in/data-analysis-and-pixel-art-of-towns-and-cities-in-pokemon/","relativeLink":"/data-analysis-and-pixel-art-of-towns-and-cities-in-pokemon/"}},"next":{"fields":{"slug":"/final-say-bitcoin/"},"frontmatter":{"date":"18 December, 2017","title":"My First and Final Statement on Bitcoin for this Blog","draft":false,"link":"https://chrisfrew.in/final-say-bitcoin/","relativeLink":"/final-say-bitcoin/"}}}}