{"data":{"site":{"siteMetadata":{"title":"Chris Frewin's Full Stack Blog.","author":"Chris Frewin"}},"markdownRemark":{"id":"fc75b372-f72e-535f-96ec-3ddd5525c7f0","excerpt":"Jumping to the Web GUI from a SAPUI5 app can be helpful, since it will keep your user all in the same app (their browser), and they won’t…","html":"<p>Jumping to the Web GUI from a SAPUI5 app can be helpful, since it will keep your user all in the same app (their browser), and they won’t have to jump back and forth between the native SAP GUI and the browser.</p>\n<p>This will also be a bit of a BONUS post, because I’m going to show you <em>two</em> specific examples of how to jump to the SAP Web GUI from a SAPUI5 or OpenUI5 app! These functions are:</p>\n<ol>\n<li>Display a production or processing order (Transaction CO03 for Production Orders, Transaction COR3 for Process Orders)\nand</li>\n<li>To the documented goods movements of a production or processing order (Transaction <code class=\"language-text\">COOIS</code> for Production Orders, Transaction <code class=\"language-text\">COOISPI</code> for Process Orders)</li>\n</ol>\n<h2>The Challenge with Web GUI</h2>\n<p>Passing commands to Web GUI transactions are, to say in the least… weird. The good news is that they are all URL parameters, no complex objects to deal with. You can read more about them <a href=\"\">in SAP’s documentation</a>. </p>\n<h3>General Skeleton of a Web GUI Link</h3>\n<p>Under a normal install, the SAP Web GUI should sit in the Gateway path <code class=\"language-text\">/sap/bc/gui/sap/its/webgui</code>. We then add a <code class=\"language-text\">?</code> to tell Web GUI it is a query. Then we provide the transaction code by means of <code class=\"language-text\">~transaction=</code>. Finally, we provide the web dynpro with various parameters about which fields in that transaction to fill, each seperated by the encoded HTML space string <code class=\"language-text\">%20</code> If you are familiar with batch data communication, or BDC, you will be familiar with working with these fields, if not, <a href=\"https://help.sap.com/saphelp_uiaddon10/helpdata/en/4c/5bdcd397817511e10000000a42189b/frameset.htm\">check out the official SAP documentation on how to find parameter names for dynpro fields</a>. For example as we will see below, the </p>\n<p>The last important thing is the base URL, which comes before that Gatway apth <code class=\"language-text\">/sap/bc/gui/sap/its/webgui</code> in the URL. This has to be dynamically generated if you have the typical chain of DEV, QAS, and PRD systems as part of your SAP instance, since the URL will be different. For example, if the company is ‘Super Cool Company’, the URLs of the 3 sites might look like this:</p>\n<p><code class=\"language-text\">https://super-cool-company-sap-dev.com/sap/bc/gui/sap/its/webui/</code>\n<code class=\"language-text\">https://super-cool-company-sap-qas.com/sap/bc/gui/sap/its/webui/</code>\n<code class=\"language-text\">https://super-cool-company-sap-prd.com/sap/bc/gui/sap/its/webui/</code></p>\n<p>and a full Web GUI URL (let’s say we want to fill the material field for the display material transaction MM03 with material 123456, in the test system QAS):</p>\n<p><a href=\"https://super-cool-company-sap-qas.com/sap/bc/gui/sap/its/webui/~transaction=MM03%20RMMG1-MATNR=123456\">https://super-cool-company-sap-qas.com/sap/bc/gui/sap/its/webui/~transaction=MM03%20RMMG1-MATNR=123456</a></p>\n<p>all you need to do is change the base URL (super-cool-company-sap-qas.com) to your system and it should work! As a bonus, if you want to skip the first screen of MM03 and go right into the details with that material, you can use a URL like this:</p>\n<p><a href=\"https://super-cool-company-sap-qas.com/sap/bc/gui/sap/its/webui/~transaction=%5C*MM03%20RMMG1-MATNR=123456\">https://super-cool-company-sap-qas.com/sap/bc/gui/sap/its/webui/~transaction=*MM03%20RMMG1-MATNR=123456</a></p>\n<p>If you have eagle eyes, you’ll see the only difference is the <code class=\"language-text\">*</code> before the transaction name. This is what tells Web GUI to skip the first screen. (I know, I told you, Web GUI commands are weird!)</p>\n<p>So, in the two examples below, I’ll show you what view control to build first, and then I’ll show the code from the controller. Then we’ll put them into the SAP standard name convention of an <code class=\"language-text\">onPress{whateverfunctionname}</code> function. So, let’s hop right into the code for these two functionalities!</p>\n<h2>1. Jump to Goods Movements for an Order (COOIS or COOISPI)</h2>\n<h3>View Code (XML)</h3>\n<p>First let’s make our view control for this. We’ll make it simple: a <code class=\"language-text\">&lt;Button&gt;</code> control you could drop in anywhere easily. Here’s what I used:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">icon</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sap-icon://action<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Jump to goods movements in SAP Web GUI<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">press</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>onPressJumpToGoodsMovements<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">data:</span>Aufnr</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{Aufnr}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">data:</span>Auart</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{Auart}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<p>Note for this view we’ll need the <code class=\"language-text\">data:</code> namespace, so add the following to the top of your view file:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token namespace\">mvc:</span>View</span> <span class=\"token attr-name\">...</span> <span class=\"token attr-name\"><span class=\"token namespace\">xmlns:</span>data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">...</span> <span class=\"token punctuation\">></span></span></code></pre>\n      </div>\n<h3>Controller Code (JavaScript)</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">onPressJumpToGoodsMovements<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>oEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> sAufnr <span class=\"token operator\">=</span> oEvent<span class=\"token punctuation\">.</span><span class=\"token function\">getSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Aufnr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// for now the order number (AUFNR) and order type (AUART) are coded as if they were already in the source button data, but you could get these from a sapui5 model or similar</span>\n  <span class=\"token keyword\">var</span> sAuart <span class=\"token operator\">=</span> oEvent<span class=\"token punctuation\">.</span><span class=\"token function\">getSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Auart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> sTcode <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> sHost<span class=\"token punctuation\">,</span> sAufnrParameter<span class=\"token punctuation\">,</span> sLink<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> sViewParameter <span class=\"token operator\">=</span> <span class=\"token string\">\"%20PPIO_ENTRY_SC1100-PPIO_LISTTYP=PPIOD000;%20\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// same for both types of orders</span>\n\n  <span class=\"token comment\">// host determination</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clu10\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \tsHost <span class=\"token operator\">=</span> <span class=\"token string\">\"http://your-prd-site.whatever/sap/bc/gui/sap/its/webgui?\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clu20\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"qas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \tsHost <span class=\"token operator\">=</span> <span class=\"token string\">\"http://your-qas-site.whatever/sap/bc/gui/sap/its/webgui?\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webide\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \tsHost <span class=\"token operator\">=</span> <span class=\"token string\">\"http://your-dev-site.whatever/sap/bc/gui/sap/its/webgui?\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sAuart <span class=\"token operator\">===</span> <span class=\"token string\">\"PP01\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// standard production order </span>\n\t\tsTcode <span class=\"token operator\">=</span> <span class=\"token string\">\"~transaction=*COOIS\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// asterisk is to skip initial screen</span>\n\t\tsAufnrParameter <span class=\"token operator\">=</span> <span class=\"token string\">\"S_AUFNR-LOW=\"</span> <span class=\"token operator\">+</span> sAufnr<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sAuart <span class=\"token operator\">===</span> <span class=\"token string\">\"PI01\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// process order, internal </span>\n\t\tsTcode <span class=\"token operator\">=</span> <span class=\"token string\">\"~transaction=*COOISPI\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// asterisk is to skip initial screen</span>\n\t\tsAufnrParameter <span class=\"token operator\">=</span> <span class=\"token string\">\"S_PAUFNR-LOW=\"</span> <span class=\"token operator\">+</span> sAufnr<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sTcode <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// if we don't have a tcode, the given type isn't supported yet</span>\n\t\tMessageToast<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Order type \"</span> <span class=\"token operator\">+</span> sAuart <span class=\"token operator\">+</span> <span class=\"token string\">\" not yet supported!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tsLink <span class=\"token operator\">=</span> sHost <span class=\"token operator\">+</span> sTcode <span class=\"token operator\">+</span> sViewParameter <span class=\"token operator\">+</span> sAufnrParameter<span class=\"token punctuation\">;</span>\n\twindow<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>sLink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// open link in new tab</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>and that line</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">sLink <span class=\"token operator\">=</span> sHost <span class=\"token operator\">+</span> sTcode <span class=\"token operator\">+</span> sViewParameter <span class=\"token operator\">+</span> sAufnrParameter<span class=\"token punctuation\">;</span></code></pre>\n      </div>\n<p>looks in total like this: </p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-text\"><code class=\"language-text\">http://your-qas-site.whatever/sap/bc/gui/sap/its/webgui?~transaction=*COOIS%20PPIO_ENTRY_SC1100-PPIO_LISTTYP=PPIOD000;%20S_PAUFNR-LOW=123456</code></pre>\n      </div>\n<p>Go and give that a try in your browser! (After changing that phony base url first!)</p>\n<h2>2. Jump to the Production or Processing Order Details (CO03 or COR3)</h2>\n<h3>View Code (XML)</h3>\n<p>Again, we’ll use a button, and again it will look very similar to the ‘show order’ view control:</p>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Button</span> <span class=\"token attr-name\">icon</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>sap-icon://action<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">text</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Jump to order details in SAP Web GUI<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">press</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>onPressJumpToOrderDetails<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">data:</span>Aufnr</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{Aufnr}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">data:</span>Auart</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{Auart}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></code></pre>\n      </div>\n<h3>Controller Code (JavaScript)</h3>\n<div class=\"gatsby-highlight\">\n      <pre class=\"language-javascript\"><code class=\"language-javascript\">onPressJumpToOrderDetails<span class=\"token punctuation\">:</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>oEvent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> sAufnr <span class=\"token operator\">=</span> oEvent<span class=\"token punctuation\">.</span><span class=\"token function\">getSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Aufnr\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> sAuart <span class=\"token operator\">=</span> oEvent<span class=\"token punctuation\">.</span><span class=\"token function\">getSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Auart\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> sTcode <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> sHost<span class=\"token punctuation\">,</span> sAufnrParameter<span class=\"token punctuation\">,</span> sLink<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// host determination</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clu10\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"prd\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tsHost <span class=\"token operator\">=</span> <span class=\"token string\">\"http://your-prd-site.whatever:8001/sap/bc/gui/sap/its/webgui?\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"clu20\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"qas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tsHost <span class=\"token operator\">=</span> <span class=\"token string\">\"http://your-qas-site.whatever/sap/bc/gui/sap/its/webgui?\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dev\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>hostname<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"webide\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tsHost <span class=\"token operator\">=</span> <span class=\"token string\">\"http://your-dev-site.whatever/sap/bc/gui/sap/its/webgui?\"</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sAuart <span class=\"token operator\">===</span> <span class=\"token string\">\"PP01\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// standard production order</span>\n\t\tsTcode <span class=\"token operator\">=</span> <span class=\"token string\">\"~transaction=*CO03%20\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// asterisk is to skip initial screen</span>\n\t<span class=\"token punctuation\">}</span> \n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sAuart <span class=\"token operator\">===</span> <span class=\"token string\">\"PI01\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// process order, internal</span>\n\t\tsTcode <span class=\"token operator\">=</span> <span class=\"token string\">\"~transaction=*COR03%20\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// asterisk is to skip initial screen</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sTcode <span class=\"token operator\">===</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tMessageToast<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Order type \"</span> <span class=\"token operator\">+</span> sAuart <span class=\"token operator\">+</span> <span class=\"token string\">\" not yet supported!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\tsAufnrParameter <span class=\"token operator\">=</span> <span class=\"token string\">\"CAUFVD-AUFNR=\"</span> <span class=\"token operator\">+</span> sAufnr<span class=\"token punctuation\">;</span> <span class=\"token comment\">// this is the same for transactions CO03 and COR03</span>\n\tsLink <span class=\"token operator\">=</span> sHost <span class=\"token operator\">+</span> sTcode <span class=\"token operator\">+</span> sAufnrParameter<span class=\"token punctuation\">;</span>\n\twindow<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>sLink<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// open link in new tab</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>Like the first example, the generated link should also be callable in your browser (provided the link points to your local Web GUI instance and the order exists!)</p>\n<p>If you’d like, request a boilerplate repo and I’ll put one together on GitHub real quick - I was feeling a bit lazy and didn’t feel like putting one together. Just send me an email!</p>\n<p>That’s it for this post! Hope it was helpful!</p>\n<p>Cheers! 🍺</p>\n<p>-Chris</p>","frontmatter":{"title":"Jump to Web GUI Using SAPUI5 Or OpenUI5","date":"November 23, 2018","draft":false}}},"pageContext":{"slug":"/jump-to-web-gui-using-sapui5-or-openui5/","prev":{"fields":{"slug":"/warn-sap-users-of-locked-objects-then-kill-their-session/"},"frontmatter":{"date":"09 May, 2018","title":"Warn SAP Users of Locked Objects Then Kill Their Session","draft":false,"link":"https://chrisfrew.in/warn-sap-users-of-locked-objects-then-kill-their-session/","relativeLink":"/warn-sap-users-of-locked-objects-then-kill-their-session/"}},"next":null}}