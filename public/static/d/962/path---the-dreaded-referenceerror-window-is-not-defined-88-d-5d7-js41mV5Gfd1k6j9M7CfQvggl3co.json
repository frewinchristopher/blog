{"data":{"site":{"siteMetadata":{"title":"Chris Frewin's Full Stack Blog.","author":"Chris Frewin"}},"markdownRemark":{"id":"19fd7fd4-a09b-5764-ab64-abbc13cfa497","excerpt":"The Root Issue If you‚Äôre reading this in 2018, 2019, and 2020, the statement shown next to that error is likely an npm module that hasn‚Äôt‚Ä¶","html":"<h2>The Root Issue</h2>\n<p>If you‚Äôre reading this in 2018, 2019, and 2020, the statement shown next to that error is likely an npm module that hasn‚Äôt yet been built for SSR or static page generation (think NextJS or GatsbyJS. Also, I‚Äôm being optimistic and arbitrarily picking the year 2021 as the year that everything will be optimized for web AND non-web rendering‚Ä¶ whatever) üòÇ. </p>\n<p>The only problem when you see that fateful error is that you may see a <code class=\"language-text\">require()</code> or <code class=\"language-text\">import</code> statement as the location of the error. Then you‚Äôd say, huh, I don‚Äôt see any <code class=\"language-text\">window</code> object immediately‚Ä¶ whats going on?\nFor example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> somePackageThatUsesTheWindowObject <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'some-package-that-uses-the-window-object'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>or</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> somePackageThatUsesTheWindowObject <span class=\"token keyword\">from</span> <span class=\"token string\">'some-package-that-uses-the-window-object'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>or heck, maybe you‚Äôre even directly referencing the <code class=\"language-text\">window</code> object:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> iInnerHeight <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">;</span></code></pre></div>\n<p>if you‚Äôre using React, you‚Äôll notice this error <em>won‚Äôt</em> be thrown, if you‚Äôre access the <code class=\"language-text\">window</code> object in the <em>componentDidMount()</em> method - but the <em>componentDidMount()</em> lifecycle method is deprecated anyway, so really the truly forward-compatible solutions (for now at least) are as follows in the next section.</p>\n<h1>The Solution(s)</h1>\n<p>So, the solution is simply to check if the window object exists before trying to access it. There are two ways to do this; perhaps one may suit your needs better. (Let‚Äôs use our <code class=\"language-text\">let iInnerHeight = window.innerHeight;</code> example again):</p>\n<h3>Option #1</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> iInnerHeight <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>oError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>oError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>Option #2</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> window <span class=\"token operator\">!==</span> <span class=\"token string\">'undefined'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> iInnerHeight <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span>innerHeight<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Personally I find option #1 a bit cleaner, but again, you may find one or the other to better suit what you are trying to do.</p>\n<p>That‚Äôs all for this post. Enjoy your SSR!</p>\n<p>Cheers! üç∫</p>\n<p>Chris</p>","frontmatter":{"title":"Oh The Horror! The Dreaded \"WebpackError ReferenceError window is not defined\"!","date":"December 08, 2018","draft":false,"starID":101,"postType":"dev"}}},"pageContext":{"slug":"/the-dreaded-referenceerror-window-is-not-defined/","prev":{"fields":{"slug":"/that-was-it-the-first-week-of-the-rest-of-my-life/"},"frontmatter":{"date":"08 December, 2018","title":"That was it. The First Week of the Rest of My Life.","draft":true,"starID":102,"postType":"life","link":"https://chrisfrew.in/that-was-it-the-first-week-of-the-rest-of-my-life/","relativeLink":"/that-was-it-the-first-week-of-the-rest-of-my-life/"}},"next":{"fields":{"slug":"/the-social-contract/"},"frontmatter":{"date":"28 October, 2018","title":"The Software Engineer's Social Contract","draft":false,"starID":29,"postType":"life","link":"https://chrisfrew.in/the-social-contract/","relativeLink":"/the-social-contract/"}}}}